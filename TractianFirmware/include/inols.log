






Started logging.

<<<
Content-Length: 3028

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":1128,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\git\\MyPrograms\\ioT\\ESP32codeBLE","rootUri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE","name":"ESP32codeBLE"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.6.0"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 5789

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","languageId":"cpp","version":1,"text":"#include <Wire.h>                //Biblioteca para I2C\n#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614\n\n#include <BLEDevice.h>\n#include <BLEServer.h>\n#include <BLEUtils.h>\n#include <BLE2902.h>\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic->getValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() > 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i < rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server->setCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server->createService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service->createCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX->addDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service->createCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic->setCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service->start();\n  // Start advertising (descoberta do ESP32)\n  server->getAdvertising()->start();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX->notify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2->setValue(\"Hello!\"); // Sending a test message\n    characteristicTX2->notify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"}}}Content-Length: 264

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":23,"character":21},"end":{"line":23,"character":21}},"context":{"diagnostics":[]}}}Content-Length: 161

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":0,"character":14}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 189

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":0,"character":14}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 189

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":0,"character":15}}}
>>>
Content-Length: 181

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/.clangd","diagnostics":[]}}Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 2633

{"jsonrpc":"2.0","id":2,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":35}},"selectionRange":{"start":{"line":8,"character":19},"end":{"line":8,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":14}},"selectionRange":{"start":{"line":11,"character":8},"end":{"line":11,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":28}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":17}},"selectionRange":{"start":{"line":15,"character":10},"end":{"line":15,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":21}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":27,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":27,"character":6},"end":{"line":27,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":28,"character":4},"end":{"line":30,"character":5}},"selectionRange":{"start":{"line":28,"character":9},"end":{"line":28,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":32,"character":4},"end":{"line":34,"character":5}},"selectionRange":{"start":{"line":32,"character":9},"end":{"line":32,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":38,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":38,"character":6},"end":{"line":38,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":39,"character":4},"end":{"line":75,"character":5}},"selectionRange":{"start":{"line":39,"character":9},"end":{"line":39,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":78,"character":0},"end":{"line":118,"character":1}},"selectionRange":{"start":{"line":78,"character":5},"end":{"line":78,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":120,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":120,"character":5},"end":{"line":120,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
<<<
Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 161

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 262

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":6,"character":20},"end":{"line":6,"character":20}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 62


>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/40","percentage":7}}}Content-Length: 6322

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":27,"character":30},"end":{"line":27,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":27,"character":6},"end":{"line":27,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":27,"character":23},"end":{"line":27,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":27,"character":6},"end":{"line":27,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":28,"character":19},"end":{"line":28,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":32,"character":22},"end":{"line":32,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":38,"character":38},"end":{"line":38,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":38,"character":6},"end":{"line":38,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":38,"character":31},"end":{"line":38,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":38,"character":6},"end":{"line":38,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":39,"character":17},"end":{"line":39,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":85,"character":2},"end":{"line":85,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":87,"character":22},"end":{"line":87,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":88,"character":10},"end":{"line":88,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":90,"character":2},"end":{"line":90,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":90,"character":32},"end":{"line":90,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":94,"character":22},"end":{"line":94,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":97,"character":38},"end":{"line":97,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":100,"character":2},"end":{"line":100,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":102,"character":41},"end":{"line":102,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":109,"character":10},"end":{"line":109,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":114,"character":17},"end":{"line":114,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 2633

{"jsonrpc":"2.0","id":6,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":35}},"selectionRange":{"start":{"line":8,"character":19},"end":{"line":8,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":14}},"selectionRange":{"start":{"line":11,"character":8},"end":{"line":11,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":28}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":17}},"selectionRange":{"start":{"line":15,"character":10},"end":{"line":15,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":21}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":27,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":27,"character":6},"end":{"line":27,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":28,"character":4},"end":{"line":30,"character":5}},"selectionRange":{"start":{"line":28,"character":9},"end":{"line":28,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":32,"character":4},"end":{"line":34,"character":5}},"selectionRange":{"start":{"line":32,"character":9},"end":{"line":32,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":38,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":38,"character":6},"end":{"line":38,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":39,"character":4},"end":{"line":75,"character":5}},"selectionRange":{"start":{"line":39,"character":9},"end":{"line":39,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":78,"character":0},"end":{"line":118,"character":1}},"selectionRange":{"start":{"line":78,"character":5},"end":{"line":78,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":120,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":120,"character":5},"end":{"line":120,"character":9}}}]}Content-Length: 36

{"jsonrpc":"2.0","id":7,"result":[]}
<<<
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 286

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":2},"contentChanges":[{"range":{"start":{"line":6,"character":20},"end":{"line":6,"character":20}},"rangeLength":0,"text":"\n"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 161

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 2633

{"jsonrpc":"2.0","id":8,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":35}},"selectionRange":{"start":{"line":9,"character":19},"end":{"line":9,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":14}},"selectionRange":{"start":{"line":12,"character":8},"end":{"line":12,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":28}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":17}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":21}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":28,"character":0},"end":{"line":36,"character":1}},"selectionRange":{"start":{"line":28,"character":6},"end":{"line":28,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":29,"character":4},"end":{"line":31,"character":5}},"selectionRange":{"start":{"line":29,"character":9},"end":{"line":29,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":33,"character":4},"end":{"line":35,"character":5}},"selectionRange":{"start":{"line":33,"character":9},"end":{"line":33,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":39,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":39,"character":6},"end":{"line":39,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":40,"character":4},"end":{"line":76,"character":5}},"selectionRange":{"start":{"line":40,"character":9},"end":{"line":40,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":119,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":121,"character":0},"end":{"line":156,"character":1}},"selectionRange":{"start":{"line":121,"character":5},"end":{"line":121,"character":9}}}]}
<<<
Content-Length: 284

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":3},"contentChanges":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 161

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 2637

{"jsonrpc":"2.0","id":9,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 5774

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":3},"text":"#include <Wire.h>                //Biblioteca para I2C\n#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614\n\n#include <BLEDevice.h>\n#include <BLEServer.h>\n#include <BLEUtils.h>\n#include <BLE2902.h>\n\n\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic->getValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() > 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i < rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server->setCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server->createService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service->createCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX->addDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service->createCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic->setCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service->start();\n  // Start advertising (descoberta do ESP32)\n  server->getAdvertising()->start();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX->notify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2->setValue(\"Hello!\"); // Sending a test message\n    characteristicTX2->notify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"}}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/40","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/40","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/40","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/40","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/40","percentage":15}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/40","percentage":15}}}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6322

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":28,"character":30},"end":{"line":28,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":28,"character":6},"end":{"line":28,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":28,"character":23},"end":{"line":28,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":28,"character":6},"end":{"line":28,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":33,"character":22},"end":{"line":33,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":39,"character":38},"end":{"line":39,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":39,"character":6},"end":{"line":39,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":39,"character":31},"end":{"line":39,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":39,"character":6},"end":{"line":39,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":40,"character":17},"end":{"line":40,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":86,"character":2},"end":{"line":86,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":88,"character":2},"end":{"line":88,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":88,"character":22},"end":{"line":88,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":10},"end":{"line":89,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":91,"character":2},"end":{"line":91,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":91,"character":32},"end":{"line":91,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":95,"character":22},"end":{"line":95,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":98,"character":38},"end":{"line":98,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":101,"character":2},"end":{"line":101,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":103,"character":41},"end":{"line":103,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":110,"character":10},"end":{"line":110,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":115,"character":17},"end":{"line":115,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/40","percentage":17}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/40","percentage":17}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/40","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/40","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/40","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/40","percentage":22}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/40","percentage":25}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/40","percentage":27}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/40","percentage":27}}}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6324

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}
<<<
Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":4},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":0}},"rangeLength":0,"text":"#"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/40","percentage":30}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/40","percentage":30}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/40","percentage":32}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/40","percentage":32}}}Content-Length: 2638

{"jsonrpc":"2.0","id":10,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 261

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":11,"result":[]}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/40","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/40","percentage":35}}}
<<<
Content-Length: 5775

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":4},"text":"#include <Wire.h>                //Biblioteca para I2C\n#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614\n\n#include <BLEDevice.h>\n#include <BLEServer.h>\n#include <BLEUtils.h>\n#include <BLE2902.h>\n\n#\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic->getValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() > 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i < rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server->setCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server->createService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service->createCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX->addDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service->createCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic->setCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service->start();\n  // Start advertising (descoberta do ESP32)\n  server->getAdvertising()->start();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX->notify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2->setValue(\"Hello!\"); // Sending a test message\n    characteristicTX2->notify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":5},"contentChanges":[{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":1}},"rangeLength":0,"text":"i"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":12,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 2638

{"jsonrpc":"2.0","id":12,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":6},"contentChanges":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":2}},"rangeLength":0,"text":"n"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/40","percentage":37}}}Content-Length: 2638

{"jsonrpc":"2.0","id":13,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":13}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":7},"contentChanges":[{"range":{"start":{"line":8,"character":3},"end":{"line":8,"character":3}},"rangeLength":0,"text":"c"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":14,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 2638

{"jsonrpc":"2.0","id":14,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":8},"contentChanges":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":4}},"rangeLength":0,"text":"l"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 2638

{"jsonrpc":"2.0","id":15,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 261

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":5}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":15}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":9},"contentChanges":[{"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":5}},"rangeLength":0,"text":"i"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":16}}Content-Length: 162

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":17}}Content-Length: 284

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":10},"contentChanges":[{"range":{"start":{"line":8,"character":6},"end":{"line":8,"character":6}},"rangeLength":0,"text":"d"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":18}}Content-Length: 284

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":11},"contentChanges":[{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":7}},"rangeLength":0,"text":"e"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":19,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":16,"result":[]}Content-Length: 2638

{"jsonrpc":"2.0","id":17,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 2638

{"jsonrpc":"2.0","id":18,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6324

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6504

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":7}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/40","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/40","percentage":40}}}Content-Length: 2638

{"jsonrpc":"2.0","id":19,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 261

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":8,"character":8},"end":{"line":8,"character":8}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":19}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":12},"contentChanges":[{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":20}}Content-Length: 162

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":21}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":13},"contentChanges":[{"range":{"start":{"line":8,"character":6},"end":{"line":8,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":14},"contentChanges":[{"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":20,"result":[]}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6504

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":8}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/40","percentage":42}}}Content-Length: 2638

{"jsonrpc":"2.0","id":21,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6504

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":7}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/40","percentage":45}}}Content-Length: 2638

{"jsonrpc":"2.0","id":22,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6504

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":6}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 2638

{"jsonrpc":"2.0","id":23,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":23}}Content-Length: 284

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":15},"contentChanges":[{"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":5}},"rangeLength":0,"text":"u"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":24,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}Content-Length: 284

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":16},"contentChanges":[{"range":{"start":{"line":8,"character":6},"end":{"line":8,"character":6}},"rangeLength":0,"text":"d"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}Content-Length: 284

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":17},"contentChanges":[{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":7}},"rangeLength":0,"text":"e"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 261

{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":8,"character":8},"end":{"line":8,"character":8}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":26}}Content-Length: 284

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":18},"contentChanges":[{"range":{"start":{"line":8,"character":8},"end":{"line":8,"character":8}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":27}}Content-Length: 162

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/40","percentage":47}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/40","percentage":47}}}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6504

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":5}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/40","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/40","percentage":50}}}Content-Length: 2638

{"jsonrpc":"2.0","id":24,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6504

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":6}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/40","percentage":52}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/40","percentage":52}}}Content-Length: 2638

{"jsonrpc":"2.0","id":25,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 6504

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":7}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/40","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/40","percentage":55}}}Content-Length: 2638

{"jsonrpc":"2.0","id":26,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":27,"result":[]}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/40","percentage":57}}}Content-Length: 2638

{"jsonrpc":"2.0","id":28,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 5784

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":18},"text":"#include <Wire.h>                //Biblioteca para I2C\n#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614\n\n#include <BLEDevice.h>\n#include <BLEServer.h>\n#include <BLEUtils.h>\n#include <BLE2902.h>\n\n#include \n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic->getValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() > 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i < rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server->setCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server->createService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service->createCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX->addDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service->createCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic->setCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service->start();\n  // Start advertising (descoberta do ESP32)\n  server->getAdvertising()->start();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX->notify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2->setValue(\"Hello!\"); // Sending a test message\n    characteristicTX2->notify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"}}
>>>
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/40","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/40","percentage":60}}}
<<<
Content-Length: 284

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":19},"contentChanges":[{"range":{"start":{"line":8,"character":9},"end":{"line":8,"character":9}},"rangeLength":0,"text":"<"}]}}Content-Length: 246

{"jsonrpc":"2.0","id":29,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":8,"character":10},"context":{"triggerKind":2,"triggerCharacter":"<"}}}Content-Length: 162

{"jsonrpc":"2.0","id":30,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 26684

{"jsonrpc":"2.0","id":29,"result":{"isIncomplete":true,"items":[{"label":" include/","kind":19,"sortText":"409e8a0dinclude/","filterText":"include/","insertText":"include/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"include/"}},{"label":" Arduino.h\u003e","kind":17,"sortText":"40b67681Arduino.h\u003e","filterText":"Arduino.h\u003e","insertText":"Arduino.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"Arduino.h\u003e"}},{"label":" Client.h\u003e","kind":17,"sortText":"40b67681Client.h\u003e","filterText":"Client.h\u003e","insertText":"Client.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"Client.h\u003e"}},{"label":" Esp.h\u003e","kind":17,"sortText":"40b67681Esp.h\u003e","filterText":"Esp.h\u003e","insertText":"Esp.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"Esp.h\u003e"}},{"label":" FunctionalInterrupt.h\u003e","kind":17,"sortText":"40b67681FunctionalInterrupt.h\u003e","filterText":"FunctionalInterrupt.h\u003e","insertText":"FunctionalInterrupt.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"FunctionalInterrupt.h\u003e"}},{"label":" HardwareSerial.h\u003e","kind":17,"sortText":"40b67681HardwareSerial.h\u003e","filterText":"HardwareSerial.h\u003e","insertText":"HardwareSerial.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"HardwareSerial.h\u003e"}},{"label":" IPAddress.h\u003e","kind":17,"sortText":"40b67681IPAddress.h\u003e","filterText":"IPAddress.h\u003e","insertText":"IPAddress.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"IPAddress.h\u003e"}},{"label":" IPv6Address.h\u003e","kind":17,"sortText":"40b67681IPv6Address.h\u003e","filterText":"IPv6Address.h\u003e","insertText":"IPv6Address.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"IPv6Address.h\u003e"}},{"label":" MD5Builder.h\u003e","kind":17,"sortText":"40b67681MD5Builder.h\u003e","filterText":"MD5Builder.h\u003e","insertText":"MD5Builder.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"MD5Builder.h\u003e"}},{"label":" Print.h\u003e","kind":17,"sortText":"40b67681Print.h\u003e","filterText":"Print.h\u003e","insertText":"Print.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"Print.h\u003e"}},{"label":" Printable.h\u003e","kind":17,"sortText":"40b67681Printable.h\u003e","filterText":"Printable.h\u003e","insertText":"Printable.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"Printable.h\u003e"}},{"label":" README\u003e","kind":17,"sortText":"40b67681README\u003e","filterText":"README\u003e","insertText":"README\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"README\u003e"}},{"label":" Server.h\u003e","kind":17,"sortText":"40b67681Server.h\u003e","filterText":"Server.h\u003e","insertText":"Server.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"Server.h\u003e"}},{"label":" Stream.h\u003e","kind":17,"sortText":"40b67681Stream.h\u003e","filterText":"Stream.h\u003e","insertText":"Stream.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"Stream.h\u003e"}},{"label":" StreamString.h\u003e","kind":17,"sortText":"40b67681StreamString.h\u003e","filterText":"StreamString.h\u003e","insertText":"StreamString.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"StreamString.h\u003e"}},{"label":" Udp.h\u003e","kind":17,"sortText":"40b67681Udp.h\u003e","filterText":"Udp.h\u003e","insertText":"Udp.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"Udp.h\u003e"}},{"label":" WCharacter.h\u003e","kind":17,"sortText":"40b67681WCharacter.h\u003e","filterText":"WCharacter.h\u003e","insertText":"WCharacter.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"WCharacter.h\u003e"}},{"label":" WString.h\u003e","kind":17,"sortText":"40b67681WString.h\u003e","filterText":"WString.h\u003e","insertText":"WString.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"WString.h\u003e"}},{"label":" Wire.h\u003e","kind":17,"sortText":"40b67681Wire.h\u003e","filterText":"Wire.h\u003e","insertText":"Wire.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"Wire.h\u003e"}},{"label":" address.h\u003e","kind":17,"sortText":"40b67681address.h\u003e","filterText":"address.h\u003e","insertText":"address.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"address.h\u003e"}},{"label":" aes_alt.h\u003e","kind":17,"sortText":"40b67681aes_alt.h\u003e","filterText":"aes_alt.h\u003e","insertText":"aes_alt.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"aes_alt.h\u003e"}},{"label":" algorithm\u003e","kind":17,"sortText":"40b67681algorithm\u003e","filterText":"algorithm\u003e","insertText":"algorithm\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"algorithm\u003e"}},{"label":" alloca.h\u003e","kind":17,"sortText":"40b67681alloca.h\u003e","filterText":"alloca.h\u003e","insertText":"alloca.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"alloca.h\u003e"}},{"label":" apps/","kind":19,"sortText":"40b67681apps/","filterText":"apps/","insertText":"apps/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"apps/"}},{"label":" ar.h\u003e","kind":17,"sortText":"40b67681ar.h\u003e","filterText":"ar.h\u003e","insertText":"ar.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"ar.h\u003e"}},{"label":" arch/","kind":19,"sortText":"40b67681arch/","filterText":"arch/","insertText":"arch/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"arch/"}},{"label":" argtable3/","kind":19,"sortText":"40b67681argtable3/","filterText":"argtable3/","insertText":"argtable3/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"argtable3/"}},{"label":" argz.h\u003e","kind":17,"sortText":"40b67681argz.h\u003e","filterText":"argz.h\u003e","insertText":"argz.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"argz.h\u003e"}},{"label":" arpa/","kind":19,"sortText":"40b67681arpa/","filterText":"arpa/","insertText":"arpa/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"arpa/"}},{"label":" array\u003e","kind":17,"sortText":"40b67681array\u003e","filterText":"array\u003e","insertText":"array\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"array\u003e"}},{"label":" ascii.h\u003e","kind":17,"sortText":"40b67681ascii.h\u003e","filterText":"ascii.h\u003e","insertText":"ascii.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"ascii.h\u003e"}},{"label":" asciitab.h\u003e","kind":17,"sortText":"40b67681asciitab.h\u003e","filterText":"asciitab.h\u003e","insertText":"asciitab.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"asciitab.h\u003e"}},{"label":" asio.hpp\u003e","kind":17,"sortText":"40b67681asio.hpp\u003e","filterText":"asio.hpp\u003e","insertText":"asio.hpp\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"asio.hpp\u003e"}},{"label":" asio/","kind":19,"sortText":"40b67681asio/","filterText":"asio/","insertText":"asio/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"asio/"}},{"label":" assert.h\u003e","kind":17,"sortText":"40b67681assert.h\u003e","filterText":"assert.h\u003e","insertText":"assert.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"assert.h\u003e"}},{"label":" async.h\u003e","kind":17,"sortText":"40b67681async.h\u003e","filterText":"async.h\u003e","insertText":"async.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"async.h\u003e"}},{"label":" atomic\u003e","kind":17,"sortText":"40b67681atomic\u003e","filterText":"atomic\u003e","insertText":"atomic\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"atomic\u003e"}},{"label":" auto_ptr.h\u003e","kind":17,"sortText":"40b67681auto_ptr.h\u003e","filterText":"auto_ptr.h\u003e","insertText":"auto_ptr.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"auto_ptr.h\u003e"}},{"label":" backward/","kind":19,"sortText":"40b67681backward/","filterText":"backward/","insertText":"backward/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"backward/"}},{"label":" backward_warning.h\u003e","kind":17,"sortText":"40b67681backward_warning.h\u003e","filterText":"backward_warning.h\u003e","insertText":"backward_warning.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"backward_warning.h\u003e"}},{"label":" base64.h\u003e","kind":17,"sortText":"40b67681base64.h\u003e","filterText":"base64.h\u003e","insertText":"base64.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"base64.h\u003e"}},{"label":" binary.h\u003e","kind":17,"sortText":"40b67681binary.h\u003e","filterText":"binary.h\u003e","insertText":"binary.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"binary.h\u003e"}},{"label":" binders.h\u003e","kind":17,"sortText":"40b67681binders.h\u003e","filterText":"binders.h\u003e","insertText":"binders.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"binders.h\u003e"}},{"label":" bits.h\u003e","kind":17,"sortText":"40b67681bits.h\u003e","filterText":"bits.h\u003e","insertText":"bits.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"bits.h\u003e"}},{"label":" bits/","kind":19,"sortText":"40b67681bits/","filterText":"bits/","insertText":"bits/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"bits/"}},{"label":" bitset\u003e","kind":17,"sortText":"40b67681bitset\u003e","filterText":"bitset\u003e","insertText":"bitset\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"bitset\u003e"}},{"label":" block.h\u003e","kind":17,"sortText":"40b67681block.h\u003e","filterText":"block.h\u003e","insertText":"block.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"block.h\u003e"}},{"label":" bootloader_clock.h\u003e","kind":17,"sortText":"40b67681bootloader_clock.h\u003e","filterText":"bootloader_clock.h\u003e","insertText":"bootloader_clock.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"bootloader_clock.h\u003e"}},{"label":" bootloader_common.h\u003e","kind":17,"sortText":"40b67681bootloader_common.h\u003e","filterText":"bootloader_common.h\u003e","insertText":"bootloader_common.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"bootloader_common.h\u003e"}},{"label":" bootloader_flash_config.h\u003e","kind":17,"sortText":"40b67681bootloader_flash_config.h\u003e","filterText":"bootloader_flash_config.h\u003e","insertText":"bootloader_flash_config.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"bootloader_flash_config.h\u003e"}},{"label":" bootloader_random.h\u003e","kind":17,"sortText":"40b67681bootloader_random.h\u003e","filterText":"bootloader_random.h\u003e","insertText":"bootloader_random.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"bootloader_random.h\u003e"}},{"label":" bootloader_util.h\u003e","kind":17,"sortText":"40b67681bootloader_util.h\u003e","filterText":"bootloader_util.h\u003e","insertText":"bootloader_util.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"bootloader_util.h\u003e"}},{"label":" bt.h\u003e","kind":17,"sortText":"40b67681bt.h\u003e","filterText":"bt.h\u003e","insertText":"bt.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"bt.h\u003e"}},{"label":" byteswap.h\u003e","kind":17,"sortText":"40b67681byteswap.h\u003e","filterText":"byteswap.h\u003e","insertText":"byteswap.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"byteswap.h\u003e"}},{"label":" c++/","kind":19,"sortText":"40b67681c++/","filterText":"c++/","insertText":"c++/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"c++/"}},{"label":" cJSON.h\u003e","kind":17,"sortText":"40b67681cJSON.h\u003e","filterText":"cJSON.h\u003e","insertText":"cJSON.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cJSON.h\u003e"}},{"label":" cJSON_Utils.h\u003e","kind":17,"sortText":"40b67681cJSON_Utils.h\u003e","filterText":"cJSON_Utils.h\u003e","insertText":"cJSON_Utils.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cJSON_Utils.h\u003e"}},{"label":" cassert\u003e","kind":17,"sortText":"40b67681cassert\u003e","filterText":"cassert\u003e","insertText":"cassert\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cassert\u003e"}},{"label":" cat_face_3.h\u003e","kind":17,"sortText":"40b67681cat_face_3.h\u003e","filterText":"cat_face_3.h\u003e","insertText":"cat_face_3.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cat_face_3.h\u003e"}},{"label":" cbuf.h\u003e","kind":17,"sortText":"40b67681cbuf.h\u003e","filterText":"cbuf.h\u003e","insertText":"cbuf.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cbuf.h\u003e"}},{"label":" cc.h\u003e","kind":17,"sortText":"40b67681cc.h\u003e","filterText":"cc.h\u003e","insertText":"cc.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cc.h\u003e"}},{"label":" ccomplex\u003e","kind":17,"sortText":"40b67681ccomplex\u003e","filterText":"ccomplex\u003e","insertText":"ccomplex\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"ccomplex\u003e"}},{"label":" cctype\u003e","kind":17,"sortText":"40b67681cctype\u003e","filterText":"cctype\u003e","insertText":"cctype\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cctype\u003e"}},{"label":" cerrno\u003e","kind":17,"sortText":"40b67681cerrno\u003e","filterText":"cerrno\u003e","insertText":"cerrno\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cerrno\u003e"}},{"label":" cfenv\u003e","kind":17,"sortText":"40b67681cfenv\u003e","filterText":"cfenv\u003e","insertText":"cfenv\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cfenv\u003e"}},{"label":" cfloat\u003e","kind":17,"sortText":"40b67681cfloat\u003e","filterText":"cfloat\u003e","insertText":"cfloat\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cfloat\u003e"}},{"label":" chrono\u003e","kind":17,"sortText":"40b67681chrono\u003e","filterText":"chrono\u003e","insertText":"chrono\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"chrono\u003e"}},{"label":" cinttypes\u003e","kind":17,"sortText":"40b67681cinttypes\u003e","filterText":"cinttypes\u003e","insertText":"cinttypes\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cinttypes\u003e"}},{"label":" ciso646\u003e","kind":17,"sortText":"40b67681ciso646\u003e","filterText":"ciso646\u003e","insertText":"ciso646\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"ciso646\u003e"}},{"label":" climits\u003e","kind":17,"sortText":"40b67681climits\u003e","filterText":"climits\u003e","insertText":"climits\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"climits\u003e"}},{"label":" clocale\u003e","kind":17,"sortText":"40b67681clocale\u003e","filterText":"clocale\u003e","insertText":"clocale\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"clocale\u003e"}},{"label":" cmath\u003e","kind":17,"sortText":"40b67681cmath\u003e","filterText":"cmath\u003e","insertText":"cmath\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cmath\u003e"}},{"label":" coap.h\u003e","kind":17,"sortText":"40b67681coap.h\u003e","filterText":"coap.h\u003e","insertText":"coap.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"coap.h\u003e"}},{"label":" coap/","kind":19,"sortText":"40b67681coap/","filterText":"coap/","insertText":"coap/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"coap/"}},{"label":" coap_config.h\u003e","kind":17,"sortText":"40b67681coap_config.h\u003e","filterText":"coap_config.h\u003e","insertText":"coap_config.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"coap_config.h\u003e"}},{"label":" coap_config_posix.h\u003e","kind":17,"sortText":"40b67681coap_config_posix.h\u003e","filterText":"coap_config_posix.h\u003e","insertText":"coap_config_posix.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"coap_config_posix.h\u003e"}},{"label":" coap_io.h\u003e","kind":17,"sortText":"40b67681coap_io.h\u003e","filterText":"coap_io.h\u003e","insertText":"coap_io.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"coap_io.h\u003e"}},{"label":" coap_time.h\u003e","kind":17,"sortText":"40b67681coap_time.h\u003e","filterText":"coap_time.h\u003e","insertText":"coap_time.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"coap_time.h\u003e"}},{"label":" codecvt\u003e","kind":17,"sortText":"40b67681codecvt\u003e","filterText":"codecvt\u003e","insertText":"codecvt\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"codecvt\u003e"}},{"label":" complex.h\u003e","kind":17,"sortText":"40b67681complex.h\u003e","filterText":"complex.h\u003e","insertText":"complex.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"complex.h\u003e"}},{"label":" complex\u003e","kind":17,"sortText":"40b67681complex\u003e","filterText":"complex\u003e","insertText":"complex\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"complex\u003e"}},{"label":" condition_variable\u003e","kind":17,"sortText":"40b67681condition_variable\u003e","filterText":"condition_variable\u003e","insertText":"condition_variable\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"condition_variable\u003e"}},{"label":" config.h\u003e","kind":17,"sortText":"40b67681config.h\u003e","filterText":"config.h\u003e","insertText":"config.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"config.h\u003e"}},{"label":" core_version.h\u003e","kind":17,"sortText":"40b67681core_version.h\u003e","filterText":"core_version.h\u003e","insertText":"core_version.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"core_version.h\u003e"}},{"label":" crypto/","kind":19,"sortText":"40b67681crypto/","filterText":"crypto/","insertText":"crypto/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"crypto/"}},{"label":" csetjmp\u003e","kind":17,"sortText":"40b67681csetjmp\u003e","filterText":"csetjmp\u003e","insertText":"csetjmp\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"csetjmp\u003e"}},{"label":" csignal\u003e","kind":17,"sortText":"40b67681csignal\u003e","filterText":"csignal\u003e","insertText":"csignal\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"csignal\u003e"}},{"label":" cstdalign\u003e","kind":17,"sortText":"40b67681cstdalign\u003e","filterText":"cstdalign\u003e","insertText":"cstdalign\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cstdalign\u003e"}},{"label":" cstdarg\u003e","kind":17,"sortText":"40b67681cstdarg\u003e","filterText":"cstdarg\u003e","insertText":"cstdarg\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cstdarg\u003e"}},{"label":" cstdbool\u003e","kind":17,"sortText":"40b67681cstdbool\u003e","filterText":"cstdbool\u003e","insertText":"cstdbool\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cstdbool\u003e"}},{"label":" cstddef\u003e","kind":17,"sortText":"40b67681cstddef\u003e","filterText":"cstddef\u003e","insertText":"cstddef\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cstddef\u003e"}},{"label":" cstdint\u003e","kind":17,"sortText":"40b67681cstdint\u003e","filterText":"cstdint\u003e","insertText":"cstdint\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cstdint\u003e"}},{"label":" cstdio\u003e","kind":17,"sortText":"40b67681cstdio\u003e","filterText":"cstdio\u003e","insertText":"cstdio\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cstdio\u003e"}},{"label":" cstdlib\u003e","kind":17,"sortText":"40b67681cstdlib\u003e","filterText":"cstdlib\u003e","insertText":"cstdlib\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cstdlib\u003e"}},{"label":" cstring\u003e","kind":17,"sortText":"40b67681cstring\u003e","filterText":"cstring\u003e","insertText":"cstring\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"cstring\u003e"}},{"label":" ctgmath\u003e","kind":17,"sortText":"40b67681ctgmath\u003e","filterText":"ctgmath\u003e","insertText":"ctgmath\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"ctgmath\u003e"}},{"label":" ctime\u003e","kind":17,"sortText":"40b67681ctime\u003e","filterText":"ctime\u003e","insertText":"ctime\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"ctime\u003e"}},{"label":" ctype.h\u003e","kind":17,"sortText":"40b67681ctype.h\u003e","filterText":"ctype.h\u003e","insertText":"ctype.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"newText":"ctype.h\u003e"}}]}}Content-Length: 2638

{"jsonrpc":"2.0","id":30,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 263

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":31,"result":[]}
<<<
Content-Length: 286

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":20},"contentChanges":[{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"rangeLength":0,"text":"s"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/41","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/41","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/41","percentage":60}}}Content-Length: 2638

{"jsonrpc":"2.0","id":32,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":32}}Content-Length: 286

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":21},"contentChanges":[{"range":{"start":{"line":8,"character":11},"end":{"line":8,"character":11}},"rangeLength":0,"text":"d"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":33,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":33}}Content-Length: 286

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":22},"contentChanges":[{"range":{"start":{"line":8,"character":12},"end":{"line":8,"character":12}},"rangeLength":0,"text":"f"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/41","percentage":63}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/41","percentage":65}}}Content-Length: 2638

{"jsonrpc":"2.0","id":33,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 2638

{"jsonrpc":"2.0","id":34,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 263

{"jsonrpc":"2.0","id":35,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":8,"character":13},"end":{"line":8,"character":13}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}Content-Length: 285

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":23},"contentChanges":[{"range":{"start":{"line":8,"character":12},"end":{"line":8,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":35}}Content-Length: 162

{"jsonrpc":"2.0","id":36,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":36}}Content-Length: 285

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":24},"contentChanges":[{"range":{"start":{"line":8,"character":11},"end":{"line":8,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":37,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 223

{"jsonrpc":"2.0","id":38,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":8,"character":11},"context":{"triggerKind":3}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":35,"result":[]}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/41","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/41","percentage":68}}}Content-Length: 2638

{"jsonrpc":"2.0","id":36,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/41","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/41","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/41","percentage":73}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/41","percentage":73}}}Content-Length: 2638

{"jsonrpc":"2.0","id":37,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 22892

{"jsonrpc":"2.0","id":38,"result":{"isIncomplete":false,"items":[{"label":" Server.h\u003e","kind":17,"sortText":"40b67681Server.h\u003e","filterText":"Server.h\u003e","insertText":"Server.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"Server.h\u003e"}},{"label":" Stream.h\u003e","kind":17,"sortText":"40b67681Stream.h\u003e","filterText":"Stream.h\u003e","insertText":"Stream.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"Stream.h\u003e"}},{"label":" StreamString.h\u003e","kind":17,"sortText":"40b67681StreamString.h\u003e","filterText":"StreamString.h\u003e","insertText":"StreamString.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"StreamString.h\u003e"}},{"label":" sched.h\u003e","kind":17,"sortText":"40b67681sched.h\u003e","filterText":"sched.h\u003e","insertText":"sched.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sched.h\u003e"}},{"label":" scoped_allocator\u003e","kind":17,"sortText":"40b67681scoped_allocator\u003e","filterText":"scoped_allocator\u003e","insertText":"scoped_allocator\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"scoped_allocator\u003e"}},{"label":" sdkconfig.h\u003e","kind":17,"sortText":"40b67681sdkconfig.h\u003e","filterText":"sdkconfig.h\u003e","insertText":"sdkconfig.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sdkconfig.h\u003e"}},{"label":" sdmmc_cmd.h\u003e","kind":17,"sortText":"40b67681sdmmc_cmd.h\u003e","filterText":"sdmmc_cmd.h\u003e","insertText":"sdmmc_cmd.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sdmmc_cmd.h\u003e"}},{"label":" search.h\u003e","kind":17,"sortText":"40b67681search.h\u003e","filterText":"search.h\u003e","insertText":"search.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"search.h\u003e"}},{"label":" sensor.h\u003e","kind":17,"sortText":"40b67681sensor.h\u003e","filterText":"sensor.h\u003e","insertText":"sensor.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sensor.h\u003e"}},{"label":" set\u003e","kind":17,"sortText":"40b67681set\u003e","filterText":"set\u003e","insertText":"set\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"set\u003e"}},{"label":" setjmp.h\u003e","kind":17,"sortText":"40b67681setjmp.h\u003e","filterText":"setjmp.h\u003e","insertText":"setjmp.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"setjmp.h\u003e"}},{"label":" sha1_alt.h\u003e","kind":17,"sortText":"40b67681sha1_alt.h\u003e","filterText":"sha1_alt.h\u003e","insertText":"sha1_alt.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sha1_alt.h\u003e"}},{"label":" sha256_alt.h\u003e","kind":17,"sortText":"40b67681sha256_alt.h\u003e","filterText":"sha256_alt.h\u003e","insertText":"sha256_alt.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sha256_alt.h\u003e"}},{"label":" sha512_alt.h\u003e","kind":17,"sortText":"40b67681sha512_alt.h\u003e","filterText":"sha512_alt.h\u003e","insertText":"sha512_alt.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sha512_alt.h\u003e"}},{"label":" shared_mutex\u003e","kind":17,"sortText":"40b67681shared_mutex\u003e","filterText":"shared_mutex\u003e","insertText":"shared_mutex\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"shared_mutex\u003e"}},{"label":" signal.h\u003e","kind":17,"sortText":"40b67681signal.h\u003e","filterText":"signal.h\u003e","insertText":"signal.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"signal.h\u003e"}},{"label":" siphash.h\u003e","kind":17,"sortText":"40b67681siphash.h\u003e","filterText":"siphash.h\u003e","insertText":"siphash.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"siphash.h\u003e"}},{"label":" smartconfig_ack.h\u003e","kind":17,"sortText":"40b67681smartconfig_ack.h\u003e","filterText":"smartconfig_ack.h\u003e","insertText":"smartconfig_ack.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"smartconfig_ack.h\u003e"}},{"label":" sntp.h\u003e","kind":17,"sortText":"40b67681sntp.h\u003e","filterText":"sntp.h\u003e","insertText":"sntp.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sntp.h\u003e"}},{"label":" sntp/","kind":19,"sortText":"40b67681sntp/","filterText":"sntp/","insertText":"sntp/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sntp/"}},{"label":" soc/","kind":19,"sortText":"40b67681soc/","filterText":"soc/","insertText":"soc/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"soc/"}},{"label":" sodium.h\u003e","kind":17,"sortText":"40b67681sodium.h\u003e","filterText":"sodium.h\u003e","insertText":"sodium.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sodium.h\u003e"}},{"label":" sodium/","kind":19,"sortText":"40b67681sodium/","filterText":"sodium/","insertText":"sodium/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sodium/"}},{"label":" spawn.h\u003e","kind":17,"sortText":"40b67681spawn.h\u003e","filterText":"spawn.h\u003e","insertText":"spawn.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"spawn.h\u003e"}},{"label":" spiffs_config.h\u003e","kind":17,"sortText":"40b67681spiffs_config.h\u003e","filterText":"spiffs_config.h\u003e","insertText":"spiffs_config.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"spiffs_config.h\u003e"}},{"label":" sstream\u003e","kind":17,"sortText":"40b67681sstream\u003e","filterText":"sstream\u003e","insertText":"sstream\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sstream\u003e"}},{"label":" stack\u003e","kind":17,"sortText":"40b67681stack\u003e","filterText":"stack\u003e","insertText":"stack\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stack\u003e"}},{"label":" stdalign.h\u003e","kind":17,"sortText":"40b67681stdalign.h\u003e","filterText":"stdalign.h\u003e","insertText":"stdalign.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stdalign.h\u003e"}},{"label":" stdarg.h\u003e","kind":17,"sortText":"40b67681stdarg.h\u003e","filterText":"stdarg.h\u003e","insertText":"stdarg.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stdarg.h\u003e"}},{"label":" stdatomic.h\u003e","kind":17,"sortText":"40b67681stdatomic.h\u003e","filterText":"stdatomic.h\u003e","insertText":"stdatomic.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stdatomic.h\u003e"}},{"label":" stdbool.h\u003e","kind":17,"sortText":"40b67681stdbool.h\u003e","filterText":"stdbool.h\u003e","insertText":"stdbool.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stdbool.h\u003e"}},{"label":" stddef.h\u003e","kind":17,"sortText":"40b67681stddef.h\u003e","filterText":"stddef.h\u003e","insertText":"stddef.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stddef.h\u003e"}},{"label":" stdexcept\u003e","kind":17,"sortText":"40b67681stdexcept\u003e","filterText":"stdexcept\u003e","insertText":"stdexcept\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stdexcept\u003e"}},{"label":" stdfix.h\u003e","kind":17,"sortText":"40b67681stdfix.h\u003e","filterText":"stdfix.h\u003e","insertText":"stdfix.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stdfix.h\u003e"}},{"label":" stdint-gcc.h\u003e","kind":17,"sortText":"40b67681stdint-gcc.h\u003e","filterText":"stdint-gcc.h\u003e","insertText":"stdint-gcc.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stdint-gcc.h\u003e"}},{"label":" stdint.h\u003e","kind":17,"sortText":"40b67681stdint.h\u003e","filterText":"stdint.h\u003e","insertText":"stdint.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stdint.h\u003e"}},{"label":" stdio.h\u003e","kind":17,"sortText":"40b67681stdio.h\u003e","filterText":"stdio.h\u003e","insertText":"stdio.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stdio.h\u003e"}},{"label":" stdio_ext.h\u003e","kind":17,"sortText":"40b67681stdio_ext.h\u003e","filterText":"stdio_ext.h\u003e","insertText":"stdio_ext.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stdio_ext.h\u003e"}},{"label":" stdlib.h\u003e","kind":17,"sortText":"40b67681stdlib.h\u003e","filterText":"stdlib.h\u003e","insertText":"stdlib.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stdlib.h\u003e"}},{"label":" stdlib_noniso.h\u003e","kind":17,"sortText":"40b67681stdlib_noniso.h\u003e","filterText":"stdlib_noniso.h\u003e","insertText":"stdlib_noniso.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stdlib_noniso.h\u003e"}},{"label":" stdnoreturn.h\u003e","kind":17,"sortText":"40b67681stdnoreturn.h\u003e","filterText":"stdnoreturn.h\u003e","insertText":"stdnoreturn.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"stdnoreturn.h\u003e"}},{"label":" str.h\u003e","kind":17,"sortText":"40b67681str.h\u003e","filterText":"str.h\u003e","insertText":"str.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"str.h\u003e"}},{"label":" streambuf\u003e","kind":17,"sortText":"40b67681streambuf\u003e","filterText":"streambuf\u003e","insertText":"streambuf\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"streambuf\u003e"}},{"label":" string.h\u003e","kind":17,"sortText":"40b67681string.h\u003e","filterText":"string.h\u003e","insertText":"string.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"string.h\u003e"}},{"label":" string\u003e","kind":17,"sortText":"40b67681string\u003e","filterText":"string\u003e","insertText":"string\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"string\u003e"}},{"label":" strings.h\u003e","kind":17,"sortText":"40b67681strings.h\u003e","filterText":"strings.h\u003e","insertText":"strings.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"strings.h\u003e"}},{"label":" strstream\u003e","kind":17,"sortText":"40b67681strstream\u003e","filterText":"strstream\u003e","insertText":"strstream\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"strstream\u003e"}},{"label":" subscribe.h\u003e","kind":17,"sortText":"40b67681subscribe.h\u003e","filterText":"subscribe.h\u003e","insertText":"subscribe.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"subscribe.h\u003e"}},{"label":" sys/","kind":19,"sortText":"40b67681sys/","filterText":"sys/","insertText":"sys/","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sys/"}},{"label":" sys_arch.h\u003e","kind":17,"sortText":"40b67681sys_arch.h\u003e","filterText":"sys_arch.h\u003e","insertText":"sys_arch.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"sys_arch.h\u003e"}},{"label":" syslimits.h\u003e","kind":17,"sortText":"40b67681syslimits.h\u003e","filterText":"syslimits.h\u003e","insertText":"syslimits.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"syslimits.h\u003e"}},{"label":" system_error\u003e","kind":17,"sortText":"40b67681system_error\u003e","filterText":"system_error\u003e","insertText":"system_error\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"system_error\u003e"}},{"label":" HardwareSerial.h\u003e","kind":17,"sortText":"80000000HardwareSerial.h\u003e","filterText":"HardwareSerial.h\u003e","insertText":"HardwareSerial.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"HardwareSerial.h\u003e"}},{"label":" WString.h\u003e","kind":17,"sortText":"80000000WString.h\u003e","filterText":"WString.h\u003e","insertText":"WString.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"WString.h\u003e"}},{"label":" cJSON.h\u003e","kind":17,"sortText":"80000000cJSON.h\u003e","filterText":"cJSON.h\u003e","insertText":"cJSON.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"cJSON.h\u003e"}},{"label":" cJSON_Utils.h\u003e","kind":17,"sortText":"80000000cJSON_Utils.h\u003e","filterText":"cJSON_Utils.h\u003e","insertText":"cJSON_Utils.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"cJSON_Utils.h\u003e"}},{"label":" esp32-hal-sigmadelta.h\u003e","kind":17,"sortText":"80000000esp32-hal-sigmadelta.h\u003e","filterText":"esp32-hal-sigmadelta.h\u003e","insertText":"esp32-hal-sigmadelta.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp32-hal-sigmadelta.h\u003e"}},{"label":" esp32-hal-spi.h\u003e","kind":17,"sortText":"80000000esp32-hal-spi.h\u003e","filterText":"esp32-hal-spi.h\u003e","insertText":"esp32-hal-spi.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp32-hal-spi.h\u003e"}},{"label":" esp_dbg_stubs.h\u003e","kind":17,"sortText":"80000000esp_dbg_stubs.h\u003e","filterText":"esp_dbg_stubs.h\u003e","insertText":"esp_dbg_stubs.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_dbg_stubs.h\u003e"}},{"label":" esp_deep_sleep.h\u003e","kind":17,"sortText":"80000000esp_deep_sleep.h\u003e","filterText":"esp_deep_sleep.h\u003e","insertText":"esp_deep_sleep.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_deep_sleep.h\u003e"}},{"label":" esp_http_server.h\u003e","kind":17,"sortText":"80000000esp_http_server.h\u003e","filterText":"esp_http_server.h\u003e","insertText":"esp_http_server.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_http_server.h\u003e"}},{"label":" esp_https_server.h\u003e","kind":17,"sortText":"80000000esp_https_server.h\u003e","filterText":"esp_https_server.h\u003e","insertText":"esp_https_server.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_https_server.h\u003e"}},{"label":" esp_secure_boot.h\u003e","kind":17,"sortText":"80000000esp_secure_boot.h\u003e","filterText":"esp_secure_boot.h\u003e","insertText":"esp_secure_boot.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_secure_boot.h\u003e"}},{"label":" esp_sleep.h\u003e","kind":17,"sortText":"80000000esp_sleep.h\u003e","filterText":"esp_sleep.h\u003e","insertText":"esp_sleep.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_sleep.h\u003e"}},{"label":" esp_smartconfig.h\u003e","kind":17,"sortText":"80000000esp_smartconfig.h\u003e","filterText":"esp_smartconfig.h\u003e","insertText":"esp_smartconfig.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_smartconfig.h\u003e"}},{"label":" esp_sntp.h\u003e","kind":17,"sortText":"80000000esp_sntp.h\u003e","filterText":"esp_sntp.h\u003e","insertText":"esp_sntp.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_sntp.h\u003e"}},{"label":" esp_spi_flash.h\u003e","kind":17,"sortText":"80000000esp_spi_flash.h\u003e","filterText":"esp_spi_flash.h\u003e","insertText":"esp_spi_flash.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_spi_flash.h\u003e"}},{"label":" esp_spiffs.h\u003e","kind":17,"sortText":"80000000esp_spiffs.h\u003e","filterText":"esp_spiffs.h\u003e","insertText":"esp_spiffs.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_spiffs.h\u003e"}},{"label":" esp_spiram.h\u003e","kind":17,"sortText":"80000000esp_spiram.h\u003e","filterText":"esp_spiram.h\u003e","insertText":"esp_spiram.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_spiram.h\u003e"}},{"label":" esp_spp_api.h\u003e","kind":17,"sortText":"80000000esp_spp_api.h\u003e","filterText":"esp_spp_api.h\u003e","insertText":"esp_spp_api.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_spp_api.h\u003e"}},{"label":" esp_ssc.h\u003e","kind":17,"sortText":"80000000esp_ssc.h\u003e","filterText":"esp_ssc.h\u003e","insertText":"esp_ssc.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_ssc.h\u003e"}},{"label":" esp_system.h\u003e","kind":17,"sortText":"80000000esp_system.h\u003e","filterText":"esp_system.h\u003e","insertText":"esp_system.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_system.h\u003e"}},{"label":" esp_transport_ssl.h\u003e","kind":17,"sortText":"80000000esp_transport_ssl.h\u003e","filterText":"esp_transport_ssl.h\u003e","insertText":"esp_transport_ssl.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"esp_transport_ssl.h\u003e"}},{"label":" hash_set\u003e","kind":17,"sortText":"80000000hash_set\u003e","filterText":"hash_set\u003e","insertText":"hash_set\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"hash_set\u003e"}},{"label":" http_server.h\u003e","kind":17,"sortText":"80000000http_server.h\u003e","filterText":"http_server.h\u003e","insertText":"http_server.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"http_server.h\u003e"}},{"label":" mqtt_supported_features.h\u003e","kind":17,"sortText":"80000000mqtt_supported_features.h\u003e","filterText":"mqtt_supported_features.h\u003e","insertText":"mqtt_supported_features.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"mqtt_supported_features.h\u003e"}},{"label":" protocomm_security.h\u003e","kind":17,"sortText":"80000000protocomm_security.h\u003e","filterText":"protocomm_security.h\u003e","insertText":"protocomm_security.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"protocomm_security.h\u003e"}},{"label":" protocomm_security0.h\u003e","kind":17,"sortText":"80000000protocomm_security0.h\u003e","filterText":"protocomm_security0.h\u003e","insertText":"protocomm_security0.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"protocomm_security0.h\u003e"}},{"label":" protocomm_security1.h\u003e","kind":17,"sortText":"80000000protocomm_security1.h\u003e","filterText":"protocomm_security1.h\u003e","insertText":"protocomm_security1.h\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"protocomm_security1.h\u003e"}},{"label":" unordered_set\u003e","kind":17,"sortText":"80000000unordered_set\u003e","filterText":"unordered_set\u003e","insertText":"unordered_set\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"unordered_set\u003e"}}]}}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":37}}Content-Length: 285

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":25},"contentChanges":[{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":38}}Content-Length: 162

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 263

{"jsonrpc":"2.0","id":40,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":39}}Content-Length: 284

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":26},"contentChanges":[{"range":{"start":{"line":8,"character":9},"end":{"line":8,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}Content-Length: 162

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6324

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/41","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/41","percentage":75}}}Content-Length: 2638

{"jsonrpc":"2.0","id":39,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":40,"result":[]}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/41","percentage":78}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/41","percentage":78}}}Content-Length: 2638

{"jsonrpc":"2.0","id":41,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":41}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":27},"contentChanges":[{"range":{"start":{"line":8,"character":8},"end":{"line":8,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 261

{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":8,"character":8},"end":{"line":8,"character":8}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":42}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":28},"contentChanges":[{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":43}}Content-Length: 162

{"jsonrpc":"2.0","id":44,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 2638

{"jsonrpc":"2.0","id":42,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":43,"result":[]}Content-Length: 2638

{"jsonrpc":"2.0","id":44,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":44}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":29},"contentChanges":[{"range":{"start":{"line":8,"character":6},"end":{"line":8,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":45,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":45}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":30},"contentChanges":[{"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":46}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":31},"contentChanges":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":47,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/41","percentage":80}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/41","percentage":80}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/41","percentage":82}}}Content-Length: 2638

{"jsonrpc":"2.0","id":45,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/41","percentage":85}}}Content-Length: 2638

{"jsonrpc":"2.0","id":46,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/41","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/41","percentage":87}}}Content-Length: 2638

{"jsonrpc":"2.0","id":47,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":47}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":32},"contentChanges":[{"range":{"start":{"line":8,"character":3},"end":{"line":8,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":48}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":33},"contentChanges":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":49,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":49}}Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":34},"contentChanges":[{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":2}},"rangeLength":1,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 261

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6324

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/41","percentage":90}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/41","percentage":90}}}Content-Length: 2638

{"jsonrpc":"2.0","id":48,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/41","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/41","percentage":95}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/41","percentage":97}}}Content-Length: 2638

{"jsonrpc":"2.0","id":49,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 2638

{"jsonrpc":"2.0","id":50,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":51,"result":[]}
<<<
Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":35},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"rangeLength":1,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 2638

{"jsonrpc":"2.0","id":52,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6504

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":4}},"severity":1,"code":"pp_invalid_directive","source":"clang","message":"Invalid preprocessing directive"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}
<<<
Content-Length: 5775

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":35},"text":"#include <Wire.h>                //Biblioteca para I2C\n#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614\n\n#include <BLEDevice.h>\n#include <BLEServer.h>\n#include <BLEUtils.h>\n#include <BLE2902.h>\n\n\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic->getValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() > 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i < rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server->setCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server->createService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service->createCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX->addDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service->createCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic->setCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service->start();\n  // Start advertising (descoberta do ESP32)\n  server->getAdvertising()->start();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX->notify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2->setValue(\"Hello!\"); // Sending a test message\n    characteristicTX2->notify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"}}
>>>
Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6324

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6324

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 284

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":36},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":0}},"rangeLength":0,"text":"%"}]}}Content-Length: 162

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 2419

{"jsonrpc":"2.0","id":53,"result":[{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 261

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":54,"result":[]}
<<<
Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":37},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"rangeLength":1,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 2638

{"jsonrpc":"2.0","id":55,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 5775

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":37},"text":"#include <Wire.h>                //Biblioteca para I2C\n#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614\n\n#include <BLEDevice.h>\n#include <BLEServer.h>\n#include <BLEUtils.h>\n#include <BLE2902.h>\n\n\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic->getValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() > 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i < rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server->setCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server->createService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service->createCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX->addDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service->createCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic->setCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service->start();\n  // Start advertising (descoberta do ESP32)\n  server->getAdvertising()->start();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX->notify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2->setValue(\"Hello!\"); // Sending a test message\n    characteristicTX2->notify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"}}
>>>
Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 7108

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'characteristicTX'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":2},"end":{"line":99,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'characteristicTX'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"},{"range":{"start":{"line":138,"character":10},"end":{"line":138,"character":26}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'characteristicTX'"},{"range":{"start":{"line":139,"character":10},"end":{"line":139,"character":26}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'characteristicTX'"}]}}Content-Length: 118

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 6324

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}






Started logging.

<<<
Content-Length: 3029

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":15572,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\git\\MyPrograms\\ioT\\ESP32codeBLE","rootUri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE","name":"ESP32codeBLE"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.6.0"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 5793

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","languageId":"cpp","version":1,"text":"#include <Wire.h>                //Biblioteca para I2C\n#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614\n\n#include <BLEDevice.h>\n#include <BLEServer.h>\n#include <BLEUtils.h>\n#include <BLE2902.h>\n\n\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic->getValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() > 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i < rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server->setCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server->createService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service->createCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX->addDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service->createCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic->setCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service->start();\n  // Start advertising (descoberta do ESP32)\n  server->getAdvertising()->start();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX->notify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2->setValue(\"Hello!\"); // Sending a test message\n    characteristicTX2->notify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"}}}Content-Length: 264

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":69,"character":20},"end":{"line":69,"character":20}},"context":{"diagnostics":[]}}}Content-Length: 161

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 181

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/.clangd","diagnostics":[]}}Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 2637

{"jsonrpc":"2.0","id":2,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/40","percentage":2}}}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6324

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":69,"character":20},"end":{"line":69,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":3,"result":[]}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/40","percentage":5}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/40","percentage":5}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/40","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/40","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/40","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/40","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/40","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/40","percentage":15}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/40","percentage":15}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/40","percentage":17}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/40","percentage":17}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/40","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/40","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/40","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/40","percentage":22}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/40","percentage":25}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/40","percentage":25}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/40","percentage":27}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/40","percentage":27}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/40","percentage":30}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/40","percentage":30}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/40","percentage":32}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/40","percentage":32}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/40","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/40","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/40","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/40","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/40","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/40","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/40","percentage":42}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/40","percentage":42}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/40","percentage":45}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/40","percentage":45}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/40","percentage":47}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/40","percentage":47}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/40","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/40","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/40","percentage":52}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/40","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/40","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/40","percentage":57}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/40","percentage":57}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/40","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/40","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/40","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/40","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/40","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/40","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/40","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/40","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/40","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/40","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/40","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/40","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/40","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/40","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/40","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/40","percentage":80}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/40","percentage":80}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/40","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/40","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/40","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/40","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/40","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/40","percentage":90}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/40","percentage":90}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/40","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/40","percentage":95}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/40","percentage":97}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 189

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":1,"character":15}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":1,"character":15}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":5,"result":[]}
<<<
Content-Length: 443

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"message":"'SparkFunMLX90614.h' file not found","severity":1,"code":"pp_file_not_found","source":"clang"}]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":6,"result":[]}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":12,"character":19}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":7,"result":null}
<<<
Content-Length: 195

{"jsonrpc":"2.0","id":8,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":12,"character":19}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":12,"character":19}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":9,"result":null}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":1,"character":51}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":10,"result":null}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":1,"character":53}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":11,"result":null}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":15,"character":42}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":12,"result":null}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":13,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":15,"character":49}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":13,"result":null}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":14,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":42,"character":79}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":14,"result":null}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":42,"character":49}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":15,"result":null}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":16,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":89,"character":22}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":16,"result":null}
<<<
Content-Length: 475

{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"context":{"diagnostics":[{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"message":"Use of undeclared identifier 'BLEDevice'","severity":1,"code":"undeclared_var_use","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":17,"result":[]}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":18,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":66,"character":37}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":18,"result":null}
<<<
Content-Length: 263

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":3,"character":22},"end":{"line":3,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":19,"result":[]}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":20,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":1,"character":26}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":20,"result":null}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":21,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":0,"character":21}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":21,"result":null}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":22,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":0,"character":21}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":22,"result":null}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":1,"character":27}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":23,"result":null}
<<<
Content-Length: 444

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":29}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"message":"'SparkFunMLX90614.h' file not found","severity":1,"code":"pp_file_not_found","source":"clang"}]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":24,"result":[]}
<<<
Content-Length: 443

{"jsonrpc":"2.0","id":25,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"message":"'SparkFunMLX90614.h' file not found","severity":1,"code":"pp_file_not_found","source":"clang"}]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":25,"result":[]}
<<<
Content-Length: 195

{"jsonrpc":"2.0","id":26,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":1,"character":10}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":26,"result":[]}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":27,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":24,"character":65}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":27,"result":null}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":28,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":24,"character":65}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":28,"result":null}






Started logging.

<<<
Content-Length: 3029

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":19640,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\git\\MyPrograms\\ioT\\ESP32codeBLE","rootUri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE","name":"ESP32codeBLE"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.6.0"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 5793

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","languageId":"cpp","version":1,"text":"#include <Wire.h>                //Biblioteca para I2C\n#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614\n\n#include <BLEDevice.h>\n#include <BLEServer.h>\n#include <BLEUtils.h>\n#include <BLE2902.h>\n\n\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic->getValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() > 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i < rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server->setCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server->createService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service->createCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX->addDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service->createCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic->setCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service->start();\n  // Start advertising (descoberta do ESP32)\n  server->getAdvertising()->start();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX->notify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2->setValue(\"Hello!\"); // Sending a test message\n    characteristicTX2->notify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"}}}Content-Length: 264

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":69,"character":20},"end":{"line":69,"character":20}},"context":{"diagnostics":[]}}}Content-Length: 161

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 161

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 181

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/.clangd","diagnostics":[]}}Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 2637

{"jsonrpc":"2.0","id":2,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6324

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'SparkFunMLX90614.h' file not found"},{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":29,"character":30},"end":{"line":29,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":40,"character":31},"end":{"line":40,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":89,"character":22},"end":{"line":89,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":90,"character":10},"end":{"line":90,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":92,"character":32},"end":{"line":92,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":96,"character":22},"end":{"line":96,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":99,"character":38},"end":{"line":99,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":104,"character":41},"end":{"line":104,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":111,"character":10},"end":{"line":111,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":116,"character":17},"end":{"line":116,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 2637

{"jsonrpc":"2.0","id":3,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":35}},"selectionRange":{"start":{"line":10,"character":19},"end":{"line":10,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":14}},"selectionRange":{"start":{"line":13,"character":8},"end":{"line":13,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":28}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"selectionRange":{"start":{"line":18,"character":10},"end":{"line":18,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":29,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":29,"character":6},"end":{"line":29,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":30,"character":4},"end":{"line":32,"character":5}},"selectionRange":{"start":{"line":30,"character":9},"end":{"line":30,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":34,"character":4},"end":{"line":36,"character":5}},"selectionRange":{"start":{"line":34,"character":9},"end":{"line":34,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":40,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":40,"character":6},"end":{"line":40,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":41,"character":4},"end":{"line":77,"character":5}},"selectionRange":{"start":{"line":41,"character":9},"end":{"line":41,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":157,"character":1}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/40","percentage":15}}}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":69,"character":20},"end":{"line":69,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":4,"result":[]}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/40","percentage":17}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/40","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/40","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/40","percentage":22}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/40","percentage":25}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/40","percentage":25}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/40","percentage":27}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/40","percentage":27}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/40","percentage":30}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/40","percentage":32}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/40","percentage":32}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/40","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/40","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/40","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/40","percentage":37}}}
<<<
Content-Length: 189

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":1,"character":53}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/40","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/40","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/40","percentage":42}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/40","percentage":42}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/40","percentage":45}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/40","percentage":45}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/40","percentage":47}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/40","percentage":47}}}
<<<
Content-Length: 189

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":1,"character":53}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/40","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/40","percentage":52}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/40","percentage":52}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/40","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/40","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/40","percentage":57}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/40","percentage":57}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/40","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/40","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/40","percentage":62}}}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":7,"method":"shutdown","params":null}
>>>
Content-Length: 128

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end","message":"Shutdown"}}}Content-Length: 38

{"jsonrpc":"2.0","id":7,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":29,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":0,"character":11}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":29,"result":null}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":30,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":1,"character":16}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":30,"result":null}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":1,"character":26}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":31,"result":[]}
<<<
Content-Length: 444

{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"message":"'SparkFunMLX90614.h' file not found","severity":1,"code":"pp_file_not_found","source":"clang"}]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":32,"result":[]}
<<<
Content-Length: 195

{"jsonrpc":"2.0","id":33,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":1,"character":17}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":33,"result":[]}
<<<
Content-Length: 196

{"jsonrpc":"2.0","id":34,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":10,"character":44}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":34,"result":[]}
<<<
Content-Length: 196

{"jsonrpc":"2.0","id":35,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":23,"character":74}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":35,"result":[]}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":36,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":12,"character":44}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":36,"result":null}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":37,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":12,"character":43}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":37,"result":null}
<<<
Content-Length: 189

{"jsonrpc":"2.0","id":38,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":3,"character":6}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":38,"result":null}
<<<
Content-Length: 442

{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":29}},"message":"'SparkFunMLX90614.h' file not found","severity":1,"code":"pp_file_not_found","source":"clang"}]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":39,"result":[]}
<<<
Content-Length: 283

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":2},"contentChanges":[{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"rangeLength":63,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 3054

{"jsonrpc":"2.0","id":40,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":35}},"selectionRange":{"start":{"line":9,"character":19},"end":{"line":9,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":14}},"selectionRange":{"start":{"line":12,"character":8},"end":{"line":12,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":28}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":17}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":21}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":28,"character":0},"end":{"line":36,"character":1}},"selectionRange":{"start":{"line":28,"character":6},"end":{"line":28,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":29,"character":4},"end":{"line":31,"character":5}},"selectionRange":{"start":{"line":29,"character":9},"end":{"line":29,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":33,"character":4},"end":{"line":35,"character":5}},"selectionRange":{"start":{"line":33,"character":9},"end":{"line":33,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":39,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":39,"character":6},"end":{"line":39,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":40,"character":4},"end":{"line":76,"character":5}},"selectionRange":{"start":{"line":40,"character":9},"end":{"line":40,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":80,"character":12}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":122,"character":0},"end":{"line":122,"character":11}},"selectionRange":{"start":{"line":122,"character":5},"end":{"line":122,"character":9}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":119,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":121,"character":0},"end":{"line":156,"character":1}},"selectionRange":{"start":{"line":121,"character":5},"end":{"line":121,"character":9}}}]}
<<<
Content-Length: 5710

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":2},"text":"#include <Wire.h>                //Biblioteca para I2C\n\n#include <BLEDevice.h>\n#include <BLEServer.h>\n#include <BLEUtils.h>\n#include <BLE2902.h>\n\n\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic->getValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() > 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i < rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server->setCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server->createService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service->createCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX->addDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service->createCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic->setCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service->start();\n  // Start advertising (descoberta do ESP32)\n  server->getAdvertising()->start();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX->notify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2->setValue(\"Hello!\"); // Sending a test message\n    characteristicTX2->notify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"}}Content-Length: 282

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":3},"contentChanges":[{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"}}}
>>>
Content-Length: 2634

{"jsonrpc":"2.0","id":41,"result":[{"name":"characteristicTX","detail":"int *","kind":13,"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":35}},"selectionRange":{"start":{"line":8,"character":19},"end":{"line":8,"character":35}}},{"name":"sensor","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":14}},"selectionRange":{"start":{"line":11,"character":8},"end":{"line":11,"character":14}}},{"name":"deviceConnected","detail":"bool","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":28}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":20}}},{"name":"LED","detail":"const int","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":17}},"selectionRange":{"start":{"line":15,"character":10},"end":{"line":15,"character":13}}},{"name":"BUZZER","detail":"const int","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":21}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":16}}},{"name":"ServerCallbacks","detail":"class","kind":5,"range":{"start":{"line":27,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":27,"character":6},"end":{"line":27,"character":21}},"children":[{"name":"onConnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":28,"character":4},"end":{"line":30,"character":5}},"selectionRange":{"start":{"line":28,"character":9},"end":{"line":28,"character":18}}},{"name":"onDisconnect","detail":"void (Server *)","kind":6,"range":{"start":{"line":32,"character":4},"end":{"line":34,"character":5}},"selectionRange":{"start":{"line":32,"character":9},"end":{"line":32,"character":21}}}]},{"name":"CharacteristicCallbacks","detail":"class","kind":5,"range":{"start":{"line":38,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":38,"character":6},"end":{"line":38,"character":29}},"children":[{"name":"onWrite","detail":"void (int *)","kind":6,"range":{"start":{"line":39,"character":4},"end":{"line":75,"character":5}},"selectionRange":{"start":{"line":39,"character":9},"end":{"line":39,"character":16}}}]},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":80,"character":12}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":120,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":120,"character":5},"end":{"line":120,"character":9}}}]}
<<<
Content-Length: 5708

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","version":3},"text":"#include <Wire.h>                //Biblioteca para I2C\n#include <BLEDevice.h>\n#include <BLEServer.h>\n#include <BLEUtils.h>\n#include <BLE2902.h>\n\n\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic->getValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() > 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i < rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server->setCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server->createService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service->createCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX->addDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service->createCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic->setCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service->start();\n  // Start advertising (descoberta do ESP32)\n  server->getAdvertising()->start();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX->notify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2->setValue(\"Hello!\"); // Sending a test message\n    characteristicTX2->notify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"}}Content-Length: 190

{"jsonrpc":"2.0","id":42,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":8,"character":11}}}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":42,"result":{"contents":{"kind":"markdown","value":"### variable `characteristicTX`  \n\n---\nType: `int *`  \natravés desse objeto iremos enviar dados para o client  \n\n---\n```cpp\npublic: int *characteristicTX\n```"},"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":17}}}}
<<<
Content-Length: 468

{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":17}},"message":"Unknown type name 'BLECharacteristic'","severity":1,"code":"unknown_typename","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6315

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":22}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'BLEDevice.h' file not found"},{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":28,"character":30},"end":{"line":28,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":28,"character":6},"end":{"line":28,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":28,"character":23},"end":{"line":28,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":28,"character":6},"end":{"line":28,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":33,"character":22},"end":{"line":33,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":39,"character":38},"end":{"line":39,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":39,"character":6},"end":{"line":39,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":39,"character":31},"end":{"line":39,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":39,"character":6},"end":{"line":39,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":40,"character":17},"end":{"line":40,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":86,"character":2},"end":{"line":86,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":88,"character":2},"end":{"line":88,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":88,"character":22},"end":{"line":88,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":89,"character":10},"end":{"line":89,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":91,"character":2},"end":{"line":91,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":91,"character":32},"end":{"line":91,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":95,"character":22},"end":{"line":95,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":98,"character":38},"end":{"line":98,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":101,"character":2},"end":{"line":101,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":103,"character":41},"end":{"line":103,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":110,"character":10},"end":{"line":110,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":115,"character":17},"end":{"line":115,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}Content-Length: 37

{"jsonrpc":"2.0","id":43,"result":[]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":44,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"position":{"line":8,"character":11}}}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":44,"result":{"contents":{"kind":"markdown","value":"### variable `characteristicTX`  \n\n---\nType: `int *`  \natravés desse objeto iremos enviar dados para o client  \n\n---\n```cpp\npublic: int *characteristicTX\n```"},"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":17}}}}
<<<
Content-Length: 261

{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino"},"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":45,"result":[]}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 6315

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":22}},"severity":1,"code":"pp_file_not_found","source":"clang","message":"'BLEDevice.h' file not found"},{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":17}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":27,"character":30},"end":{"line":27,"character":48}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLEServerCallbacks'; did you mean 'ServerCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":27,"character":6},"end":{"line":27,"character":21}}},"message":"'ServerCallbacks' declared here"}]},{"range":{"start":{"line":27,"character":23},"end":{"line":27,"character":48}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":27,"character":6},"end":{"line":27,"character":21}}},"message":"Definition of 'ServerCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":28,"character":19},"end":{"line":28,"character":28}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":32,"character":22},"end":{"line":32,"character":31}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":38,"character":38},"end":{"line":38,"character":64}},"severity":1,"code":"unknown_type_or_class_name_suggest","source":"clang","message":"Unknown class name 'BLECharacteristicCallbacks'; did you mean 'CharacteristicCallbacks'? (fix available)","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":38,"character":6},"end":{"line":38,"character":29}}},"message":"'CharacteristicCallbacks' declared here"}]},{"range":{"start":{"line":38,"character":31},"end":{"line":38,"character":64}},"severity":1,"code":"incomplete_base_class","source":"clang","message":"Base class has incomplete type","relatedInformation":[{"location":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","range":{"start":{"line":38,"character":6},"end":{"line":38,"character":29}}},"message":"Definition of 'CharacteristicCallbacks' is not complete until the closing '}'"}]},{"range":{"start":{"line":39,"character":17},"end":{"line":39,"character":34}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":85,"character":2},"end":{"line":85,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":11}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'BLEServer'; did you mean 'Server'? (fix available)","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h","range":{"start":{"line":24,"character":6},"end":{"line":24,"character":12}}},"message":"'Server' declared here"}]},{"range":{"start":{"line":87,"character":22},"end":{"line":87,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLEDevice'"},{"range":{"start":{"line":88,"character":10},"end":{"line":88,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'setCallbacks' in 'Server'"},{"range":{"start":{"line":90,"character":2},"end":{"line":90,"character":12}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLEService'"},{"range":{"start":{"line":90,"character":32},"end":{"line":90,"character":45}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'createService' in 'Server'"},{"range":{"start":{"line":94,"character":22},"end":{"line":94,"character":39}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":97,"character":38},"end":{"line":97,"character":45}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLE2902'"},{"range":{"start":{"line":100,"character":2},"end":{"line":100,"character":19}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'BLECharacteristic'"},{"range":{"start":{"line":102,"character":41},"end":{"line":102,"character":58}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BLECharacteristic'"},{"range":{"start":{"line":109,"character":10},"end":{"line":109,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'getAdvertising' in 'Server'"},{"range":{"start":{"line":114,"character":17},"end":{"line":114,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/30","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/30","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/30","percentage":6}}}Content-Length: 580

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///not-ino","diagnostics":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name '_read'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h","range":{"start":{"line":194,"character":35},"end":{"line":194,"character":40}}},"message":"Error occurred here"}]}]}}Content-Length: 1542

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino","diagnostics":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":10}},"severity":1,"code":"unknown_typename","source":"clang","message":"In included file: unknown type name 'pthread_mutex_t'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/libraries/BLE/src/FreeRTOS.h","range":{"start":{"line":47,"character":2},"end":{"line":47,"character":17}}},"message":"Error occurred here"}]},{"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'IRTherm'"},{"range":{"start":{"line":97,"character":34},"end":{"line":97,"character":47}},"severity":1,"code":"init_conversion_failed","source":"clang","message":"Cannot initialize a parameter of type 'BLEDescriptor *' with an rvalue of type 'BLE2902 *'","relatedInformation":[{"location":{"uri":"file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/libraries/BLE/src/BLECharacteristic.h","range":{"start":{"line":58,"character":45},"end":{"line":58,"character":56}}},"message":"Passing argument to parameter 'pDescriptor' here"}]},{"range":{"start":{"line":114,"character":17},"end":{"line":114,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'TEMP_C'"}]}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/30","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/30","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/30","percentage":13}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/30","percentage":16}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/30","percentage":16}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/30","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/30","percentage":23}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/30","percentage":26}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/30","percentage":26}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/30","percentage":30}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/30","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/30","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/30","percentage":36}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/30","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/30","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/30","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/30","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/30","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/30","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/30","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/30","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/30","percentage":63}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/30","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/30","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/30","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/30","percentage":73}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/30","percentage":73}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/30","percentage":76}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/30","percentage":76}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/30","percentage":80}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/30","percentage":80}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/30","percentage":83}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/30","percentage":83}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/30","percentage":86}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/30","percentage":90}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/30","percentage":93}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/30","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}