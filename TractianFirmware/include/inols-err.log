






Started logging.
2022/04/07 14:59:04 Language server launched with arguments:
2022/04/07 14:59:04   arg[0] = c:\Users\Usuario\AppData\Local\Programs\Arduino IDE\resources\app\node_modules\arduino-ide-extension\build\arduino-language-server.exe
2022/04/07 14:59:04   arg[1] = -clangd
2022/04/07 14:59:04   arg[2] = c:\Users\Usuario\AppData\Local\Programs\Arduino IDE\resources\app\node_modules\arduino-ide-extension\build\clangd.exe
2022/04/07 14:59:04   arg[3] = -cli-daemon-addr
2022/04/07 14:59:04   arg[4] = localhost:49183
2022/04/07 14:59:04   arg[5] = -cli-daemon-instance
2022/04/07 14:59:04   arg[6] = 1
2022/04/07 14:59:04   arg[7] = -fqbn
2022/04/07 14:59:04   arg[8] = esp32:esp32:esp32
2022/04/07 14:59:04   arg[9] = -board-name
2022/04/07 14:59:04   arg[10] = "ESP32 Dev Module"
2022/04/07 14:59:04   arg[11] = -log
2022/04/07 14:59:04   arg[12] = -logpath
2022/04/07 14:59:04   arg[13] = c:\git\MyPrograms\ioT\ESP32codeBLE
2022/04/07 14:59:04 logging to c:\git\MyPrograms\ioT\ESP32codeBLE\inols.log
2022/04/07 14:59:04 [97mLS: : Initial board configuration: esp32:esp32:esp32[0m
2022/04/07 14:59:04 [97mLS: : Language server build path: C:\Users\Usuario\AppData\Local\Temp\arduino-language-server918641866[0m
2022/04/07 14:59:04 [97mLS: : Language server build sketch root: C:\Users\Usuario\AppData\Local\Temp\arduino-language-server918641866\sketch[0m
2022/04/07 14:59:04 [97mLS: : Language server compile-commands: C:\Users\Usuario\AppData\Local\Temp\arduino-language-server819288407\compile_commands.json[0m
2022/04/07 14:59:04 [92mIDE --> LS REQU initialize 0[0m
2022/04/07 14:59:04 [96mINIT --- : initializing workbench: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE[0m
2022/04/07 14:59:04 [92m                initialize 0: initialization parameters: {"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.6.0"}}[0m
2022/04/07 14:59:04 [32mIDE <-- LS RESP initialize 0[0m
2022/04/07 14:59:04 [96mINIT --- : [93mread-locked[0m[0m
2022/04/07 14:59:04 [96mINIT --- : [93mread-unlocked[0m[0m
2022/04/07 14:59:04 [92mIDE --> LS NOTIF initialized[0m
2022/04/07 14:59:04 [92m                 initialized: Notification is not propagated to clangd[0m
2022/04/07 14:59:04 [92mIDE --> LS NOTIF textDocument/didOpen[0m
2022/04/07 14:59:04 [92m                 textDocument/didOpen: [93mwrite-locked[0m[0m
2022/04/07 14:59:04 [92m                 textDocument/didOpen: (throttled: waiting for clangd)[0m
2022/04/07 14:59:04 [92m                 textDocument/didOpen: [93munlocked (waiting clangd)[0m[0m
2022/04/07 14:59:04 [96mINIT --- : Running build with: {
  "instance": {
    "id": 1
  },
  "fqbn": "esp32:esp32:esp32",
  "sketch_path": "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE",
  "build_path": "C:\\Users\\Usuario\\AppData\\Local\\Temp\\arduino-language-server918641866",
  "verbose": true,
  "create_compilation_database_only": true
}[0m
2022/04/07 14:59:10 [96mINIT --- : Compile successful![0m
2022/04/07 14:59:10 [96mINIT --- : Arduino Data Dir -> c:\Users\Usuario\AppData\Local\Arduino15[0m
2022/04/07 14:59:10 [96mINIT --- :     Starting clangd: c:\Users\Usuario\AppData\Local\Programs\Arduino IDE\resources\app\node_modules\arduino-ide-extension\build\clangd.exe -log=verbose --compile-commands-dir=C:\Users\Usuario\AppData\Local\Temp\arduino-language-server918641866 -query-driver=C:\Users\Usuario\AppData\Local\Arduino15\packages\**[0m
2022/04/07 14:59:10 logging to c:\git\MyPrograms\ioT\ESP32codeBLE\inols-clangd.log
2022/04/07 14:59:10 logging to c:\git\MyPrograms\ioT\ESP32codeBLE\inols-clangd-err.log
2022/04/07 14:59:10 [91mIDE     LS --> Clangd REQU initialize 1[0m
2022/04/07 14:59:10 [31mIDE     LS <-- Clangd RESP initialize 1[0m
2022/04/07 14:59:10 [96mINIT --- : clangd successfully started: {"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"]},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"declarationProvider":{},"definitionProvider":{},"implementationProvider":{},"referencesProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentLinkProvider":{},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{"prepareProvider":true},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"selectionRangeProvider":{},"callHierarchyProvider":{},"semanticTokensProvider":{"legend":{"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"],"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","dependentName","defaultLibrary","functionScope","classScope","fileScope","globalScope"]},"range":false,"full":{"delta":true}},"workspaceSymbolProvider":{}},"serverInfo":{"name":"clangd","version":"clangd version 13.0.0 windows x86_64-pc-windows-msvc"}}[0m
2022/04/07 14:59:10 [91mIDE     LS --> Clangd NOTIF initialized[0m
2022/04/07 14:59:10 [96mINIT --- : Done initializing workbench[0m
2022/04/07 14:59:10 [92m                 textDocument/didOpen: [93mlocked (waiting clangd)[0m[0m
2022/04/07 14:59:10 [92m                 textDocument/didOpen: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:10 [92m                 textDocument/didOpen: Increasing .ino tracked files count to 1[0m
2022/04/07 14:59:10 [91mIDE     LS --> Clangd NOTIF textDocument/didOpen[0m
2022/04/07 14:59:10 [92m                 textDocument/didOpen: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:10 [92mIDE --> LS REQU textDocument/codeAction 1[0m
2022/04/07 14:59:10 [92m                textDocument/codeAction 1: [93mread-locked[0m[0m
2022/04/07 14:59:10 [92m                textDocument/codeAction 1: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:23:21)[0m
2022/04/07 14:59:10 [92m                textDocument/codeAction 1: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:10 [92m                textDocument/codeAction 1:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:23:21)[0m
2022/04/07 14:59:10 [91mIDE     LS --> Clangd REQU textDocument/codeAction 2[0m
2022/04/07 14:59:10 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:10 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:10 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/.clangd (0 diagnostics):[0m
2022/04/07 14:59:10 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/.clangd -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/.clangd[0m
2022/04/07 14:59:10 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:10 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/.clangd (0 diagnostics):[0m
2022/04/07 14:59:10 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:10 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:10 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 0[0m
2022/04/07 14:59:10 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 0[0m
2022/04/07 14:59:10 [92mIDE <-- LS REQU window/workDoneProgress/create 1[0m
2022/04/07 14:59:10 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:10 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
2022/04/07 14:59:10 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:10 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
2022/04/07 14:59:11 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:11 [91m                            $/progress: backgroundIndexProgress REPORT, 0/40, 0.0%[0m
2022/04/07 14:59:11 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:11 [91m                            $/progress: backgroundIndexProgress REPORT, 0/40, 0.0%[0m
2022/04/07 14:59:11 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:11 [91m                            $/progress: backgroundIndexProgress REPORT, 0/40, 0.0%[0m
2022/04/07 14:59:11 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:11 [91m                            $/progress: backgroundIndexProgress REPORT, 1/40, 2.0%[0m
2022/04/07 14:59:11 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:11 [91m                            $/progress: backgroundIndexProgress REPORT, 1/40, 2.0%[0m
2022/04/07 14:59:11 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:11 [91m                            $/progress: backgroundIndexProgress REPORT, 1/40, 2.0%[0m
2022/04/07 14:59:11 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:11 [91m                            $/progress: backgroundIndexProgress REPORT, 2/40, 5.0%[0m
2022/04/07 14:59:11 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:11 [91m                            $/progress: backgroundIndexProgress REPORT, 2/40, 5.0%[0m
2022/04/07 14:59:11 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:11 [91m                            $/progress: backgroundIndexProgress REPORT, 3/40, 7.0%[0m
2022/04/07 14:59:11 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:11 [91m                            $/progress: backgroundIndexProgress REPORT, 3/40, 7.0%[0m
2022/04/07 14:59:12 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (25 diagnostics):[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 92:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 94:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 95:10 - Error: "no_member"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 97:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 97:32 - Error: "no_member"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 101:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 104:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 107:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 109:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 116:10 - Error: "no_member"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   > 121:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:12 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 2[0m
2022/04/07 14:59:12 [92m                textDocument/codeAction 1: [93mread-unlocked[0m[0m
2022/04/07 14:59:12 [32mIDE <-- LS RESP textDocument/codeAction 1[0m
2022/04/07 14:59:12 [92mIDE --> LS REQU textDocument/documentSymbol 2[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: [93mread-locked[0m[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:12 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 3[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:12 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 3[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 10:0-10:35[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:0-10:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:0-8:35 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:19-10:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:19-8:35 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 13:0-13:14[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:13:0-13:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:11:0-11:14 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:13:8-13:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:11:8-11:14 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 15:0-15:28[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:28 (.ino)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:5-15:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:5-13:20 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 17:0-17:17[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:0-10:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:0-8:17 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:17 (.ino)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:13:0-13:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:11:0-11:7 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:10-17:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:10-15:13 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:29:30-29:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:30-27:48 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 18:0-18:21[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:18:0-18:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:16:0-16:21 (.ino)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:29:6-29:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:6-27:21 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:18:10-18:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:16:10-16:16 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Class 29:0-37:1[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:29:23-29:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:23-27:48 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:29:0-37:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:0-35:1 (.ino)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:29:6-29:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:6-27:21 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:29:6-29:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:6-27:21 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Method 30:4-32:5[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:30:19-30:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:19-28:28 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:30:4-32:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:4-30:5 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:30:9-30:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:9-28:18 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Method 34:4-36:5[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:34:4-36:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:32:4-34:5 (.ino)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:34:9-34:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:32:9-32:21 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Class 40:0-78:1[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:34:22-34:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:32:22-32:31 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:40:0-78:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:0-76:1 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:40:6-40:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:6-38:29 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Method 41:4-77:5[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:41:4-77:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:4-75:5 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:41:9-41:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:9-39:16 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Function 81:0-81:12[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:81:0-81:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:78:0-78:12 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Function 83:0-83:11[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:40:38-40:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:38-38:64 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:120:0-120:11 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Function 85:0-125:1[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:40:6-40:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:6-38:29 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-125:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:78:0-118:1 (.ino)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:40:31-40:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:31-38:64 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:5-85:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:78:5-78:10 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Function 127:0-162:1[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:40:6-40:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:6-38:29 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:127:0-162:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:120:0-155:1 (.ino)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:41:17-41:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:17-39:34 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:127:5-127:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:120:5-120:9 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 2: [93mread-unlocked[0m[0m
2022/04/07 14:59:12 [32mIDE <-- LS RESP textDocument/documentSymbol 2[0m
2022/04/07 14:59:12 [92mIDE --> LS REQU textDocument/hover 3[0m
2022/04/07 14:59:12 [92m                textDocument/hover 3: [93mread-locked[0m[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:92:2-92:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:85:2-85:11 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/hover 3: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/hover 3: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:0:14 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:2:14[0m
2022/04/07 14:59:12 [91mIDE     LS --> Clangd REQU textDocument/hover 4[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:22-94:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:22-87:31 (.ino)[0m
2022/04/07 14:59:12 [31mIDE     LS <-- Clangd RESP textDocument/hover 4[0m
2022/04/07 14:59:12 [92m                textDocument/hover 3: null response[0m
2022/04/07 14:59:12 [92m                textDocument/hover 3: [93mread-unlocked[0m[0m
2022/04/07 14:59:12 [32mIDE <-- LS RESP textDocument/hover 3[0m
2022/04/07 14:59:12 [92mIDE --> LS REQU textDocument/hover 4[0m
2022/04/07 14:59:12 [92m                textDocument/hover 4: [93mread-locked[0m[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:95:10-95:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:88:10-88:22 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/hover 4: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:2-97:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:2-90:12 (.ino)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:32-97:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:32-90:45 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/hover 4: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:0:14 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:2:14[0m
2022/04/07 14:59:12 [91mIDE     LS --> Clangd REQU textDocument/hover 5[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:101:22-101:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:94:22-94:39 (.ino)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:104:38-104:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:97:38-97:45 (.ino)[0m
2022/04/07 14:59:12 [31mIDE     LS <-- Clangd RESP textDocument/hover 5[0m
2022/04/07 14:59:12 [92m                textDocument/hover 4: null response[0m
2022/04/07 14:59:12 [92m                textDocument/hover 4: [93mread-unlocked[0m[0m
2022/04/07 14:59:12 [32mIDE <-- LS RESP textDocument/hover 4[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:107:2-107:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:100:2-100:19 (.ino)[0m
2022/04/07 14:59:12 [92mIDE --> LS REQU textDocument/hover 5[0m
2022/04/07 14:59:12 [92m                textDocument/hover 5: [93mread-locked[0m[0m
2022/04/07 14:59:12 [92m                textDocument/hover 5: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:41-109:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:41-102:58 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/hover 5: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:0:15 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:2:15[0m
2022/04/07 14:59:12 [91mIDE     LS --> Clangd REQU textDocument/hover 6[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:116:10-116:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:109:10-109:24 (.ino)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:121:17-121:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:114:17-114:23 (.ino)[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (22 diagnostics):[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 8:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 11:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 27:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 27:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 28:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 32:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 38:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 38:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 39:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 85:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 87:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 88:10 - Error: "no_member"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 90:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 90:32 - Error: "no_member"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 94:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 97:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 100:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 102:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 109:10 - Error: "no_member"[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics:     > 114:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:12 [31mIDE     LS <-- Clangd RESP textDocument/hover 6[0m
2022/04/07 14:59:12 [92m                textDocument/hover 5: null response[0m
2022/04/07 14:59:12 [92m                textDocument/hover 5: [93mread-unlocked[0m[0m
2022/04/07 14:59:12 [32mIDE <-- LS RESP textDocument/hover 5[0m
2022/04/07 14:59:12 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:12 [92mIDE --> LS REQU textDocument/documentSymbol 6[0m
2022/04/07 14:59:12 [32mIDE --> LS RESP window/workDoneProgress/create 1[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: [93mread-locked[0m[0m
2022/04/07 14:59:12 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:12 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:12 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 7[0m
2022/04/07 14:59:12 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:12 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 7[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Variable 10:0-10:35[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:0-10:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:0-8:35 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:19-10:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:19-8:35 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Variable 13:0-13:14[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:13:0-13:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:11:0-11:14 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:13:8-13:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:11:8-11:14 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Variable 15:0-15:28[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:28 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:5-15:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:5-13:20 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Variable 17:0-17:17[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:17 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:10-17:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:10-15:13 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Variable 18:0-18:21[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:18:0-18:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:16:0-16:21 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:18:10-18:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:16:10-16:16 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Class 29:0-37:1[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:29:0-37:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:0-35:1 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:29:6-29:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:6-27:21 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Method 30:4-32:5[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:30:4-32:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:4-30:5 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:30:9-30:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:9-28:18 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Method 34:4-36:5[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:34:4-36:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:32:4-34:5 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:34:9-34:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:32:9-32:21 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Class 40:0-78:1[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:40:0-78:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:0-76:1 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:40:6-40:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:6-38:29 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Method 41:4-77:5[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:41:4-77:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:4-75:5 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:41:9-41:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:9-39:16 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Function 81:0-81:12[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:81:0-81:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:78:0-78:12 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Function 83:0-83:11[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:120:0-120:11 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Function 85:0-125:1[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-125:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:78:0-118:1 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:5-85:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:78:5-78:10 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6:   > convert SymbolKind:Function 127:0-162:1[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:127:0-162:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:120:0-155:1 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:127:5-127:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:120:5-120:9 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 6: [93mread-unlocked[0m[0m
2022/04/07 14:59:12 [32mIDE <-- LS RESP textDocument/documentSymbol 6[0m
2022/04/07 14:59:12 [92mIDE --> LS REQU textDocument/codeAction 7[0m
2022/04/07 14:59:12 [92m                textDocument/codeAction 7: [93mread-locked[0m[0m
2022/04/07 14:59:12 [92m                textDocument/codeAction 7: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:6:20)[0m
2022/04/07 14:59:12 [92m                textDocument/codeAction 7: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:12 [92m                textDocument/codeAction 7:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:6:20)[0m
2022/04/07 14:59:12 [91mIDE     LS --> Clangd REQU textDocument/codeAction 8[0m
2022/04/07 14:59:12 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 8[0m
2022/04/07 14:59:12 [92m                textDocument/codeAction 7: [93mread-unlocked[0m[0m
2022/04/07 14:59:12 [32mIDE <-- LS RESP textDocument/codeAction 7[0m
2022/04/07 14:59:12 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@2)[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange:   > 6:20-6:20 (len=0) -> "\n"[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>


BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:12 Ino Range: 6:20-6:20 -> Cpp Range:8:20-8:20
2022/04/07 14:59:12   > Current sketchmapper content:
2022/04/07 14:59:12   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:12   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:12   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:12   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:12   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:12   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:12   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:12   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:12   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:12   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:12  10:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:12  11: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:12  12:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:12  13: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:12  14: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:12  15:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:12  16: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:12  17:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:12  18: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:12  19: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:12  20:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:12  21: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:12  22: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:12  23:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:12  24: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:12  25: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:12  26: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:12  27:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:12  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:12  29: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:12  30: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:12  31:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:12  32:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:12  33:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:12  34:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:12  35:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:12  36:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:12  37:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:12  38: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:12  39:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:12  40: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:12  41: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:12  42:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:12  43:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:12  44:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:12  45:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:12  46:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:12  47:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:12  48:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:12  49:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:12  50:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:12  51:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:12  52:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:12  53:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:12  54:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:12  55:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:12  56:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:12  57:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:12  58:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:12  59:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:12  60:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:12  61:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:12  62:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:12  63:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:12  64:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:12  65:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:12  66:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:12  67:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:12  68:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:12  69:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:12  70:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:12  71:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:12  72:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:12  73:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:12  74:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:12  75:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:12  76:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:12  77:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:12  78:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:12  79: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:12  80:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:12  81: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:12  82: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79
2022/04/07 14:59:12  83: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:12  84: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121
2022/04/07 14:59:12  85: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:12  86: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:12  87:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:12  88:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:12  89:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:12  90:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:12  91:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:12  92:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:12  93:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:12  94:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:12  95:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:12  96:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:12  97:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:12  98:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:12  99:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:12 100:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:12 101:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:12 102:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:12 103:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:12 104:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:12 105:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:12 106:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:12 107:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:12 108:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:12 109:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:12 110:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:12 111:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:12 112:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:12 113:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:12 114:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:12 115:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:12 116:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:12 117:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:12 118:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:12 119:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:12 120:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:12 121:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:12 122:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:12 123:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:12 124:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:12 125:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:12 126: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:12 127:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:12 128: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:12 129:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:12 130:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:12 131:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:12 132:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:12 133:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:12 134:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:12 135:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:12 136:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:12 137:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:12 138:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:12 139:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:12 140:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:12 141:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:12 142:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:12 143:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:12 144:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:12 145:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:12 146:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:12 147:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:12 148:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:12 149:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:12 150:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:12 151:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:12 152: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:12 153:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:12 154:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:12 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:12 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:12 157:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:12 158:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:12 159:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:12 160:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:12 161:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:12 162:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:12 163: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:12 164:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:12 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:12 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:12 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@2)[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange:             > 8:20-8:20 -> "\n"[0m
2022/04/07 14:59:12 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:12 [92mIDE --> LS REQU textDocument/documentSymbol 8[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: [93mread-locked[0m[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:12 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 9[0m
2022/04/07 14:59:12 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 9[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Variable 11:0-11:35[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:11:0-11:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:9:0-9:35 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:11:19-11:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:9:19-9:35 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Variable 14:0-14:14[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:14:0-14:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:12:0-12:14 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:14:8-14:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:12:8-12:14 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Variable 16:0-16:28[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:16:0-16:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:14:0-14:28 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:16:5-16:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:14:5-14:20 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Variable 18:0-18:17[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:18:0-18:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:16:0-16:17 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:18:10-18:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:16:10-16:13 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Variable 19:0-19:21[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:21 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:16 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Class 30:0-38:1[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:30:0-38:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:0-36:1 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:30:6-30:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:6-28:21 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Method 31:4-33:5[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:4-33:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:4-31:5 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:9-31:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:9-29:18 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Method 35:4-37:5[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:35:4-37:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:33:4-35:5 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:35:9-35:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:33:9-33:21 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Class 41:0-79:1[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:41:0-79:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:0-77:1 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:41:6-41:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:6-39:29 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Method 42:4-78:5[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:4-78:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:4-76:5 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:9-42:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:9-40:16 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Function 82:0-82:12[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:82:0-82:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:79:0-79:12 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Function 84:0-84:11[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:84:0-84:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:121:0-121:11 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Function 86:0-126:1[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:86:0-126:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:79:0-119:1 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:86:5-86:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:79:5-79:10 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8:   > convert SymbolKind:Function 128:0-163:1[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:128:0-163:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:121:0-156:1 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:128:5-128:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:121:5-121:9 (.ino)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 8: [93mread-unlocked[0m[0m
2022/04/07 14:59:12 [32mIDE <-- LS RESP textDocument/documentSymbol 8[0m
2022/04/07 14:59:12 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@3)[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange:   > 7:0-7:0 (len=0) -> "\n"[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>



BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:12 Ino Range: 7:0-7:0 -> Cpp Range:9:0-9:0
2022/04/07 14:59:12   > Current sketchmapper content:
2022/04/07 14:59:12   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:12   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:12   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:12   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:12   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:12   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:12   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:12   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:12   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:12   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:12  10:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:12  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:12  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:12  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:12  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:12  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:12  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:12  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:12  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:12  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:12  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:12  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:12  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:12  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:12  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:12  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:12  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:12  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:12  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:12  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:12  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:12  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:12  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:12  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:12  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:12  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:12  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:12  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:12  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:12  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:12  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:12  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:12  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:12  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:12  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:12  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:12  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:12  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:12  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:12  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:12  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:12  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:12  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:12  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:12  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:12  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:12  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:12  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:12  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:12  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:12  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:12  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:12  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:12  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:12  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:12  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:12  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:12  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:12  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:12  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:12  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:12  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:12  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:12  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:12  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:12  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:12  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:12  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:12  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:12  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:12  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:12  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:12  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:12  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:12  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:12  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:12  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:12  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:12  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:12  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:12  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:12  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:12  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:12  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:12  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:12  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:12  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:12  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:12  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:12  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:12 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:12 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:12 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:12 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:12 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:12 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:12 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:12 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:12 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:12 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:12 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:12 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:12 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:12 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:12 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:12 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:12 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:12 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:12 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:12 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:12 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:12 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:12 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:12 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:12 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:12 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:12 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:12 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:12 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:12 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:12 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:12 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:12 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:12 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:12 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:12 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:12 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:12 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:12 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:12 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:12 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:12 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:12 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:12 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:12 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:12 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:12 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:12 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:12 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:12 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:12 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:12 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:12 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:12 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:12 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:12 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:12 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:12 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:12 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:12 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:12 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:12 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:12 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:12 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:12 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:12 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:12 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:12 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:12 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@3)[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange:             > 9:0-9:0 -> "\n"[0m
2022/04/07 14:59:12 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:12 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:12 [92mIDE --> LS REQU textDocument/documentSymbol 9[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 9: [93mread-locked[0m[0m
2022/04/07 14:59:12 [92m                textDocument/documentSymbol 9: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:12 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 10[0m
2022/04/07 14:59:13 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 10[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:13 [92m                textDocument/documentSymbol 9: [93mread-unlocked[0m[0m
2022/04/07 14:59:13 [32mIDE <-- LS RESP textDocument/documentSymbol 9[0m
2022/04/07 14:59:13 [92mIDE --> LS NOTIF textDocument/didSave[0m
2022/04/07 14:59:13 [92m                 textDocument/didSave: [93mwrite-locked[0m[0m
2022/04/07 14:59:13 [92m                 textDocument/didSave: notification is not forwarded to clang[0m
2022/04/07 14:59:13 [92m                 textDocument/didSave: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:13 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:13 [91m                            $/progress: backgroundIndexProgress REPORT, 4/40, 10.0%[0m
2022/04/07 14:59:13 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:13 [91m                            $/progress: backgroundIndexProgress REPORT, 4/40, 10.0%[0m
2022/04/07 14:59:13 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:13 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:13 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:13 [91m                            $/progress: backgroundIndexProgress REPORT, 5/40, 12.0%[0m
2022/04/07 14:59:13 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:13 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:13 [91m                            $/progress: backgroundIndexProgress REPORT, 5/40, 12.0%[0m
2022/04/07 14:59:13 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:14 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:14 [91m                            $/progress: backgroundIndexProgress REPORT, 6/40, 15.0%[0m
2022/04/07 14:59:14 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:14 [91m                            $/progress: backgroundIndexProgress REPORT, 6/40, 15.0%[0m
2022/04/07 14:59:14 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:14 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:14 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (25 diagnostics):[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 11:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 14:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 30:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 30:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 31:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 35:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 41:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 41:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 42:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 93:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 95:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 95:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 96:10 - Error: "no_member"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 98:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 98:32 - Error: "no_member"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 102:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 105:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 108:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 110:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 117:10 - Error: "no_member"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   > 122:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:11:0-11:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:9:0-9:17 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:14:0-14:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:12:0-12:7 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:30:30-30:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:30-28:48 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:30:6-30:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:6-28:21 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:30:23-30:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:23-28:48 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:30:6-30:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:6-28:21 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:19-31:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:19-29:28 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:35:22-35:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:33:22-33:31 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:41:38-41:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:38-39:64 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:41:6-41:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:6-39:29 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:41:31-41:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:31-39:64 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:41:6-41:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:6-39:29 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:17-42:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:17-40:34 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:93:2-93:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:86:2-86:11 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:95:2-95:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:88:2-88:11 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:95:22-95:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:88:22-88:31 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:10-96:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:10-89:22 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:98:2-98:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:91:2-91:12 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:98:32-98:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:91:32-91:45 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:102:22-102:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:95:22-95:39 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:105:38-105:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:98:38-98:45 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:108:2-108:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:101:2-101:19 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:110:41-110:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:103:41-103:58 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:117:10-117:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:110:10-110:24 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:122:17-122:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:115:17-115:23 (.ino)[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (22 diagnostics):[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 9:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 28:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 28:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 29:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 33:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 39:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 39:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 40:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 86:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 88:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 88:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 89:10 - Error: "no_member"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 91:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 91:32 - Error: "no_member"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 95:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 98:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 101:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 103:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 110:10 - Error: "no_member"[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics:     > 115:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:14 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:14 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:14 [95mSKETCH REBUILD: : Sketch rebuild started[0m
2022/04/07 14:59:14 [92mIDE <-- LS REQU window/workDoneProgress/create 2[0m
2022/04/07 14:59:14 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
2022/04/07 14:59:14 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
2022/04/07 14:59:14 [32mIDE --> LS RESP window/workDoneProgress/create 2[0m
2022/04/07 14:59:14 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:14 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:14 [91m                            $/progress: backgroundIndexProgress REPORT, 7/40, 17.0%[0m
2022/04/07 14:59:14 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:14 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:14 [91m                            $/progress: backgroundIndexProgress REPORT, 7/40, 17.0%[0m
2022/04/07 14:59:14 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:14 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:14 [91m                            $/progress: backgroundIndexProgress REPORT, 8/40, 20.0%[0m
2022/04/07 14:59:14 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:14 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:14 [91m                            $/progress: backgroundIndexProgress REPORT, 8/40, 20.0%[0m
2022/04/07 14:59:14 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:14 [95mSKETCH REBUILD: : Running build with: {
  "instance": {
    "id": 1
  },
  "fqbn": "esp32:esp32:esp32",
  "sketch_path": "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE",
  "build_path": "C:\\Users\\Usuario\\AppData\\Local\\Temp\\arduino-language-server918641866",
  "verbose": true,
  "create_compilation_database_only": true,
  "source_override": {
    "ESP32codeBLE.ino": "#include \u003cWire.h\u003e                //Biblioteca para I2C\n#include \u003cSparkFunMLX90614.h\u003e    //Biblioteca SparkFunMLX90614\n\n#include \u003cBLEDevice.h\u003e\n#include \u003cBLEServer.h\u003e\n#include \u003cBLEUtils.h\u003e\n#include \u003cBLE2902.h\u003e\n\n\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic-\u003egetValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() \u003e 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i \u003c rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server-\u003esetCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server-\u003ecreateService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service-\u003ecreateCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX-\u003eaddDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service-\u003ecreateCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic-\u003esetCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service-\u003estart();\n  // Start advertising (descoberta do ESP32)\n  server-\u003egetAdvertising()-\u003estart();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX-\u003esetValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX-\u003enotify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2-\u003esetValue(\"Hello!\"); // Sending a test message\n    characteristicTX2-\u003enotify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"
  }
}[0m
2022/04/07 14:59:15 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:15 [91m                            $/progress: backgroundIndexProgress REPORT, 9/40, 22.0%[0m
2022/04/07 14:59:15 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:15 [91m                            $/progress: backgroundIndexProgress REPORT, 9/40, 22.0%[0m
2022/04/07 14:59:15 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:15 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:15 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:15 [91m                            $/progress: backgroundIndexProgress REPORT, 10/40, 25.0%[0m
2022/04/07 14:59:15 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:15 [91m                            $/progress: backgroundIndexProgress REPORT, 10/40, 25.0%[0m
2022/04/07 14:59:15 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:15 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:15 [91m                            $/progress: backgroundIndexProgress REPORT, 11/40, 27.0%[0m
2022/04/07 14:59:15 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:15 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:15 [91m                            $/progress: backgroundIndexProgress REPORT, 11/40, 27.0%[0m
2022/04/07 14:59:15 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:15 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (25 diagnostics):[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (22 diagnostics):[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:15 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:15 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:16 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@4)[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange:   > 8:0-8:0 (len=0) -> "#"[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:16 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:16 [91m                            $/progress: backgroundIndexProgress REPORT, 12/40, 30.0%[0m
2022/04/07 14:59:16 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:16 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:16 [91m                            $/progress: backgroundIndexProgress REPORT, 12/40, 30.0%[0m
2022/04/07 14:59:16 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:16 Ino Range: 8:0-8:0 -> Cpp Range:10:0-10:0
2022/04/07 14:59:16   > Current sketchmapper content:
2022/04/07 14:59:16   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:16   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:16   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:16   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:16   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:16   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:16   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:16   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:16   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:16   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:16  10: #                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:16  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:16  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:16  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:16  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:16  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:16  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:16  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:16  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:16  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:16  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:16  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:16  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:16  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:16  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:16  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:16  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:16  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:16  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:16  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:16  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:16  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:16  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:16  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:16  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:16  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:16  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:16  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:16  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:16  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:16  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:16  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:16  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:16  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:16  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:16  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:16  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:16  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:16  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:16  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:16  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:16  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:16  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:16  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:16  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:16  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:16  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:16  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:16  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:16  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:16  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:16  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:16  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:16  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:16  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:16  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:16  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:16  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:16  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:16  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:16  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:16  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:16  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:16  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:16  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:16  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:16  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:16  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:16  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:16  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:16  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:16  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:16  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:16  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:16  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:16  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:16  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:16  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:16  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:16  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:16  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:16  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:16  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:16  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:16  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:16  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:16  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:16  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:16  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:16  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:16 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:16 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:16 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:16 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:16 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:16 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:16 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:16 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:16 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:16 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:16 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:16 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:16 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:16 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:16 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:16 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:16 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:16 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:16 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:16 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:16 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:16 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:16 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:16 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:16 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:16 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:16 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:16 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:16 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:16 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:16 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:16 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:16 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:16 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:16 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:16 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:16 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:16 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:16 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:16 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:16 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:16 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:16 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:16 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:16 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:16 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:16 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:16 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:16 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:16 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:16 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:16 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:16 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:16 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:16 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:16 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:16 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:16 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:16 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:16 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:16 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:16 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:16 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:16 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:16 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:16 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:16 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:16 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:16 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@4)[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange:             > 10:0-10:0 -> "#"[0m
2022/04/07 14:59:16 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:16 [92mIDE --> LS REQU textDocument/documentSymbol 10[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: [93mread-locked[0m[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:16 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 11[0m
2022/04/07 14:59:16 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:16 [91m                            $/progress: backgroundIndexProgress REPORT, 13/40, 32.0%[0m
2022/04/07 14:59:16 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:16 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:16 [91m                            $/progress: backgroundIndexProgress REPORT, 13/40, 32.0%[0m
2022/04/07 14:59:16 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:16 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 11[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 10: [93mread-unlocked[0m[0m
2022/04/07 14:59:16 [32mIDE <-- LS RESP textDocument/documentSymbol 10[0m
2022/04/07 14:59:16 [92mIDE --> LS REQU textDocument/codeAction 11[0m
2022/04/07 14:59:16 [92m                textDocument/codeAction 11: [93mread-locked[0m[0m
2022/04/07 14:59:16 [92m                textDocument/codeAction 11: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:1)[0m
2022/04/07 14:59:16 [92m                textDocument/codeAction 11: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:16 [92m                textDocument/codeAction 11:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:8:1)[0m
2022/04/07 14:59:16 [91mIDE     LS --> Clangd REQU textDocument/codeAction 12[0m
2022/04/07 14:59:16 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 12[0m
2022/04/07 14:59:16 [92m                textDocument/codeAction 11: [93mread-unlocked[0m[0m
2022/04/07 14:59:16 [32mIDE <-- LS RESP textDocument/codeAction 11[0m
2022/04/07 14:59:16 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:16 [91m                            $/progress: backgroundIndexProgress REPORT, 14/40, 35.0%[0m
2022/04/07 14:59:16 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:16 [91m                            $/progress: backgroundIndexProgress REPORT, 14/40, 35.0%[0m
2022/04/07 14:59:16 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:16 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:16 [92mIDE --> LS NOTIF textDocument/didSave[0m
2022/04/07 14:59:16 [92m                 textDocument/didSave: [93mwrite-locked[0m[0m
2022/04/07 14:59:16 [92m                 textDocument/didSave: notification is not forwarded to clang[0m
2022/04/07 14:59:16 [92m                 textDocument/didSave: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:16 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@5)[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange:   > 8:1-8:1 (len=0) -> "i"[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#i

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:16 Ino Range: 8:1-8:1 -> Cpp Range:10:1-10:1
2022/04/07 14:59:16   > Current sketchmapper content:
2022/04/07 14:59:16   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:16   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:16   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:16   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:16   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:16   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:16   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:16   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:16   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:16   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:16  10: #i                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:16  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:16  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:16  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:16  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:16  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:16  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:16  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:16  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:16  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:16  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:16  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:16  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:16  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:16  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:16  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:16  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:16  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:16  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:16  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:16  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:16  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:16  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:16  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:16  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:16  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:16  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:16  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:16  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:16  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:16  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:16  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:16  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:16  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:16  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:16  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:16  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:16  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:16  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:16  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:16  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:16  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:16  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:16  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:16  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:16  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:16  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:16  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:16  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:16  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:16  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:16  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:16  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:16  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:16  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:16  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:16  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:16  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:16  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:16  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:16  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:16  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:16  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:16  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:16  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:16  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:16  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:16  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:16  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:16  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:16  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:16  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:16  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:16  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:16  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:16  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:16  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:16  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:16  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:16  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:16  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:16  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:16  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:16  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:16  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:16  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:16  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:16  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:16  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:16  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:16 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:16 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:16 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:16 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:16 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:16 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:16 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:16 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:16 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:16 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:16 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:16 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:16 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:16 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:16 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:16 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:16 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:16 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:16 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:16 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:16 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:16 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:16 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:16 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:16 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:16 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:16 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:16 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:16 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:16 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:16 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:16 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:16 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:16 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:16 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:16 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:16 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:16 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:16 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:16 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:16 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:16 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:16 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:16 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:16 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:16 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:16 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:16 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:16 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:16 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:16 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:16 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:16 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:16 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:16 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:16 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:16 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:16 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:16 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:16 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:16 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:16 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:16 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:16 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:16 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:16 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:16 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:16 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:16 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@5)[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange:             > 10:1-10:1 -> "i"[0m
2022/04/07 14:59:16 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:16 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:16 [92mIDE --> LS REQU textDocument/documentSymbol 12[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 12: [93mread-locked[0m[0m
2022/04/07 14:59:16 [92m                textDocument/documentSymbol 12: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:16 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 13[0m
2022/04/07 14:59:17 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 13[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:17 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:17 [91m                            $/progress: backgroundIndexProgress REPORT, 15/40, 37.0%[0m
2022/04/07 14:59:17 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:17 [91m                            $/progress: backgroundIndexProgress REPORT, 15/40, 37.0%[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 12: [93mread-unlocked[0m[0m
2022/04/07 14:59:17 [32mIDE <-- LS RESP textDocument/documentSymbol 12[0m
2022/04/07 14:59:17 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@6)[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange:   > 8:2-8:2 (len=0) -> "n"[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#in

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:17 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:17 Ino Range: 8:2-8:2 -> Cpp Range:10:2-10:2
2022/04/07 14:59:17   > Current sketchmapper content:
2022/04/07 14:59:17   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:17   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:17   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:17   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:17   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:17   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:17   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:17   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:17   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:17   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:17  10: #in                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:17  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:17  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:17  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:17  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:17  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:17  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:17  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:17  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:17  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:17  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:17  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:17  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:17  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:17  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:17  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:17  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:17  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:17  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:17  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:17  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:17  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:17  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:17  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:17  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:17  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:17  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:17  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:17  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:17  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:17  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:17  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:17  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:17  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:17  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:17  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:17  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:17  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:17  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:17  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:17  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:17  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:17  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:17  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:17  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:17  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:17  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:17  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:17  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:17  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:17  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:17  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:17  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:17  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:17  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:17  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:17  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:17  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:17  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:17  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:17  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:17  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:17  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:17  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:17  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:17  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:17  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:17  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:17  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:17  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:17  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:17  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:17  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:17  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:17  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:17  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:17  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:17  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:17  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:17  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:17  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:17  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:17  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:17  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:17  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:17  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:17  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:17  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:17  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:17  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:17 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:17 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:17 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:17 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:17 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:17 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:17 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:17 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:17 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:17 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:17 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:17 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:17 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:17 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:17 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:17 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:17 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:17 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:17 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:17 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:17 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:17 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:17 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:17 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:17 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:17 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:17 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:17 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:17 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:17 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:17 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:17 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:17 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:17 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:17 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:17 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:17 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:17 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:17 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:17 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:17 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:17 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:17 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:17 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:17 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:17 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:17 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:17 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:17 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:17 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:17 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:17 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:17 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:17 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:17 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:17 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:17 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:17 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:17 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:17 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:17 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:17 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:17 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:17 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:17 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:17 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:17 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:17 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:17 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@6)[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange:             > 10:2-10:2 -> "n"[0m
2022/04/07 14:59:17 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:17 [92mIDE --> LS REQU textDocument/documentSymbol 13[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: [93mread-locked[0m[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:17 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 14[0m
2022/04/07 14:59:17 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 14[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 13: [93mread-unlocked[0m[0m
2022/04/07 14:59:17 [32mIDE <-- LS RESP textDocument/documentSymbol 13[0m
2022/04/07 14:59:17 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@7)[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange:   > 8:3-8:3 (len=0) -> "c"[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#inc

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:17 Ino Range: 8:3-8:3 -> Cpp Range:10:3-10:3
2022/04/07 14:59:17   > Current sketchmapper content:
2022/04/07 14:59:17   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:17   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:17   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:17   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:17   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:17   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:17   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:17   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:17   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:17   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:17  10: #inc                                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:17  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:17  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:17  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:17  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:17  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:17  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:17  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:17  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:17  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:17  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:17  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:17  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:17  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:17  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:17  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:17  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:17  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:17  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:17  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:17  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:17  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:17  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:17  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:17  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:17  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:17  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:17  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:17  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:17  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:17  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:17  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:17  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:17  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:17  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:17  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:17  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:17  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:17  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:17  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:17  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:17  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:17  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:17  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:17  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:17  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:17  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:17  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:17  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:17  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:17  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:17  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:17  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:17  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:17  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:17  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:17  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:17  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:17  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:17  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:17  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:17  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:17  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:17  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:17  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:17  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:17  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:17  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:17  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:17  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:17  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:17  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:17  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:17  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:17  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:17  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:17  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:17  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:17  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:17  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:17  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:17  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:17  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:17  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:17  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:17  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:17  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:17  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:17  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:17  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:17 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:17 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:17 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:17 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:17 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:17 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:17 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:17 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:17 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:17 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:17 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:17 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:17 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:17 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:17 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:17 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:17 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:17 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:17 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:17 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:17 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:17 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:17 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:17 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:17 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:17 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:17 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:17 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:17 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:17 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:17 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:17 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:17 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:17 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:17 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:17 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:17 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:17 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:17 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:17 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:17 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:17 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:17 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:17 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:17 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:17 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:17 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:17 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:17 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:17 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:17 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:17 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:17 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:17 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:17 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:17 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:17 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:17 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:17 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:17 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:17 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:17 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:17 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:17 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:17 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:17 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:17 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:17 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:17 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@7)[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange:             > 10:3-10:3 -> "c"[0m
2022/04/07 14:59:17 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:17 [92mIDE --> LS REQU textDocument/documentSymbol 14[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: [93mread-locked[0m[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:17 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 15[0m
2022/04/07 14:59:17 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 15[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 14: [93mread-unlocked[0m[0m
2022/04/07 14:59:17 [32mIDE <-- LS RESP textDocument/documentSymbol 14[0m
2022/04/07 14:59:17 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@8)[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange:   > 8:4-8:4 (len=0) -> "l"[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#incl

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:17 Ino Range: 8:4-8:4 -> Cpp Range:10:4-10:4
2022/04/07 14:59:17   > Current sketchmapper content:
2022/04/07 14:59:17   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:17   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:17   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:17   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:17   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:17   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:17   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:17   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:17   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:17   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:17  10: #incl                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:17  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:17  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:17  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:17  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:17  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:17  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:17  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:17  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:17  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:17  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:17  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:17  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:17  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:17  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:17  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:17  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:17  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:17  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:17  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:17  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:17  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:17  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:17  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:17  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:17  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:17  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:17  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:17  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:17  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:17  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:17  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:17  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:17  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:17  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:17  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:17  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:17  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:17  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:17  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:17  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:17  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:17  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:17  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:17  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:17  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:17  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:17  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:17  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:17  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:17  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:17  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:17  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:17  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:17  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:17  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:17  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:17  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:17  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:17  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:17  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:17  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:17  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:17  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:17  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:17  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:17  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:17  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:17  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:17  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:17  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:17  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:17  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:17  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:17  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:17  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:17  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:17  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:17  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:17  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:17  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:17  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:17  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:17  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:17  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:17  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:17  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:17  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:17  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:17  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:17 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:17 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:17 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:17 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:17 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:17 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:17 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:17 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:17 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:17 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:17 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:17 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:17 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:17 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:17 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:17 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:17 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:17 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:17 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:17 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:17 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:17 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:17 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:17 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:17 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:17 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:17 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:17 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:17 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:17 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:17 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:17 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:17 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:17 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:17 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:17 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:17 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:17 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:17 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:17 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:17 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:17 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:17 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:17 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:17 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:17 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:17 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:17 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:17 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:17 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:17 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:17 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:17 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:17 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:17 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:17 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:17 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:17 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:17 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:17 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:17 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:17 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:17 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:17 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:17 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:17 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:17 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:17 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:17 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@8)[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange:             > 10:4-10:4 -> "l"[0m
2022/04/07 14:59:17 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:17 [92mIDE --> LS REQU textDocument/documentSymbol 15[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: [93mread-locked[0m[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:17 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 16[0m
2022/04/07 14:59:17 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 16[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 15: [93mread-unlocked[0m[0m
2022/04/07 14:59:17 [32mIDE <-- LS RESP textDocument/documentSymbol 15[0m
2022/04/07 14:59:17 [92mIDE --> LS REQU textDocument/codeAction 16[0m
2022/04/07 14:59:17 [92m                textDocument/codeAction 16: [93mread-locked[0m[0m
2022/04/07 14:59:17 [92m                textDocument/codeAction 16: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:5)[0m
2022/04/07 14:59:17 [92m                textDocument/codeAction 16: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:17 [92m                textDocument/codeAction 16:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:8:5)[0m
2022/04/07 14:59:17 [91mIDE     LS --> Clangd REQU textDocument/codeAction 17[0m
2022/04/07 14:59:17 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 17[0m
2022/04/07 14:59:17 [92m                textDocument/codeAction 16: [93mread-unlocked[0m[0m
2022/04/07 14:59:17 [32mIDE <-- LS RESP textDocument/codeAction 16[0m
2022/04/07 14:59:17 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@9)[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange:   > 8:5-8:5 (len=0) -> "i"[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#incli

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:17 Ino Range: 8:5-8:5 -> Cpp Range:10:5-10:5
2022/04/07 14:59:17   > Current sketchmapper content:
2022/04/07 14:59:17   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:17   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:17   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:17   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:17   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:17   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:17   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:17   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:17   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:17   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:17  10: #incli                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:17  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:17  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:17  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:17  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:17  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:17  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:17  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:17  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:17  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:17  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:17  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:17  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:17  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:17  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:17  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:17  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:17  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:17  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:17  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:17  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:17  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:17  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:17  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:17  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:17  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:17  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:17  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:17  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:17  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:17  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:17  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:17  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:17  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:17  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:17  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:17  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:17  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:17  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:17  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:17  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:17  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:17  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:17  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:17  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:17  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:17  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:17  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:17  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:17  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:17  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:17  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:17  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:17  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:17  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:17  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:17  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:17  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:17  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:17  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:17  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:17  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:17  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:17  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:17  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:17  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:17  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:17  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:17  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:17  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:17  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:17  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:17  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:17  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:17  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:17  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:17  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:17  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:17  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:17  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:17  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:17  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:17  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:17  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:17  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:17  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:17  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:17  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:17  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:17  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:17 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:17 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:17 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:17 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:17 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:17 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:17 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:17 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:17 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:17 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:17 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:17 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:17 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:17 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:17 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:17 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:17 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:17 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:17 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:17 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:17 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:17 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:17 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:17 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:17 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:17 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:17 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:17 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:17 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:17 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:17 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:17 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:17 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:17 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:17 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:17 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:17 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:17 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:17 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:17 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:17 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:17 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:17 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:17 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:17 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:17 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:17 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:17 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:17 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:17 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:17 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:17 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:17 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:17 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:17 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:17 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:17 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:17 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:17 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:17 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:17 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:17 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:17 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:17 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:17 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:17 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:17 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:17 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:17 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@9)[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange:             > 10:5-10:5 -> "i"[0m
2022/04/07 14:59:17 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:17 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:17 [92mIDE --> LS REQU textDocument/documentSymbol 17[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 17: [93mread-locked[0m[0m
2022/04/07 14:59:17 [92m                textDocument/documentSymbol 17: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:17 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 18[0m
2022/04/07 14:59:18 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 18[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 17: [93mread-unlocked[0m[0m
2022/04/07 14:59:18 [32mIDE <-- LS RESP textDocument/documentSymbol 17[0m
2022/04/07 14:59:18 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@10)[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange:   > 8:6-8:6 (len=0) -> "d"[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#inclid

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:18 Ino Range: 8:6-8:6 -> Cpp Range:10:6-10:6
2022/04/07 14:59:18   > Current sketchmapper content:
2022/04/07 14:59:18   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:18   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:18   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:18   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:18   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:18   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:18   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:18   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:18   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:18   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:18  10: #inclid                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:18  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:18  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:18  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:18  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:18  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:18  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:18  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:18  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:18  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:18  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:18  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:18  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:18  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:18  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:18  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:18  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:18  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:18  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:18  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:18  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:18  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:18  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:18  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:18  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:18  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:18  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:18  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:18  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:18  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:18  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:18  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:18  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:18  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:18  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:18  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:18  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:18  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:18  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:18  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:18  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:18  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:18  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:18  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:18  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:18  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:18  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:18  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:18  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:18  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:18  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:18  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:18  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:18  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:18  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:18  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:18  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:18  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:18  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:18  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:18  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:18  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:18  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:18  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:18  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:18  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:18  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:18  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:18  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:18  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:18  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:18  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:18  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:18  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:18  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:18  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:18  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:18  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:18  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:18  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:18  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:18  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:18  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:18  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:18  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:18  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:18  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:18  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:18  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:18  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:18 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:18 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:18 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:18 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:18 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:18 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:18 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:18 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:18 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:18 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:18 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:18 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:18 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:18 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:18 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:18 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:18 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:18 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:18 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:18 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:18 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:18 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:18 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:18 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:18 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:18 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:18 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:18 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:18 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:18 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:18 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:18 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:18 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:18 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:18 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:18 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:18 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:18 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:18 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:18 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:18 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:18 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:18 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:18 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:18 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:18 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:18 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:18 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:18 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:18 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:18 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:18 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:18 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:18 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:18 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:18 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:18 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:18 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:18 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:18 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:18 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:18 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:18 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:18 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:18 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:18 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:18 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:18 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:18 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@10)[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange:             > 10:6-10:6 -> "d"[0m
2022/04/07 14:59:18 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:18 [92mIDE --> LS REQU textDocument/documentSymbol 18[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: [93mread-locked[0m[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:18 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 19[0m
2022/04/07 14:59:18 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 19[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 18: [93mread-unlocked[0m[0m
2022/04/07 14:59:18 [32mIDE <-- LS RESP textDocument/documentSymbol 18[0m
2022/04/07 14:59:18 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@11)[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange:   > 8:7-8:7 (len=0) -> "e"[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#inclide

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:18 Ino Range: 8:7-8:7 -> Cpp Range:10:7-10:7
2022/04/07 14:59:18   > Current sketchmapper content:
2022/04/07 14:59:18   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:18   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:18   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:18   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:18   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:18   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:18   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:18   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:18   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:18   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:18  10: #inclide                                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:18  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:18  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:18  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:18  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:18  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:18  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:18  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:18  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:18  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:18  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:18  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:18  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:18  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:18  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:18  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:18  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:18  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:18  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:18  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:18  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:18  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:18  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:18  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:18  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:18  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:18  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:18  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:18  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:18  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:18  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:18  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:18  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:18  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:18  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:18  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:18  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:18  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:18  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:18  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:18  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:18  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:18  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:18  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:18  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:18  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:18  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:18  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:18  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:18  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:18  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:18  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:18  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:18  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:18  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:18  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:18  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:18  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:18  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:18  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:18  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:18  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:18  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:18  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:18  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:18  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:18  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:18  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:18  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:18  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:18  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:18  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:18  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:18  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:18  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:18  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:18  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:18  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:18  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:18  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:18  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:18  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:18  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:18  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:18  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:18  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:18  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:18  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:18  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:18  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:18 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:18 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:18 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:18 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:18 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:18 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:18 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:18 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:18 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:18 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:18 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:18 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:18 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:18 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:18 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:18 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:18 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:18 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:18 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:18 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:18 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:18 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:18 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:18 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:18 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:18 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:18 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:18 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:18 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:18 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:18 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:18 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:18 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:18 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:18 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:18 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:18 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:18 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:18 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:18 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:18 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:18 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:18 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:18 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:18 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:18 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:18 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:18 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:18 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:18 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:18 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:18 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:18 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:18 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:18 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:18 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:18 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:18 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:18 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:18 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:18 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:18 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:18 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:18 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:18 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:18 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:18 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:18 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:18 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@11)[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange:             > 10:7-10:7 -> "e"[0m
2022/04/07 14:59:18 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:18 [92mIDE --> LS REQU textDocument/documentSymbol 19[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: [93mread-locked[0m[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:18 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 20[0m
2022/04/07 14:59:18 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (25 diagnostics):[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (22 diagnostics):[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:18 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (26 diagnostics):[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 10:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:1-10:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:1-8:7 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (23 diagnostics):[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 8:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:18 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:18 [91m                            $/progress: backgroundIndexProgress REPORT, 16/40, 40.0%[0m
2022/04/07 14:59:18 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:18 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:18 [91m                            $/progress: backgroundIndexProgress REPORT, 16/40, 40.0%[0m
2022/04/07 14:59:18 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:18 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 20[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:18 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (26 diagnostics):[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 10:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:1-10:8 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:1-8:8 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 19: [93mread-unlocked[0m[0m
2022/04/07 14:59:18 [32mIDE <-- LS RESP textDocument/documentSymbol 19[0m
2022/04/07 14:59:18 [92mIDE --> LS REQU textDocument/codeAction 20[0m
2022/04/07 14:59:18 [92m                textDocument/codeAction 20: [93mread-locked[0m[0m
2022/04/07 14:59:18 [92m                textDocument/codeAction 20: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:8)[0m
2022/04/07 14:59:18 [92m                textDocument/codeAction 20: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:18 [92m                textDocument/codeAction 20:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:8:8)[0m
2022/04/07 14:59:18 [91mIDE     LS --> Clangd REQU textDocument/codeAction 21[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:18 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 21[0m
2022/04/07 14:59:18 [92m                textDocument/codeAction 20: [93mread-unlocked[0m[0m
2022/04/07 14:59:18 [32mIDE <-- LS RESP textDocument/codeAction 20[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:18 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (23 diagnostics):[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 8:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:18 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:18 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@12)[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange:   > 8:7-8:8 (len=1) -> ""[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#inclid

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:18 Ino Range: 8:7-8:8 -> Cpp Range:10:7-10:8
2022/04/07 14:59:18   > Current sketchmapper content:
2022/04/07 14:59:18   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:18   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:18   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:18   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:18   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:18   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:18   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:18   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:18   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:18   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:18  10: #inclid                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:18  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:18  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:18  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:18  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:18  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:18  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:18  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:18  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:18  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:18  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:18  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:18  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:18  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:18  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:18  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:18  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:18  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:18  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:18  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:18  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:18  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:18  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:18  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:18  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:18  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:18  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:18  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:18  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:18  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:18  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:18  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:18  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:18  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:18  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:18  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:18  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:18  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:18  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:18  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:18  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:18  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:18  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:18  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:18  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:18  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:18  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:18  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:18  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:18  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:18  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:18  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:18  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:18  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:18  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:18  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:18  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:18  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:18  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:18  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:18  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:18  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:18  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:18  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:18  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:18  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:18  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:18  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:18  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:18  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:18  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:18  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:18  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:18  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:18  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:18  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:18  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:18  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:18  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:18  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:18  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:18  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:18  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:18  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:18  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:18  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:18  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:18  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:18  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:18  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:18 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:18 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:18 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:18 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:18 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:18 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:18 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:18 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:18 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:18 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:18 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:18 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:18 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:18 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:18 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:18 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:18 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:18 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:18 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:18 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:18 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:18 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:18 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:18 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:18 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:18 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:18 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:18 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:18 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:18 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:18 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:18 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:18 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:18 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:18 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:18 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:18 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:18 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:18 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:18 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:18 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:18 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:18 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:18 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:18 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:18 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:18 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:18 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:18 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:18 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:18 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:18 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:18 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:18 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:18 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:18 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:18 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:18 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:18 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:18 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:18 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:18 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:18 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:18 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:18 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:18 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:18 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:18 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:18 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@12)[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange:             > 10:7-10:8 -> ""[0m
2022/04/07 14:59:18 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:18 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:18 [92mIDE --> LS REQU textDocument/documentSymbol 21[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 21: [93mread-locked[0m[0m
2022/04/07 14:59:18 [92m                textDocument/documentSymbol 21: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:18 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 22[0m
2022/04/07 14:59:19 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:19 [91m                            $/progress: backgroundIndexProgress REPORT, 17/40, 42.0%[0m
2022/04/07 14:59:19 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:19 [91m                            $/progress: backgroundIndexProgress REPORT, 17/40, 42.0%[0m
2022/04/07 14:59:19 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:19 [95mSKETCH REBUILD: : Compile successful![0m
2022/04/07 14:59:19 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 22[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:19 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (26 diagnostics):[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 10:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:1-10:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:1-8:7 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 21: [93mread-unlocked[0m[0m
2022/04/07 14:59:19 [32mIDE <-- LS RESP textDocument/documentSymbol 21[0m
2022/04/07 14:59:19 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (23 diagnostics):[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 8:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@13)[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange:   > 8:6-8:7 (len=1) -> ""[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#incli

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:19 Ino Range: 8:6-8:7 -> Cpp Range:10:6-10:7
2022/04/07 14:59:19   > Current sketchmapper content:
2022/04/07 14:59:19   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:19   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:19   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:19   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:19   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:19   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:19   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:19   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:19   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:19   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:19  10: #incli                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:19  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:19  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:19  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:19  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:19  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:19  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:19  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:19  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:19  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:19  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:19  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:19  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:19  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:19  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:19  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:19  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:19  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:19  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:19  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:19  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:19  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:19  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:19  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:19  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:19  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:19  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:19  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:19  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:19  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:19  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:19  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:19  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:19  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:19  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:19  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:19  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:19  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:19  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:19  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:19  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:19  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:19  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:19  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:19  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:19  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:19  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:19  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:19  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:19  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:19  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:19  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:19  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:19  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:19  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:19  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:19  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:19  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:19  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:19  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:19  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:19  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:19  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:19  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:19  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:19  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:19  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:19  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:19  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:19  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:19  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:19  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:19  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:19  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:19  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:19  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:19  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:19  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:19  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:19  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:19  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:19  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:19  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:19  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:19  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:19  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:19  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:19  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:19  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:19  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:19 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:19 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:19 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:19 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:19 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:19 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:19 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:19 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:19 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:19 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:19 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:19 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:19 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:19 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:19 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:19 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:19 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:19 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:19 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:19 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:19 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:19 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:19 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:19 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:19 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:19 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:19 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:19 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:19 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:19 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:19 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:19 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:19 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:19 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:19 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:19 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:19 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:19 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:19 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:19 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:19 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:19 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:19 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:19 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:19 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:19 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:19 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:19 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:19 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:19 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:19 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:19 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:19 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:19 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:19 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:19 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:19 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:19 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:19 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:19 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:19 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:19 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:19 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:19 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:19 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:19 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:19 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:19 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:19 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@13)[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange:             > 10:6-10:7 -> ""[0m
2022/04/07 14:59:19 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:19 [92mIDE --> LS REQU textDocument/documentSymbol 22[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: [93mread-locked[0m[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:19 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 23[0m
2022/04/07 14:59:19 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:19 [91m                            $/progress: backgroundIndexProgress REPORT, 18/40, 45.0%[0m
2022/04/07 14:59:19 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:19 [91m                            $/progress: backgroundIndexProgress REPORT, 18/40, 45.0%[0m
2022/04/07 14:59:19 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:19 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 23[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:19 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 22: [93mread-unlocked[0m[0m
2022/04/07 14:59:19 [32mIDE <-- LS RESP textDocument/documentSymbol 22[0m
2022/04/07 14:59:19 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:19 [95mSKETCH REBUILD: : [93mwrite-locked[0m[0m
2022/04/07 14:59:19 [95mSKETCH REBUILD: : [93mwrite-unlocked[0m[0m
2022/04/07 14:59:19 [95mSKETCH REBUILD: : Error: context canceled[0m
2022/04/07 14:59:19 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (26 diagnostics):[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 10:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:1-10:6 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:1-8:6 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (23 diagnostics):[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 8:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@14)[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange:   > 8:5-8:6 (len=1) -> ""[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#incl

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:19 Ino Range: 8:5-8:6 -> Cpp Range:10:5-10:6
2022/04/07 14:59:19   > Current sketchmapper content:
2022/04/07 14:59:19   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:19   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:19   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:19   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:19   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:19   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:19   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:19   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:19   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:19   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:19  10: #incl                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:19  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:19  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:19  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:19  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:19  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:19  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:19  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:19  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:19  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:19  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:19  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:19  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:19  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:19  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:19  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:19  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:19  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:19  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:19  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:19  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:19  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:19  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:19  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:19  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:19  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:19  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:19  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:19  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:19  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:19  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:19  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:19  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:19  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:19  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:19  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:19  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:19  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:19  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:19  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:19  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:19  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:19  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:19  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:19  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:19  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:19  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:19  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:19  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:19  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:19  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:19  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:19  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:19  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:19  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:19  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:19  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:19  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:19  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:19  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:19  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:19  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:19  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:19  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:19  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:19  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:19  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:19  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:19  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:19  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:19  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:19  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:19  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:19  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:19  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:19  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:19  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:19  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:19  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:19  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:19  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:19  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:19  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:19  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:19  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:19  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:19  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:19  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:19  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:19  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:19 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:19 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:19 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:19 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:19 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:19 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:19 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:19 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:19 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:19 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:19 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:19 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:19 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:19 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:19 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:19 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:19 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:19 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:19 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:19 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:19 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:19 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:19 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:19 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:19 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:19 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:19 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:19 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:19 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:19 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:19 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:19 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:19 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:19 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:19 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:19 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:19 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:19 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:19 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:19 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:19 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:19 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:19 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:19 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:19 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:19 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:19 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:19 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:19 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:19 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:19 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:19 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:19 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:19 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:19 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:19 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:19 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:19 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:19 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:19 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:19 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:19 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:19 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:19 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:19 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:19 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:19 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:19 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:19 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@14)[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange:             > 10:5-10:6 -> ""[0m
2022/04/07 14:59:19 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:19 [92mIDE --> LS REQU textDocument/documentSymbol 23[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: [93mread-locked[0m[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:19 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 24[0m
2022/04/07 14:59:19 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 24[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:19 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (26 diagnostics):[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 10:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:1-10:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:1-8:5 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 23: [93mread-unlocked[0m[0m
2022/04/07 14:59:19 [32mIDE <-- LS RESP textDocument/documentSymbol 23[0m
2022/04/07 14:59:19 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:19 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:19 [91m                            $/progress: backgroundIndexProgress REPORT, 19/40, 47.0%[0m
2022/04/07 14:59:19 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:19 [91m                            $/progress: backgroundIndexProgress REPORT, 19/40, 47.0%[0m
2022/04/07 14:59:19 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:19 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (23 diagnostics):[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 8:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:19 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:19 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@15)[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange:   > 8:5-8:5 (len=0) -> "u"[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#inclu

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:19 Ino Range: 8:5-8:5 -> Cpp Range:10:5-10:5
2022/04/07 14:59:19   > Current sketchmapper content:
2022/04/07 14:59:19   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:19   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:19   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:19   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:19   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:19   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:19   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:19   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:19   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:19   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:19  10: #inclu                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:19  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:19  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:19  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:19  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:19  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:19  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:19  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:19  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:19  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:19  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:19  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:19  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:19  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:19  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:19  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:19  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:19  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:19  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:19  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:19  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:19  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:19  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:19  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:19  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:19  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:19  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:19  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:19  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:19  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:19  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:19  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:19  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:19  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:19  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:19  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:19  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:19  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:19  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:19  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:19  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:19  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:19  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:19  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:19  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:19  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:19  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:19  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:19  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:19  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:19  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:19  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:19  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:19  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:19  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:19  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:19  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:19  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:19  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:19  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:19  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:19  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:19  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:19  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:19  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:19  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:19  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:19  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:19  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:19  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:19  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:19  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:19  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:19  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:19  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:19  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:19  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:19  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:19  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:19  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:19  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:19  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:19  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:19  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:19  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:19  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:19  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:19  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:19  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:19  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:19 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:19 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:19 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:19 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:19 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:19 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:19 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:19 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:19 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:19 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:19 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:19 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:19 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:19 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:19 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:19 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:19 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:19 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:19 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:19 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:19 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:19 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:19 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:19 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:19 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:19 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:19 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:19 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:19 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:19 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:19 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:19 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:19 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:19 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:19 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:19 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:19 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:19 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:19 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:19 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:19 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:19 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:19 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:19 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:19 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:19 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:19 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:19 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:19 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:19 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:19 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:19 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:19 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:19 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:19 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:19 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:19 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:19 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:19 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:19 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:19 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:19 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:19 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:19 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:19 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:19 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:19 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:19 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:19 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@15)[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange:             > 10:5-10:5 -> "u"[0m
2022/04/07 14:59:19 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:19 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:19 [92mIDE --> LS REQU textDocument/documentSymbol 24[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 24: [93mread-locked[0m[0m
2022/04/07 14:59:19 [92m                textDocument/documentSymbol 24: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:19 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 25[0m
2022/04/07 14:59:19 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:19 [91m                            $/progress: backgroundIndexProgress REPORT, 20/40, 50.0%[0m
2022/04/07 14:59:19 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:19 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:19 [91m                            $/progress: backgroundIndexProgress REPORT, 20/40, 50.0%[0m
2022/04/07 14:59:19 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:20 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 25[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:20 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (26 diagnostics):[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 10:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:1-10:6 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:1-8:6 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 24: [93mread-unlocked[0m[0m
2022/04/07 14:59:20 [32mIDE <-- LS RESP textDocument/documentSymbol 24[0m
2022/04/07 14:59:20 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (23 diagnostics):[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 8:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@16)[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange:   > 8:6-8:6 (len=0) -> "d"[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#includ

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:20 Ino Range: 8:6-8:6 -> Cpp Range:10:6-10:6
2022/04/07 14:59:20   > Current sketchmapper content:
2022/04/07 14:59:20   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:20   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:20   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:20   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:20   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:20   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:20   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:20   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:20   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:20   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:20  10: #includ                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:20  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:20  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:20  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:20  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:20  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:20  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:20  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:20  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:20  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:20  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:20  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:20  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:20  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:20  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:20  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:20  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:20  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:20  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:20  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:20  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:20  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:20  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:20  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:20  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:20  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:20  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:20  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:20  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:20  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:20  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:20  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:20  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:20  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:20  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:20  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:20  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:20  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:20  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:20  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:20  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:20  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:20  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:20  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:20  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:20  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:20  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:20  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:20  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:20  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:20  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:20  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:20  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:20  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:20  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:20  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:20  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:20  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:20  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:20  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:20  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:20  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:20  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:20  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:20  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:20  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:20  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:20  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:20  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:20  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:20  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:20  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:20  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:20  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:20  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:20  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:20  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:20  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:20  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:20  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:20  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:20  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:20  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:20  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:20  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:20  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:20  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:20  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:20  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:20  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:20 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:20 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:20 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:20 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:20 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:20 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:20 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:20 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:20 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:20 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:20 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:20 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:20 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:20 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:20 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:20 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:20 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:20 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:20 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:20 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:20 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:20 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:20 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:20 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:20 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:20 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:20 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:20 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:20 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:20 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:20 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:20 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:20 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:20 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:20 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:20 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:20 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:20 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:20 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:20 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:20 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:20 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:20 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:20 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:20 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:20 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:20 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:20 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:20 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:20 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:20 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:20 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:20 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:20 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:20 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:20 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:20 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:20 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:20 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:20 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:20 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:20 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:20 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:20 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:20 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:20 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:20 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:20 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:20 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@16)[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange:             > 10:6-10:6 -> "d"[0m
2022/04/07 14:59:20 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:20 [92mIDE --> LS REQU textDocument/documentSymbol 25[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: [93mread-locked[0m[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:20 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 26[0m
2022/04/07 14:59:20 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:20 [91m                            $/progress: backgroundIndexProgress REPORT, 21/40, 52.0%[0m
2022/04/07 14:59:20 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:20 [91m                            $/progress: backgroundIndexProgress REPORT, 21/40, 52.0%[0m
2022/04/07 14:59:20 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:20 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:20 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 26[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:20 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (26 diagnostics):[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 10:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:1-10:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:1-8:7 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 25: [93mread-unlocked[0m[0m
2022/04/07 14:59:20 [32mIDE <-- LS RESP textDocument/documentSymbol 25[0m
2022/04/07 14:59:20 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (23 diagnostics):[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 8:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:20 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:20 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:20 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@17)[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange:   > 8:7-8:7 (len=0) -> "e"[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#include

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:20 Ino Range: 8:7-8:7 -> Cpp Range:10:7-10:7
2022/04/07 14:59:20   > Current sketchmapper content:
2022/04/07 14:59:20   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:20   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:20   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:20   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:20   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:20   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:20   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:20   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:20   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:20   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:20  10: #include                                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:20  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:20  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:20  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:20  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:20  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:20  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:20  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:20  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:20  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:20  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:20  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:20  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:20  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:20  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:20  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:20  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:20  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:20  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:20  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:20  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:20  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:20  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:20  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:20  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:20  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:20  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:20  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:20  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:20  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:20  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:20  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:20  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:20  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:20  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:20  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:20  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:20  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:20  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:20  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:20  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:20  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:20  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:20  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:20  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:20  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:20  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:20  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:20  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:20  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:20  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:20  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:20  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:20  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:20  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:20  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:20  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:20  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:20  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:20  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:20  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:20  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:20  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:20  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:20  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:20  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:20  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:20  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:20  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:20  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:20  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:20  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:20  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:20  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:20  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:20  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:20  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:20  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:20  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:20  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:20  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:20  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:20  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:20  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:20  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:20  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:20  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:20  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:20  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:20  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:20 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:20 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:20 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:20 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:20 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:20 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:20 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:20 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:20 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:20 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:20 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:20 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:20 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:20 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:20 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:20 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:20 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:20 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:20 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:20 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:20 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:20 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:20 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:20 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:20 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:20 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:20 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:20 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:20 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:20 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:20 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:20 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:20 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:20 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:20 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:20 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:20 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:20 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:20 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:20 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:20 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:20 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:20 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:20 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:20 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:20 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:20 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:20 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:20 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:20 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:20 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:20 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:20 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:20 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:20 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:20 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:20 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:20 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:20 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:20 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:20 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:20 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:20 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:20 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:20 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:20 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:20 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:20 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:20 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@17)[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange:             > 10:7-10:7 -> "e"[0m
2022/04/07 14:59:20 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:20 [92mIDE --> LS REQU textDocument/documentSymbol 26[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: [93mread-locked[0m[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:20 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 27[0m
2022/04/07 14:59:20 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 27[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:20 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:20 [91m                            $/progress: backgroundIndexProgress REPORT, 22/40, 55.0%[0m
2022/04/07 14:59:20 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:20 [91m                            $/progress: backgroundIndexProgress REPORT, 22/40, 55.0%[0m
2022/04/07 14:59:20 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:20 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 26: [93mread-unlocked[0m[0m
2022/04/07 14:59:20 [32mIDE <-- LS RESP textDocument/documentSymbol 26[0m
2022/04/07 14:59:20 [92mIDE --> LS REQU textDocument/codeAction 27[0m
2022/04/07 14:59:20 [92m                textDocument/codeAction 27: [93mread-locked[0m[0m
2022/04/07 14:59:20 [92m                textDocument/codeAction 27: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:8)[0m
2022/04/07 14:59:20 [92m                textDocument/codeAction 27: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:20 [92m                textDocument/codeAction 27:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:8:8)[0m
2022/04/07 14:59:20 [91mIDE     LS --> Clangd REQU textDocument/codeAction 28[0m
2022/04/07 14:59:20 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 28[0m
2022/04/07 14:59:20 [92m                textDocument/codeAction 27: [93mread-unlocked[0m[0m
2022/04/07 14:59:20 [32mIDE <-- LS RESP textDocument/codeAction 27[0m
2022/04/07 14:59:20 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@18)[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange:   > 8:8-8:8 (len=0) -> " "[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#include 

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:20 Ino Range: 8:8-8:8 -> Cpp Range:10:8-10:8
2022/04/07 14:59:20   > Current sketchmapper content:
2022/04/07 14:59:20   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:20   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:20   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:20   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:20   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:20   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:20   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:20   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:20   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:20   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:20  10: #include                                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:20  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:20  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:20  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:20  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:20  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:20  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:20  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:20  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:20  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:20  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:20  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:20  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:20  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:20  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:20  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:20  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:20  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:20  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:20  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:20  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:20  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:20  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:20  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:20  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:20  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:20  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:20  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:20  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:20  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:20  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:20  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:20  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:20  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:20  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:20  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:20  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:20  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:20  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:20  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:20  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:20  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:20  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:20  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:20  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:20  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:20  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:20  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:20  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:20  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:20  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:20  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:20  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:20  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:20  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:20  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:20  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:20  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:20  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:20  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:20  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:20  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:20  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:20  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:20  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:20  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:20  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:20  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:20  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:20  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:20  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:20  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:20  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:20  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:20  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:20  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:20  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:20  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:20  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:20  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:20  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:20  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:20  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:20  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:20  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:20  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:20  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:20  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:20  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:20  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:20 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:20 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:20 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:20 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:20 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:20 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:20 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:20 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:20 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:20 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:20 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:20 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:20 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:20 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:20 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:20 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:20 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:20 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:20 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:20 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:20 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:20 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:20 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:20 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:20 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:20 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:20 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:20 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:20 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:20 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:20 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:20 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:20 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:20 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:20 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:20 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:20 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:20 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:20 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:20 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:20 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:20 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:20 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:20 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:20 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:20 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:20 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:20 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:20 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:20 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:20 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:20 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:20 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:20 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:20 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:20 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:20 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:20 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:20 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:20 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:20 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:20 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:20 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:20 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:20 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:20 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:20 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:20 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:20 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@18)[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange:             > 10:8-10:8 -> " "[0m
2022/04/07 14:59:20 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:20 [92mIDE --> LS REQU textDocument/documentSymbol 28[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: [93mread-locked[0m[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:20 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 29[0m
2022/04/07 14:59:20 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:20 [91m                            $/progress: backgroundIndexProgress REPORT, 23/40, 57.0%[0m
2022/04/07 14:59:20 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:20 [91m                            $/progress: backgroundIndexProgress REPORT, 23/40, 57.0%[0m
2022/04/07 14:59:20 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:20 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 29[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:20 [92m                textDocument/documentSymbol 28: [93mread-unlocked[0m[0m
2022/04/07 14:59:20 [32mIDE <-- LS RESP textDocument/documentSymbol 28[0m
2022/04/07 14:59:20 [92mIDE --> LS NOTIF textDocument/didSave[0m
2022/04/07 14:59:20 [92m                 textDocument/didSave: [93mwrite-locked[0m[0m
2022/04/07 14:59:20 [92m                 textDocument/didSave: notification is not forwarded to clang[0m
2022/04/07 14:59:20 [92m                 textDocument/didSave: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:20 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:20 [91m                            $/progress: backgroundIndexProgress REPORT, 24/40, 60.0%[0m
2022/04/07 14:59:20 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:20 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:20 [91m                            $/progress: backgroundIndexProgress REPORT, 24/40, 60.0%[0m
2022/04/07 14:59:20 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:20 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@19)[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange:   > 8:9-8:9 (len=0) -> "<"[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#include <

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:20 Ino Range: 8:9-8:9 -> Cpp Range:10:9-10:9
2022/04/07 14:59:20   > Current sketchmapper content:
2022/04/07 14:59:20   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:20   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:20   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:20   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:20   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:20   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:20   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:20   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:20   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:20   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:20  10: #include <                                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:20  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:20  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:20  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:20  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:20  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:20  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:20  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:20  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:20  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:20  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:20  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:20  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:20  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:20  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:20  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:20  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:20  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:20  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:20  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:20  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:20  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:20  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:20  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:20  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:20  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:20  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:20  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:20  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:20  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:20  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:20  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:20  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:20  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:20  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:20  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:20  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:20  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:20  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:20  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:20  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:20  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:20  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:20  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:20  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:20  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:20  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:20  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:20  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:20  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:20  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:20  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:20  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:20  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:20  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:20  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:20  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:20  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:20  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:20  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:20  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:20  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:20  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:20  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:20  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:20  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:20  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:20  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:20  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:20  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:20  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:20  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:20  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:20  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:20  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:20  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:20  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:20  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:20  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:20  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:20  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:20  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:20  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:20  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:20  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:20  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:20  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:20  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:20  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:20  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:20 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:20 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:20 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:20 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:20 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:20 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:20 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:20 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:20 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:20 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:20 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:20 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:20 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:20 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:20 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:20 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:20 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:20 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:20 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:20 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:20 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:20 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:20 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:20 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:20 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:20 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:20 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:20 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:20 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:20 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:20 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:20 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:20 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:20 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:20 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:20 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:20 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:20 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:20 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:20 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:20 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:20 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:20 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:20 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:20 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:20 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:20 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:20 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:20 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:20 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:20 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:20 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:20 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:20 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:20 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:20 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:20 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:20 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:20 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:20 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:20 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:20 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:20 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:20 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:20 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:20 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:20 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:20 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:20 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@19)[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange:             > 10:9-10:9 -> "<"[0m
2022/04/07 14:59:20 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:20 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:20 [92mIDE --> LS REQU textDocument/completion 29[0m
2022/04/07 14:59:20 [92m                textDocument/completion 29: [93mread-locked[0m[0m
2022/04/07 14:59:20 [92m                textDocument/completion 29: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:20 [92m                textDocument/completion 29: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10[0m
2022/04/07 14:59:20 [91mIDE     LS --> Clangd REQU textDocument/completion 30[0m
2022/04/07 14:59:21 [31mIDE     LS <-- Clangd RESP textDocument/completion 30[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: <-- completion(98 items)[0m
2022/04/07 14:59:21 [92m                textDocument/completion 29: [93mread-unlocked[0m[0m
2022/04/07 14:59:21 [32mIDE <-- LS RESP textDocument/completion 29[0m
2022/04/07 14:59:21 [92mIDE --> LS REQU textDocument/documentSymbol 30[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: [93mread-locked[0m[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:21 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 31[0m
2022/04/07 14:59:21 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 31[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 30: [93mread-unlocked[0m[0m
2022/04/07 14:59:21 [32mIDE <-- LS RESP textDocument/documentSymbol 30[0m
2022/04/07 14:59:21 [92mIDE --> LS REQU textDocument/codeAction 31[0m
2022/04/07 14:59:21 [92m                textDocument/codeAction 31: [93mread-locked[0m[0m
2022/04/07 14:59:21 [92m                textDocument/codeAction 31: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10)[0m
2022/04/07 14:59:21 [92m                textDocument/codeAction 31: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:21 [92m                textDocument/codeAction 31:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:8:10)[0m
2022/04/07 14:59:21 [91mIDE     LS --> Clangd REQU textDocument/codeAction 32[0m
2022/04/07 14:59:21 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 32[0m
2022/04/07 14:59:21 [92m                textDocument/codeAction 31: [93mread-unlocked[0m[0m
2022/04/07 14:59:21 [32mIDE <-- LS RESP textDocument/codeAction 31[0m
2022/04/07 14:59:21 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@20)[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange:   > 8:10-8:10 (len=0) -> "s"[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#include <s

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:21 Ino Range: 8:10-8:10 -> Cpp Range:10:10-10:10
2022/04/07 14:59:21   > Current sketchmapper content:
2022/04/07 14:59:21   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:21   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:21   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:21   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:21   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:21   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:21   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:21   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:21   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:21   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:21  10: #include <s                                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:21  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:21  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:21  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:21  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:21  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:21  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:21  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:21  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:21  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:21  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:21  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:21  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:21  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:21  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:21  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:21  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:21  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:21  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:21  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:21  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:21  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:21  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:21  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:21  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:21  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:21  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:21  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:21  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:21  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:21  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:21  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:21  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:21  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:21  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:21  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:21  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:21  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:21  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:21  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:21  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:21  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:21  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:21  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:21  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:21  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:21  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:21  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:21  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:21  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:21  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:21  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:21  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:21  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:21  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:21  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:21  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:21  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:21  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:21  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:21  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:21  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:21  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:21  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:21  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:21  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:21  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:21  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:21  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:21  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:21  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:21  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:21  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:21  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:21  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:21  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:21  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:21  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:21  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:21  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:21  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:21  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:21  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:21  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:21  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:21  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:21  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:21  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:21  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:21  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:21 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:21 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:21 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:21 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:21 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:21 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:21 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:21 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:21 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:21 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:21 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:21 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:21 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:21 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:21 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:21 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:21 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:21 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:21 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:21 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:21 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:21 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:21 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:21 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:21 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:21 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:21 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:21 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:21 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:21 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:21 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:21 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:21 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:21 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:21 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:21 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:21 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:21 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:21 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:21 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:21 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:21 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:21 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:21 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:21 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:21 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:21 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:21 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:21 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:21 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:21 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:21 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:21 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:21 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:21 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:21 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:21 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:21 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:21 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:21 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:21 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:21 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:21 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:21 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:21 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:21 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:21 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:21 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:21 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@20)[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange:             > 10:10-10:10 -> "s"[0m
2022/04/07 14:59:21 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:21 [92mIDE --> LS REQU textDocument/documentSymbol 32[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: [93mread-locked[0m[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:21 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 33[0m
2022/04/07 14:59:21 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:21 [91m                            $/progress: backgroundIndexProgress REPORT, 24/41, 58.0%[0m
2022/04/07 14:59:21 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:21 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:21 [91m                            $/progress: backgroundIndexProgress REPORT, 25/41, 60.0%[0m
2022/04/07 14:59:21 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:21 [91m                            $/progress: backgroundIndexProgress REPORT, 25/41, 60.0%[0m
2022/04/07 14:59:21 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:21 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:21 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 33[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 32: [93mread-unlocked[0m[0m
2022/04/07 14:59:21 [32mIDE <-- LS RESP textDocument/documentSymbol 32[0m
2022/04/07 14:59:21 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@21)[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange:   > 8:11-8:11 (len=0) -> "d"[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#include <sd

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:21 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:21 [91m                            $/progress: backgroundIndexProgress REPORT, 26/41, 63.0%[0m
2022/04/07 14:59:21 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:21 [91m                            $/progress: backgroundIndexProgress REPORT, 26/41, 63.0%[0m
2022/04/07 14:59:21 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:21 Ino Range: 8:11-8:11 -> Cpp Range:10:11-10:11
2022/04/07 14:59:21   > Current sketchmapper content:
2022/04/07 14:59:21   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:21   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:21   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:21   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:21   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:21   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:21   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:21   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:21   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:21   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:21  10: #include <sd                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:21  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:21  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:21  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:21  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:21  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:21  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:21  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:21  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:21  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:21  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:21  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:21  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:21  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:21  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:21  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:21  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:21  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:21  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:21  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:21  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:21  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:21  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:21  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:21  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:21  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:21  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:21  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:21  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:21  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:21  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:21  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:21  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:21  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:21  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:21  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:21  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:21  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:21  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:21  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:21  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:21  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:21  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:21  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:21  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:21  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:21  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:21  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:21  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:21  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:21  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:21  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:21  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:21  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:21  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:21  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:21  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:21  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:21  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:21  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:21  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:21  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:21  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:21  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:21  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:21  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:21  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:21  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:21  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:21  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:21  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:21  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:21  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:21  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:21  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:21  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:21  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:21  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:21  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:21  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:21  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:21  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:21  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:21  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:21  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:21  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:21  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:21  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:21  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:21  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:21 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:21 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:21 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:21 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:21 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:21 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:21 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:21 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:21 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:21 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:21 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:21 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:21 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:21 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:21 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:21 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:21 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:21 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:21 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:21 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:21 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:21 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:21 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:21 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:21 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:21 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:21 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:21 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:21 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:21 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:21 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:21 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:21 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:21 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:21 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:21 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:21 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:21 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:21 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:21 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:21 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:21 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:21 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:21 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:21 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:21 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:21 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:21 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:21 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:21 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:21 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:21 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:21 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:21 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:21 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:21 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:21 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:21 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:21 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:21 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:21 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:21 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:21 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:21 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:21 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:21 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:21 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:21 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:21 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@21)[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange:             > 10:11-10:11 -> "d"[0m
2022/04/07 14:59:21 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:21 [92mIDE --> LS REQU textDocument/documentSymbol 33[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: [93mread-locked[0m[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:21 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 34[0m
2022/04/07 14:59:21 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:21 [91m                            $/progress: backgroundIndexProgress REPORT, 27/41, 65.0%[0m
2022/04/07 14:59:21 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:21 [91m                            $/progress: backgroundIndexProgress REPORT, 27/41, 65.0%[0m
2022/04/07 14:59:21 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:21 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 34[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 33: [93mread-unlocked[0m[0m
2022/04/07 14:59:21 [32mIDE <-- LS RESP textDocument/documentSymbol 33[0m
2022/04/07 14:59:21 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@22)[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange:   > 8:12-8:12 (len=0) -> "f"[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#include <sdf

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:21 Ino Range: 8:12-8:12 -> Cpp Range:10:12-10:12
2022/04/07 14:59:21   > Current sketchmapper content:
2022/04/07 14:59:21   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:21   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:21   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:21   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:21   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:21   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:21   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:21   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:21   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:21   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:21  10: #include <sdf                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:21  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:21  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:21  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:21  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:21  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:21  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:21  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:21  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:21  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:21  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:21  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:21  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:21  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:21  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:21  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:21  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:21  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:21  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:21  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:21  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:21  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:21  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:21  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:21  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:21  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:21  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:21  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:21  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:21  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:21  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:21  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:21  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:21  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:21  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:21  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:21  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:21  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:21  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:21  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:21  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:21  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:21  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:21  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:21  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:21  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:21  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:21  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:21  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:21  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:21  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:21  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:21  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:21  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:21  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:21  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:21  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:21  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:21  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:21  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:21  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:21  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:21  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:21  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:21  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:21  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:21  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:21  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:21  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:21  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:21  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:21  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:21  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:21  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:21  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:21  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:21  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:21  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:21  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:21  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:21  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:21  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:21  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:21  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:21  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:21  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:21  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:21  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:21  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:21  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:21 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:21 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:21 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:21 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:21 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:21 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:21 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:21 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:21 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:21 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:21 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:21 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:21 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:21 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:21 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:21 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:21 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:21 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:21 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:21 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:21 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:21 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:21 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:21 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:21 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:21 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:21 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:21 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:21 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:21 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:21 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:21 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:21 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:21 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:21 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:21 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:21 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:21 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:21 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:21 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:21 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:21 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:21 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:21 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:21 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:21 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:21 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:21 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:21 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:21 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:21 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:21 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:21 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:21 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:21 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:21 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:21 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:21 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:21 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:21 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:21 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:21 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:21 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:21 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:21 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:21 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:21 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:21 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:21 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@22)[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange:             > 10:12-10:12 -> "f"[0m
2022/04/07 14:59:21 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:21 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:21 [92mIDE --> LS REQU textDocument/documentSymbol 34[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 34: [93mread-locked[0m[0m
2022/04/07 14:59:21 [92m                textDocument/documentSymbol 34: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:21 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 35[0m
2022/04/07 14:59:22 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 35[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 34: [93mread-unlocked[0m[0m
2022/04/07 14:59:22 [32mIDE <-- LS RESP textDocument/documentSymbol 34[0m
2022/04/07 14:59:22 [92mIDE --> LS REQU textDocument/codeAction 35[0m
2022/04/07 14:59:22 [92m                textDocument/codeAction 35: [93mread-locked[0m[0m
2022/04/07 14:59:22 [92m                textDocument/codeAction 35: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:13)[0m
2022/04/07 14:59:22 [92m                textDocument/codeAction 35: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:22 [92m                textDocument/codeAction 35:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:8:13)[0m
2022/04/07 14:59:22 [91mIDE     LS --> Clangd REQU textDocument/codeAction 36[0m
2022/04/07 14:59:22 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 36[0m
2022/04/07 14:59:22 [92m                textDocument/codeAction 35: [93mread-unlocked[0m[0m
2022/04/07 14:59:22 [32mIDE <-- LS RESP textDocument/codeAction 35[0m
2022/04/07 14:59:22 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@23)[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange:   > 8:12-8:13 (len=1) -> ""[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#include <sd

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:22 Ino Range: 8:12-8:13 -> Cpp Range:10:12-10:13
2022/04/07 14:59:22   > Current sketchmapper content:
2022/04/07 14:59:22   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:22   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:22   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:22   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:22   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:22   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:22   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:22   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:22   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:22   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:22  10: #include <sd                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:22  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:22  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:22  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:22  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:22  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:22  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:22  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:22  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:22  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:22  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:22  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:22  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:22  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:22  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:22  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:22  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:22  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:22  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:22  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:22  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:22  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:22  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:22  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:22  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:22  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:22  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:22  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:22  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:22  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:22  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:22  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:22  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:22  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:22  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:22  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:22  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:22  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:22  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:22  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:22  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:22  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:22  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:22  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:22  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:22  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:22  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:22  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:22  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:22  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:22  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:22  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:22  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:22  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:22  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:22  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:22  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:22  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:22  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:22  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:22  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:22  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:22  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:22  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:22  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:22  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:22  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:22  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:22  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:22  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:22  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:22  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:22  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:22  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:22  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:22  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:22  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:22  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:22  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:22  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:22  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:22  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:22  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:22  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:22  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:22  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:22  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:22  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:22  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:22  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:22 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:22 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:22 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:22 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:22 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:22 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:22 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:22 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:22 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:22 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:22 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:22 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:22 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:22 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:22 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:22 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:22 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:22 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:22 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:22 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:22 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:22 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:22 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:22 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:22 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:22 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:22 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:22 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:22 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:22 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:22 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:22 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:22 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:22 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:22 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:22 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:22 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:22 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:22 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:22 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:22 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:22 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:22 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:22 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:22 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:22 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:22 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:22 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:22 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:22 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:22 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:22 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:22 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:22 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:22 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:22 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:22 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:22 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:22 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:22 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:22 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:22 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:22 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:22 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:22 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:22 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:22 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:22 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:22 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@23)[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange:             > 10:12-10:13 -> ""[0m
2022/04/07 14:59:22 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:22 [92mIDE --> LS REQU textDocument/documentSymbol 36[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: [93mread-locked[0m[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:22 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 37[0m
2022/04/07 14:59:22 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:22 [91m                            $/progress: backgroundIndexProgress REPORT, 27/41, 65.0%[0m
2022/04/07 14:59:22 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:22 [91m                            $/progress: backgroundIndexProgress REPORT, 28/41, 68.0%[0m
2022/04/07 14:59:22 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:22 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:22 [91m                            $/progress: backgroundIndexProgress REPORT, 28/41, 68.0%[0m
2022/04/07 14:59:22 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:22 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 37[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 36: [93mread-unlocked[0m[0m
2022/04/07 14:59:22 [32mIDE <-- LS RESP textDocument/documentSymbol 36[0m
2022/04/07 14:59:22 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@24)[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange:   > 8:11-8:12 (len=1) -> ""[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#include <s

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:22 Ino Range: 8:11-8:12 -> Cpp Range:10:11-10:12
2022/04/07 14:59:22   > Current sketchmapper content:
2022/04/07 14:59:22   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:22   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:22   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:22   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:22   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:22   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:22   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:22   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:22   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:22   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:22  10: #include <s                                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:22  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:22  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:22  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:22  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:22  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:22  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:22  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:22  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:22  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:22  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:22  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:22  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:22  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:22  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:22  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:22  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:22  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:22  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:22  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:22  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:22  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:22  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:22  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:22  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:22  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:22  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:22  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:22  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:22  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:22  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:22  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:22  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:22  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:22  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:22  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:22  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:22  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:22  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:22  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:22  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:22  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:22  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:22  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:22  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:22  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:22  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:22  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:22  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:22  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:22  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:22  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:22  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:22  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:22  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:22  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:22  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:22  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:22  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:22  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:22  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:22  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:22  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:22  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:22  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:22  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:22  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:22  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:22  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:22  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:22  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:22  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:22  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:22  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:22  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:22  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:22  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:22  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:22  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:22  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:22  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:22  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:22  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:22  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:22  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:22  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:22  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:22  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:22  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:22  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:22 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:22 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:22 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:22 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:22 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:22 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:22 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:22 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:22 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:22 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:22 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:22 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:22 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:22 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:22 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:22 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:22 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:22 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:22 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:22 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:22 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:22 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:22 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:22 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:22 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:22 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:22 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:22 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:22 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:22 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:22 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:22 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:22 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:22 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:22 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:22 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:22 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:22 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:22 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:22 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:22 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:22 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:22 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:22 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:22 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:22 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:22 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:22 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:22 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:22 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:22 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:22 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:22 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:22 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:22 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:22 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:22 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:22 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:22 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:22 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:22 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:22 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:22 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:22 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:22 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:22 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:22 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:22 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:22 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@24)[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange:             > 10:11-10:12 -> ""[0m
2022/04/07 14:59:22 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:22 [92mIDE --> LS REQU textDocument/documentSymbol 37[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: [93mread-locked[0m[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:22 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 38[0m
2022/04/07 14:59:22 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:22 [91m                            $/progress: backgroundIndexProgress REPORT, 29/41, 70.0%[0m
2022/04/07 14:59:22 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:22 [91m                            $/progress: backgroundIndexProgress REPORT, 29/41, 70.0%[0m
2022/04/07 14:59:22 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:22 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:22 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 38[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:22 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:22 [91m                            $/progress: backgroundIndexProgress REPORT, 30/41, 73.0%[0m
2022/04/07 14:59:22 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:22 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:22 [91m                            $/progress: backgroundIndexProgress REPORT, 30/41, 73.0%[0m
2022/04/07 14:59:22 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 37: [93mread-unlocked[0m[0m
2022/04/07 14:59:22 [32mIDE <-- LS RESP textDocument/documentSymbol 37[0m
2022/04/07 14:59:22 [92mIDE --> LS REQU textDocument/completion 38[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: [93mread-locked[0m[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:11 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:11[0m
2022/04/07 14:59:22 [91mIDE     LS --> Clangd REQU textDocument/completion 39[0m
2022/04/07 14:59:22 [31mIDE     LS <-- Clangd RESP textDocument/completion 39[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (25 diagnostics):[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:10-10:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10-8:11 (.ino)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: <-- completion(80 items)[0m
2022/04/07 14:59:22 [92m                textDocument/completion 38: [93mread-unlocked[0m[0m
2022/04/07 14:59:22 [32mIDE <-- LS RESP textDocument/completion 38[0m
2022/04/07 14:59:22 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (22 diagnostics):[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:22 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:22 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@25)[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange:   > 8:10-8:11 (len=1) -> ""[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#include <

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:22 Ino Range: 8:10-8:11 -> Cpp Range:10:10-10:11
2022/04/07 14:59:22   > Current sketchmapper content:
2022/04/07 14:59:22   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:22   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:22   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:22   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:22   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:22   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:22   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:22   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:22   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:22   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:22  10: #include <                                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:22  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:22  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:22  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:22  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:22  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:22  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:22  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:22  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:22  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:22  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:22  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:22  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:22  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:22  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:22  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:22  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:22  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:22  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:22  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:22  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:22  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:22  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:22  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:22  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:22  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:22  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:22  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:22  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:22  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:22  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:22  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:22  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:22  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:22  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:22  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:22  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:22  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:22  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:22  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:22  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:22  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:22  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:22  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:22  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:22  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:22  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:22  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:22  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:22  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:22  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:22  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:22  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:22  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:22  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:22  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:22  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:22  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:22  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:22  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:22  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:22  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:22  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:22  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:22  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:22  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:22  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:22  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:22  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:22  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:22  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:22  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:22  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:22  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:22  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:22  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:22  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:22  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:22  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:22  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:22  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:22  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:22  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:22  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:22  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:22  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:22  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:22  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:22  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:22  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:22 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:22 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:22 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:22 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:22 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:22 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:22 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:22 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:22 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:22 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:22 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:22 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:22 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:22 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:22 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:22 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:22 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:22 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:22 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:22 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:22 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:22 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:22 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:22 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:22 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:22 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:22 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:22 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:22 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:22 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:22 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:22 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:22 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:22 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:22 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:22 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:22 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:22 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:22 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:22 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:22 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:22 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:22 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:22 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:22 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:22 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:22 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:22 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:22 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:22 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:22 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:22 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:22 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:22 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:22 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:22 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:22 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:22 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:22 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:22 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:22 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:22 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:22 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:22 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:22 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:22 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:22 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:22 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:22 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@25)[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange:             > 10:10-10:11 -> ""[0m
2022/04/07 14:59:22 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:22 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:22 [92mIDE --> LS REQU textDocument/documentSymbol 39[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 39: [93mread-locked[0m[0m
2022/04/07 14:59:22 [92m                textDocument/documentSymbol 39: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:22 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 40[0m
2022/04/07 14:59:22 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:22 [91m                            $/progress: backgroundIndexProgress REPORT, 31/41, 75.0%[0m
2022/04/07 14:59:22 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:22 [91m                            $/progress: backgroundIndexProgress REPORT, 31/41, 75.0%[0m
2022/04/07 14:59:22 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:22 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:23 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 40[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 39: [93mread-unlocked[0m[0m
2022/04/07 14:59:23 [32mIDE <-- LS RESP textDocument/documentSymbol 39[0m
2022/04/07 14:59:23 [92mIDE --> LS REQU textDocument/codeAction 40[0m
2022/04/07 14:59:23 [92m                textDocument/codeAction 40: [93mread-locked[0m[0m
2022/04/07 14:59:23 [92m                textDocument/codeAction 40: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:10)[0m
2022/04/07 14:59:23 [92m                textDocument/codeAction 40: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:23 [92m                textDocument/codeAction 40:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:8:10)[0m
2022/04/07 14:59:23 [91mIDE     LS --> Clangd REQU textDocument/codeAction 41[0m
2022/04/07 14:59:23 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 41[0m
2022/04/07 14:59:23 [92m                textDocument/codeAction 40: [93mread-unlocked[0m[0m
2022/04/07 14:59:23 [32mIDE <-- LS RESP textDocument/codeAction 40[0m
2022/04/07 14:59:23 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@26)[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange:   > 8:9-8:10 (len=1) -> ""[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#include 

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:23 Ino Range: 8:9-8:10 -> Cpp Range:10:9-10:10
2022/04/07 14:59:23   > Current sketchmapper content:
2022/04/07 14:59:23   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:23   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:23   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:23   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:23   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:23   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:23   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:23   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:23   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:23   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:23  10: #include                                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:23  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:23  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:23  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:23  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:23  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:23  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:23  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:23  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:23  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:23  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:23  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:23  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:23  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:23  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:23  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:23  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:23  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:23  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:23  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:23  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:23  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:23  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:23  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:23  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:23  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:23  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:23  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:23  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:23  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:23  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:23  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:23  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:23  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:23  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:23  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:23  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:23  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:23  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:23  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:23  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:23  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:23  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:23  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:23  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:23  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:23  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:23  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:23  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:23  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:23  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:23  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:23  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:23  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:23  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:23  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:23  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:23  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:23  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:23  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:23  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:23  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:23  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:23  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:23  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:23  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:23  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:23  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:23  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:23  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:23  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:23  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:23  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:23  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:23  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:23  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:23  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:23  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:23  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:23  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:23  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:23  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:23  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:23  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:23  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:23  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:23  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:23  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:23  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:23  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:23 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:23 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:23 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:23 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:23 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:23 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:23 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:23 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:23 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:23 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:23 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:23 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:23 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:23 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:23 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:23 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:23 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:23 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:23 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:23 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:23 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:23 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:23 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:23 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:23 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:23 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:23 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:23 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:23 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:23 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:23 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:23 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:23 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:23 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:23 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:23 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:23 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:23 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:23 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:23 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:23 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:23 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:23 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:23 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:23 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:23 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:23 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:23 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:23 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:23 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:23 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:23 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:23 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:23 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:23 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:23 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:23 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:23 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:23 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:23 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:23 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:23 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:23 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:23 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:23 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:23 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:23 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:23 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:23 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@26)[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange:             > 10:9-10:10 -> ""[0m
2022/04/07 14:59:23 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:23 [92mIDE --> LS REQU textDocument/documentSymbol 41[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: [93mread-locked[0m[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:23 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 42[0m
2022/04/07 14:59:23 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:23 [91m                            $/progress: backgroundIndexProgress REPORT, 32/41, 78.0%[0m
2022/04/07 14:59:23 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:23 [91m                            $/progress: backgroundIndexProgress REPORT, 32/41, 78.0%[0m
2022/04/07 14:59:23 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:23 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:23 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 42[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 41: [93mread-unlocked[0m[0m
2022/04/07 14:59:23 [32mIDE <-- LS RESP textDocument/documentSymbol 41[0m
2022/04/07 14:59:23 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@27)[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange:   > 8:8-8:9 (len=1) -> ""[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#include

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:23 Ino Range: 8:8-8:9 -> Cpp Range:10:8-10:9
2022/04/07 14:59:23   > Current sketchmapper content:
2022/04/07 14:59:23   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:23   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:23   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:23   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:23   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:23   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:23   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:23   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:23   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:23   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:23  10: #include                                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:23  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:23  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:23  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:23  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:23  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:23  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:23  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:23  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:23  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:23  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:23  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:23  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:23  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:23  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:23  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:23  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:23  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:23  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:23  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:23  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:23  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:23  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:23  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:23  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:23  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:23  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:23  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:23  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:23  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:23  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:23  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:23  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:23  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:23  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:23  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:23  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:23  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:23  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:23  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:23  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:23  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:23  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:23  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:23  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:23  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:23  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:23  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:23  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:23  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:23  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:23  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:23  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:23  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:23  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:23  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:23  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:23  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:23  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:23  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:23  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:23  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:23  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:23  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:23  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:23  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:23  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:23  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:23  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:23  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:23  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:23  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:23  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:23  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:23  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:23  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:23  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:23  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:23  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:23  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:23  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:23  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:23  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:23  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:23  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:23  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:23  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:23  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:23  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:23  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:23 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:23 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:23 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:23 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:23 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:23 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:23 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:23 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:23 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:23 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:23 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:23 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:23 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:23 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:23 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:23 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:23 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:23 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:23 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:23 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:23 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:23 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:23 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:23 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:23 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:23 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:23 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:23 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:23 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:23 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:23 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:23 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:23 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:23 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:23 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:23 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:23 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:23 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:23 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:23 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:23 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:23 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:23 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:23 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:23 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:23 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:23 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:23 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:23 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:23 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:23 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:23 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:23 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:23 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:23 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:23 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:23 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:23 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:23 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:23 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:23 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:23 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:23 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:23 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:23 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:23 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:23 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:23 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:23 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@27)[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange:             > 10:8-10:9 -> ""[0m
2022/04/07 14:59:23 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:23 [92mIDE --> LS REQU textDocument/documentSymbol 42[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: [93mread-locked[0m[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:23 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 43[0m
2022/04/07 14:59:23 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 43[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 42: [93mread-unlocked[0m[0m
2022/04/07 14:59:23 [32mIDE <-- LS RESP textDocument/documentSymbol 42[0m
2022/04/07 14:59:23 [92mIDE --> LS REQU textDocument/codeAction 43[0m
2022/04/07 14:59:23 [92m                textDocument/codeAction 43: [93mread-locked[0m[0m
2022/04/07 14:59:23 [92m                textDocument/codeAction 43: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:8)[0m
2022/04/07 14:59:23 [92m                textDocument/codeAction 43: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:23 [92m                textDocument/codeAction 43:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:8:8)[0m
2022/04/07 14:59:23 [91mIDE     LS --> Clangd REQU textDocument/codeAction 44[0m
2022/04/07 14:59:23 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 44[0m
2022/04/07 14:59:23 [92m                textDocument/codeAction 43: [93mread-unlocked[0m[0m
2022/04/07 14:59:23 [32mIDE <-- LS RESP textDocument/codeAction 43[0m
2022/04/07 14:59:23 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@28)[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange:   > 8:7-8:8 (len=1) -> ""[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#includ

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:23 Ino Range: 8:7-8:8 -> Cpp Range:10:7-10:8
2022/04/07 14:59:23   > Current sketchmapper content:
2022/04/07 14:59:23   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:23   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:23   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:23   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:23   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:23   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:23   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:23   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:23   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:23   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:23  10: #includ                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:23  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:23  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:23  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:23  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:23  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:23  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:23  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:23  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:23  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:23  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:23  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:23  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:23  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:23  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:23  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:23  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:23  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:23  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:23  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:23  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:23  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:23  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:23  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:23  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:23  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:23  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:23  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:23  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:23  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:23  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:23  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:23  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:23  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:23  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:23  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:23  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:23  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:23  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:23  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:23  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:23  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:23  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:23  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:23  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:23  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:23  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:23  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:23  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:23  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:23  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:23  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:23  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:23  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:23  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:23  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:23  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:23  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:23  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:23  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:23  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:23  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:23  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:23  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:23  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:23  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:23  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:23  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:23  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:23  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:23  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:23  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:23  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:23  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:23  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:23  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:23  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:23  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:23  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:23  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:23  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:23  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:23  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:23  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:23  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:23  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:23  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:23  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:23  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:23  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:23 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:23 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:23 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:23 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:23 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:23 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:23 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:23 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:23 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:23 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:23 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:23 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:23 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:23 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:23 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:23 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:23 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:23 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:23 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:23 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:23 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:23 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:23 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:23 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:23 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:23 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:23 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:23 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:23 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:23 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:23 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:23 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:23 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:23 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:23 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:23 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:23 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:23 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:23 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:23 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:23 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:23 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:23 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:23 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:23 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:23 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:23 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:23 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:23 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:23 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:23 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:23 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:23 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:23 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:23 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:23 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:23 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:23 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:23 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:23 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:23 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:23 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:23 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:23 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:23 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:23 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:23 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:23 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:23 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@28)[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange:             > 10:7-10:8 -> ""[0m
2022/04/07 14:59:23 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:23 [92mIDE --> LS REQU textDocument/documentSymbol 44[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: [93mread-locked[0m[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:23 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 45[0m
2022/04/07 14:59:23 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 45[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 44: [93mread-unlocked[0m[0m
2022/04/07 14:59:23 [32mIDE <-- LS RESP textDocument/documentSymbol 44[0m
2022/04/07 14:59:23 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@29)[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange:   > 8:6-8:7 (len=1) -> ""[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#inclu

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:23 Ino Range: 8:6-8:7 -> Cpp Range:10:6-10:7
2022/04/07 14:59:23   > Current sketchmapper content:
2022/04/07 14:59:23   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:23   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:23   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:23   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:23   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:23   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:23   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:23   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:23   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:23   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:23  10: #inclu                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:23  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:23  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:23  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:23  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:23  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:23  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:23  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:23  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:23  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:23  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:23  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:23  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:23  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:23  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:23  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:23  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:23  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:23  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:23  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:23  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:23  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:23  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:23  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:23  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:23  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:23  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:23  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:23  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:23  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:23  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:23  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:23  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:23  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:23  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:23  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:23  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:23  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:23  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:23  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:23  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:23  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:23  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:23  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:23  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:23  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:23  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:23  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:23  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:23  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:23  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:23  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:23  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:23  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:23  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:23  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:23  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:23  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:23  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:23  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:23  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:23  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:23  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:23  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:23  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:23  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:23  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:23  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:23  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:23  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:23  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:23  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:23  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:23  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:23  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:23  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:23  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:23  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:23  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:23  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:23  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:23  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:23  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:23  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:23  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:23  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:23  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:23  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:23  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:23  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:23 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:23 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:23 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:23 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:23 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:23 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:23 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:23 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:23 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:23 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:23 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:23 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:23 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:23 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:23 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:23 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:23 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:23 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:23 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:23 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:23 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:23 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:23 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:23 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:23 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:23 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:23 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:23 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:23 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:23 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:23 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:23 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:23 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:23 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:23 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:23 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:23 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:23 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:23 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:23 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:23 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:23 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:23 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:23 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:23 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:23 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:23 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:23 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:23 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:23 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:23 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:23 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:23 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:23 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:23 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:23 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:23 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:23 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:23 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:23 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:23 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:23 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:23 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:23 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:23 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:23 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:23 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:23 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:23 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@29)[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange:             > 10:6-10:7 -> ""[0m
2022/04/07 14:59:23 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:23 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:23 [92mIDE --> LS REQU textDocument/documentSymbol 45[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 45: [93mread-locked[0m[0m
2022/04/07 14:59:23 [92m                textDocument/documentSymbol 45: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:23 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 46[0m
2022/04/07 14:59:24 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:24 [91m                            $/progress: backgroundIndexProgress REPORT, 33/41, 80.0%[0m
2022/04/07 14:59:24 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:24 [91m                            $/progress: backgroundIndexProgress REPORT, 33/41, 80.0%[0m
2022/04/07 14:59:24 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:24 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:24 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:24 [91m                            $/progress: backgroundIndexProgress REPORT, 34/41, 82.0%[0m
2022/04/07 14:59:24 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:24 [91m                            $/progress: backgroundIndexProgress REPORT, 34/41, 82.0%[0m
2022/04/07 14:59:24 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:24 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 46[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 45: [93mread-unlocked[0m[0m
2022/04/07 14:59:24 [32mIDE <-- LS RESP textDocument/documentSymbol 45[0m
2022/04/07 14:59:24 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@30)[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange:   > 8:5-8:6 (len=1) -> ""[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#incl

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:24 Ino Range: 8:5-8:6 -> Cpp Range:10:5-10:6
2022/04/07 14:59:24   > Current sketchmapper content:
2022/04/07 14:59:24   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:24   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:24   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:24   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:24   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:24   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:24   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:24   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:24   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:24   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:24  10: #incl                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:24  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:24  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:24  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:24  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:24  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:24  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:24  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:24  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:24  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:24  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:24  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:24  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:24  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:24  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:24  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:24  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:24  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:24  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:24  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:24  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:24  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:24  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:24  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:24  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:24  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:24  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:24  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:24  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:24  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:24  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:24  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:24  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:24  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:24  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:24  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:24  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:24  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:24  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:24  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:24  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:24  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:24  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:24  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:24  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:24  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:24  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:24  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:24  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:24  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:24  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:24  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:24  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:24  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:24  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:24  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:24  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:24  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:24  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:24  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:24  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:24  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:24  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:24  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:24  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:24  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:24  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:24  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:24  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:24  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:24  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:24  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:24  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:24  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:24  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:24  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:24  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:24  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:24  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:24  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:24  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:24  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:24  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:24  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:24  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:24  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:24  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:24  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:24  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:24  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:24 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:24 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:24 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:24 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:24 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:24 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:24 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:24 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:24 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:24 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:24 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:24 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:24 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:24 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:24 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:24 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:24 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:24 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:24 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:24 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:24 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:24 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:24 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:24 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:24 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:24 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:24 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:24 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:24 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:24 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:24 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:24 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:24 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:24 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:24 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:24 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:24 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:24 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:24 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:24 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:24 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:24 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:24 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:24 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:24 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:24 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:24 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:24 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:24 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:24 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:24 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:24 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:24 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:24 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:24 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:24 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:24 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:24 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:24 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:24 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:24 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:24 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:24 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:24 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:24 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:24 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:24 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:24 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:24 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@30)[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange:             > 10:5-10:6 -> ""[0m
2022/04/07 14:59:24 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:24 [92mIDE --> LS REQU textDocument/documentSymbol 46[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: [93mread-locked[0m[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:24 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 47[0m
2022/04/07 14:59:24 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:24 [91m                            $/progress: backgroundIndexProgress REPORT, 35/41, 85.0%[0m
2022/04/07 14:59:24 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:24 [91m                            $/progress: backgroundIndexProgress REPORT, 35/41, 85.0%[0m
2022/04/07 14:59:24 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:24 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 47[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 46: [93mread-unlocked[0m[0m
2022/04/07 14:59:24 [32mIDE <-- LS RESP textDocument/documentSymbol 46[0m
2022/04/07 14:59:24 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@31)[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange:   > 8:4-8:5 (len=1) -> ""[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#inc

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:24 Ino Range: 8:4-8:5 -> Cpp Range:10:4-10:5
2022/04/07 14:59:24   > Current sketchmapper content:
2022/04/07 14:59:24   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:24   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:24   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:24   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:24   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:24   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:24   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:24   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:24   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:24   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:24  10: #inc                                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:24  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:24  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:24  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:24  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:24  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:24  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:24  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:24  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:24  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:24  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:24  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:24  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:24  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:24  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:24  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:24  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:24  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:24  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:24  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:24  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:24  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:24  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:24  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:24  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:24  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:24  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:24  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:24  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:24  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:24  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:24  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:24  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:24  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:24  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:24  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:24  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:24  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:24  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:24  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:24  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:24  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:24  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:24  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:24  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:24  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:24  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:24  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:24  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:24  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:24  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:24  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:24  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:24  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:24  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:24  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:24  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:24  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:24  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:24  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:24  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:24  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:24  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:24  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:24  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:24  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:24  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:24  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:24  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:24  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:24  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:24  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:24  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:24  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:24  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:24  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:24  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:24  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:24  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:24  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:24  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:24  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:24  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:24  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:24  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:24  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:24  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:24  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:24  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:24  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:24 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:24 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:24 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:24 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:24 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:24 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:24 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:24 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:24 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:24 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:24 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:24 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:24 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:24 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:24 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:24 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:24 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:24 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:24 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:24 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:24 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:24 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:24 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:24 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:24 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:24 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:24 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:24 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:24 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:24 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:24 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:24 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:24 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:24 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:24 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:24 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:24 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:24 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:24 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:24 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:24 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:24 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:24 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:24 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:24 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:24 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:24 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:24 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:24 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:24 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:24 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:24 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:24 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:24 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:24 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:24 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:24 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:24 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:24 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:24 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:24 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:24 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:24 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:24 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:24 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:24 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:24 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:24 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:24 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@31)[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange:             > 10:4-10:5 -> ""[0m
2022/04/07 14:59:24 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:24 [92mIDE --> LS REQU textDocument/documentSymbol 47[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: [93mread-locked[0m[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:24 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 48[0m
2022/04/07 14:59:24 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:24 [91m                            $/progress: backgroundIndexProgress REPORT, 36/41, 87.0%[0m
2022/04/07 14:59:24 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:24 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:24 [91m                            $/progress: backgroundIndexProgress REPORT, 36/41, 87.0%[0m
2022/04/07 14:59:24 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:24 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 48[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 47: [93mread-unlocked[0m[0m
2022/04/07 14:59:24 [32mIDE <-- LS RESP textDocument/documentSymbol 47[0m
2022/04/07 14:59:24 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@32)[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange:   > 8:3-8:4 (len=1) -> ""[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#in

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:24 Ino Range: 8:3-8:4 -> Cpp Range:10:3-10:4
2022/04/07 14:59:24   > Current sketchmapper content:
2022/04/07 14:59:24   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:24   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:24   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:24   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:24   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:24   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:24   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:24   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:24   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:24   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:24  10: #in                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:24  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:24  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:24  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:24  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:24  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:24  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:24  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:24  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:24  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:24  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:24  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:24  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:24  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:24  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:24  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:24  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:24  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:24  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:24  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:24  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:24  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:24  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:24  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:24  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:24  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:24  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:24  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:24  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:24  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:24  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:24  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:24  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:24  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:24  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:24  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:24  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:24  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:24  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:24  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:24  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:24  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:24  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:24  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:24  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:24  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:24  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:24  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:24  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:24  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:24  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:24  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:24  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:24  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:24  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:24  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:24  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:24  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:24  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:24  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:24  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:24  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:24  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:24  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:24  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:24  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:24  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:24  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:24  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:24  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:24  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:24  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:24  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:24  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:24  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:24  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:24  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:24  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:24  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:24  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:24  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:24  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:24  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:24  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:24  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:24  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:24  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:24  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:24  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:24  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:24 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:24 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:24 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:24 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:24 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:24 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:24 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:24 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:24 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:24 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:24 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:24 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:24 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:24 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:24 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:24 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:24 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:24 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:24 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:24 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:24 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:24 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:24 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:24 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:24 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:24 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:24 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:24 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:24 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:24 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:24 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:24 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:24 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:24 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:24 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:24 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:24 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:24 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:24 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:24 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:24 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:24 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:24 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:24 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:24 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:24 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:24 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:24 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:24 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:24 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:24 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:24 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:24 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:24 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:24 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:24 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:24 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:24 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:24 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:24 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:24 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:24 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:24 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:24 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:24 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:24 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:24 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:24 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:24 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@32)[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange:             > 10:3-10:4 -> ""[0m
2022/04/07 14:59:24 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:24 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:24 [92mIDE --> LS REQU textDocument/documentSymbol 48[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 48: [93mread-locked[0m[0m
2022/04/07 14:59:24 [92m                textDocument/documentSymbol 48: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:24 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 49[0m
2022/04/07 14:59:24 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (25 diagnostics):[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (22 diagnostics):[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:24 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:24 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:25 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:25 [91m                            $/progress: backgroundIndexProgress REPORT, 37/41, 90.0%[0m
2022/04/07 14:59:25 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:25 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:25 [91m                            $/progress: backgroundIndexProgress REPORT, 37/41, 90.0%[0m
2022/04/07 14:59:25 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:25 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 49[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 48: [93mread-unlocked[0m[0m
2022/04/07 14:59:25 [32mIDE <-- LS RESP textDocument/documentSymbol 48[0m
2022/04/07 14:59:25 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@33)[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange:   > 8:2-8:3 (len=1) -> ""[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#i

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:25 Ino Range: 8:2-8:3 -> Cpp Range:10:2-10:3
2022/04/07 14:59:25   > Current sketchmapper content:
2022/04/07 14:59:25   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:25   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:25   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:25   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:25   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:25   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:25   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:25   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:25   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:25   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:25  10: #i                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:25  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:25  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:25  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:25  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:25  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:25  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:25  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:25  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:25  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:25  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:25  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:25  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:25  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:25  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:25  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:25  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:25  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:25  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:25  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:25  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:25  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:25  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:25  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:25  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:25  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:25  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:25  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:25  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:25  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:25  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:25  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:25  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:25  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:25  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:25  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:25  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:25  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:25  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:25  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:25  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:25  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:25  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:25  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:25  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:25  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:25  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:25  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:25  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:25  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:25  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:25  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:25  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:25  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:25  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:25  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:25  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:25  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:25  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:25  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:25  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:25  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:25  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:25  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:25  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:25  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:25  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:25  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:25  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:25  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:25  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:25  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:25  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:25  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:25  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:25  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:25  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:25  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:25  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:25  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:25  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:25  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:25  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:25  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:25  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:25  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:25  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:25  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:25  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:25  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:25 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:25 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:25 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:25 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:25 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:25 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:25 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:25 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:25 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:25 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:25 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:25 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:25 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:25 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:25 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:25 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:25 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:25 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:25 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:25 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:25 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:25 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:25 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:25 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:25 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:25 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:25 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:25 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:25 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:25 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:25 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:25 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:25 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:25 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:25 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:25 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:25 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:25 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:25 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:25 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:25 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:25 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:25 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:25 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:25 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:25 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:25 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:25 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:25 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:25 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:25 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:25 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:25 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:25 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:25 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:25 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:25 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:25 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:25 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:25 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:25 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:25 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:25 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:25 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:25 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:25 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:25 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:25 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:25 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@33)[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange:             > 10:2-10:3 -> ""[0m
2022/04/07 14:59:25 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:25 [92mIDE --> LS REQU textDocument/documentSymbol 49[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: [93mread-locked[0m[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:25 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 50[0m
2022/04/07 14:59:25 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:25 [91m                            $/progress: backgroundIndexProgress REPORT, 38/41, 92.0%[0m
2022/04/07 14:59:25 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:25 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:25 [91m                            $/progress: backgroundIndexProgress REPORT, 39/41, 95.0%[0m
2022/04/07 14:59:25 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:25 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:25 [91m                            $/progress: backgroundIndexProgress REPORT, 40/41, 97.0%[0m
2022/04/07 14:59:25 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:25 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 50[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 49: [93mread-unlocked[0m[0m
2022/04/07 14:59:25 [32mIDE <-- LS RESP textDocument/documentSymbol 49[0m
2022/04/07 14:59:25 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@34)[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange:   > 8:1-8:2 (len=1) -> ""[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

#

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:25 Ino Range: 8:1-8:2 -> Cpp Range:10:1-10:2
2022/04/07 14:59:25   > Current sketchmapper content:
2022/04/07 14:59:25   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:25   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:25   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:25   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:25   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:25   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:25   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:25   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:25   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:25   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:25  10: #                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:25  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:25  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:25  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:25  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:25  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:25  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:25  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:25  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:25  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:25  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:25  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:25  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:25  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:25  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:25  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:25  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:25  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:25  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:25  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:25  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:25  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:25  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:25  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:25  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:25  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:25  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:25  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:25  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:25  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:25  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:25  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:25  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:25  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:25  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:25  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:25  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:25  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:25  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:25  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:25  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:25  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:25  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:25  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:25  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:25  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:25  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:25  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:25  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:25  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:25  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:25  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:25  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:25  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:25  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:25  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:25  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:25  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:25  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:25  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:25  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:25  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:25  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:25  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:25  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:25  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:25  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:25  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:25  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:25  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:25  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:25  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:25  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:25  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:25  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:25  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:25  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:25  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:25  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:25  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:25  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:25  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:25  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:25  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:25  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:25  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:25  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:25  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:25  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:25  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:25 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:25 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:25 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:25 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:25 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:25 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:25 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:25 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:25 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:25 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:25 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:25 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:25 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:25 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:25 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:25 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:25 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:25 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:25 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:25 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:25 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:25 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:25 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:25 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:25 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:25 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:25 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:25 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:25 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:25 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:25 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:25 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:25 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:25 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:25 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:25 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:25 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:25 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:25 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:25 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:25 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:25 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:25 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:25 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:25 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:25 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:25 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:25 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:25 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:25 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:25 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:25 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:25 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:25 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:25 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:25 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:25 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:25 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:25 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:25 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:25 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:25 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:25 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:25 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:25 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:25 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:25 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:25 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:25 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@34)[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange:             > 10:1-10:2 -> ""[0m
2022/04/07 14:59:25 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:25 [92mIDE --> LS REQU textDocument/documentSymbol 50[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: [93mread-locked[0m[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:25 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 51[0m
2022/04/07 14:59:25 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 51[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 50: [93mread-unlocked[0m[0m
2022/04/07 14:59:25 [32mIDE <-- LS RESP textDocument/documentSymbol 50[0m
2022/04/07 14:59:25 [92mIDE --> LS REQU textDocument/codeAction 51[0m
2022/04/07 14:59:25 [92m                textDocument/codeAction 51: [93mread-locked[0m[0m
2022/04/07 14:59:25 [92m                textDocument/codeAction 51: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:1)[0m
2022/04/07 14:59:25 [92m                textDocument/codeAction 51: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:25 [92m                textDocument/codeAction 51:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:8:1)[0m
2022/04/07 14:59:25 [91mIDE     LS --> Clangd REQU textDocument/codeAction 52[0m
2022/04/07 14:59:25 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 52[0m
2022/04/07 14:59:25 [92m                textDocument/codeAction 51: [93mread-unlocked[0m[0m
2022/04/07 14:59:25 [32mIDE <-- LS RESP textDocument/codeAction 51[0m
2022/04/07 14:59:25 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@35)[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange:   > 8:0-8:1 (len=1) -> ""[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>



BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:25 Ino Range: 8:0-8:1 -> Cpp Range:10:0-10:1
2022/04/07 14:59:25   > Current sketchmapper content:
2022/04/07 14:59:25   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:25   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:25   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:25   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:25   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:25   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:25   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:25   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:25   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:25   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:25  10:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:25  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:25  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:25  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:25  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:25  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:25  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:25  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:25  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:25  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:25  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:25  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:25  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:25  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:25  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:25  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:25  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:25  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:25  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:25  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:25  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:25  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:25  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:25  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:25  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:25  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:25  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:25  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:25  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:25  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:25  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:25  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:25  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:25  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:25  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:25  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:25  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:25  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:25  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:25  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:25  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:25  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:25  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:25  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:25  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:25  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:25  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:25  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:25  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:25  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:25  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:25  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:25  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:25  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:25  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:25  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:25  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:25  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:25  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:25  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:25  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:25  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:25  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:25  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:25  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:25  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:25  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:25  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:25  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:25  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:25  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:25  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:25  82: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:25  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:25  84: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:25  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:25  86: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:25  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:25  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:25  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:25  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:25  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:25  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:25  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:25  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:25  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:25  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:25  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:25  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:25  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:25 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:25 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:25 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:25 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:25 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:25 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:25 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:25 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:25 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:25 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:25 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:25 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:25 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:25 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:25 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:25 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:25 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:25 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:25 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:25 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:25 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:25 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:25 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:25 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:25 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:25 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:25 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:25 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:25 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:25 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:25 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:25 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:25 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:25 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:25 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:25 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:25 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:25 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:25 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:25 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:25 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:25 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:25 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:25 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:25 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:25 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:25 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:25 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:25 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:25 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:25 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:25 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:25 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:25 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:25 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:25 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:25 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:25 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:25 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:25 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:25 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:25 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:25 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:25 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:25 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:25 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:25 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:25 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:25 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@35)[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange:             > 10:0-10:1 -> ""[0m
2022/04/07 14:59:25 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:25 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:25 [92mIDE --> LS REQU textDocument/documentSymbol 52[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 52: [93mread-locked[0m[0m
2022/04/07 14:59:25 [92m                textDocument/documentSymbol 52: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:25 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 53[0m
2022/04/07 14:59:26 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 53[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:26 [92m                textDocument/documentSymbol 52: [93mread-unlocked[0m[0m
2022/04/07 14:59:26 [32mIDE <-- LS RESP textDocument/documentSymbol 52[0m
2022/04/07 14:59:26 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:26 [91m                            $/progress: backgroundIndexProgress END [0m
2022/04/07 14:59:26 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:26 [95mSKETCH REBUILD: : Sketch rebuild started[0m
2022/04/07 14:59:26 [92mIDE <-- LS REQU window/workDoneProgress/create 3[0m
2022/04/07 14:59:26 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
2022/04/07 14:59:26 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
2022/04/07 14:59:26 [32mIDE --> LS RESP window/workDoneProgress/create 3[0m
2022/04/07 14:59:26 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:26 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (26 diagnostics):[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 10:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:1-10:4 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:1-8:4 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (23 diagnostics):[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 8:1 - Error: "pp_invalid_directive"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:26 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:26 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:27 [95mSKETCH REBUILD: : Running build with: {
  "instance": {
    "id": 1
  },
  "fqbn": "esp32:esp32:esp32",
  "sketch_path": "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE",
  "build_path": "C:\\Users\\Usuario\\AppData\\Local\\Temp\\arduino-language-server918641866",
  "verbose": true,
  "create_compilation_database_only": true,
  "source_override": {
    "ESP32codeBLE.ino": "#include \u003cWire.h\u003e                //Biblioteca para I2C\n#include \u003cSparkFunMLX90614.h\u003e    //Biblioteca SparkFunMLX90614\n\n#include \u003cBLEDevice.h\u003e\n#include \u003cBLEServer.h\u003e\n#include \u003cBLEUtils.h\u003e\n#include \u003cBLE2902.h\u003e\n\n\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic-\u003egetValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() \u003e 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i \u003c rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server-\u003esetCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server-\u003ecreateService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service-\u003ecreateCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX-\u003eaddDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service-\u003ecreateCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic-\u003esetCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service-\u003estart();\n  // Start advertising (descoberta do ESP32)\n  server-\u003egetAdvertising()-\u003estart();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX-\u003esetValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX-\u003enotify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2-\u003esetValue(\"Hello!\"); // Sending a test message\n    characteristicTX2-\u003enotify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"
  }
}[0m
2022/04/07 14:59:27 [92mIDE --> LS NOTIF textDocument/didSave[0m
2022/04/07 14:59:27 [92m                 textDocument/didSave: [93mwrite-locked[0m[0m
2022/04/07 14:59:27 [92m                 textDocument/didSave: notification is not forwarded to clang[0m
2022/04/07 14:59:27 [92m                 textDocument/didSave: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:28 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (25 diagnostics):[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (22 diagnostics):[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:28 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:28 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:30 [95mSKETCH REBUILD: : Compile successful![0m
2022/04/07 14:59:30 [95mSKETCH REBUILD: : [93mwrite-locked[0m[0m
2022/04/07 14:59:30 [95mSKETCH REBUILD: : [93mwrite-unlocked[0m[0m
2022/04/07 14:59:30 [95mSKETCH REBUILD: : Error: context canceled[0m
2022/04/07 14:59:30 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:31 [95mSKETCH REBUILD: : Sketch rebuild started[0m
2022/04/07 14:59:31 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
2022/04/07 14:59:31 [92mIDE <-- LS REQU window/workDoneProgress/create 4[0m
2022/04/07 14:59:31 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
2022/04/07 14:59:31 [32mIDE --> LS RESP window/workDoneProgress/create 4[0m
2022/04/07 14:59:31 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:31 [95mSKETCH REBUILD: : Running build with: {
  "instance": {
    "id": 1
  },
  "fqbn": "esp32:esp32:esp32",
  "sketch_path": "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE",
  "build_path": "C:\\Users\\Usuario\\AppData\\Local\\Temp\\arduino-language-server918641866",
  "verbose": true,
  "create_compilation_database_only": true,
  "source_override": {
    "ESP32codeBLE.ino": "#include \u003cWire.h\u003e                //Biblioteca para I2C\n#include \u003cSparkFunMLX90614.h\u003e    //Biblioteca SparkFunMLX90614\n\n#include \u003cBLEDevice.h\u003e\n#include \u003cBLEServer.h\u003e\n#include \u003cBLEUtils.h\u003e\n#include \u003cBLE2902.h\u003e\n\n\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic-\u003egetValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() \u003e 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i \u003c rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server-\u003esetCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server-\u003ecreateService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service-\u003ecreateCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX-\u003eaddDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service-\u003ecreateCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic-\u003esetCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service-\u003estart();\n  // Start advertising (descoberta do ESP32)\n  server-\u003egetAdvertising()-\u003estart();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX-\u003esetValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX-\u003enotify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2-\u003esetValue(\"Hello!\"); // Sending a test message\n    characteristicTX2-\u003enotify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"
  }
}[0m
2022/04/07 14:59:34 [95mSKETCH REBUILD: : Compile successful![0m
2022/04/07 14:59:34 [95mSKETCH REBUILD: : [93mwrite-locked[0m[0m
2022/04/07 14:59:34   > Current sketchmapper content:
2022/04/07 14:59:34   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:34   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:34   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:34   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:34   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:34   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:34   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:34   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:34   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:34   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:34  10:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:34  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:34  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:34  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:34  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:34  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:34  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:34  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:34  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:34  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:34  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:34  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:34  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:34  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:34  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:34  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:34  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:34  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:34  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:34  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:34  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:34  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:34  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:34  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:34  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:34  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:34  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:34  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:34  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:34  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:34  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:34  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:34  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:34  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:34  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:34  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:34  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:34  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:34  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:34  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:34  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:34  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:34  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:34  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:34  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:34  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:34  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:34  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:34  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:34  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:34  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:34  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:34  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:34  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:34  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:34  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:34  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:34  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:34  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:34  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:34  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:34  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:34  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:34  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:34  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:34  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:34  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:34  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:34  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:34  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:34  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:34  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:34  82: #line 81 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:34  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:34  84: #line 123 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:34  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:34  86: #line 81 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:34  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:34  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:34  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:34  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:34  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:34  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:34  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:34  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:34  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:34  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:34  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:34  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:34  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:34 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:34 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:34 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:34 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:34 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:34 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:34 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:34 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:34 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:34 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:34 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:34 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:34 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:34 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:34 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:34 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:34 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:34 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:34 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:34 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:34 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:34 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:34 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:34 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:34 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:34 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:34 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:34 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:34 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:34 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:34 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:34 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:34 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:34 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:34 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:34 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:34 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:34 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:34 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:34 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:34 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:34 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:34 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:34 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:34 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:34 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:34 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:34 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:34 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:34 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:34 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:34 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:34 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:34 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:34 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:34 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:34 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:34 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:34 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:34 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:34 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:34 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:34 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:34 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:34 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:34 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:34 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:34 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:34 [95mSKETCH REBUILD: : Sending 'didSave' notification to Clangd[0m
2022/04/07 14:59:34 [91mIDE     LS --> Clangd NOTIF textDocument/didSave[0m
2022/04/07 14:59:34 [95mSKETCH REBUILD: : Sending full-text 'didChange' notification to Clangd[0m
2022/04/07 14:59:34 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:34 [95mSKETCH REBUILD: : [93mwrite-unlocked[0m[0m
2022/04/07 14:59:34 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:34 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 1[0m
2022/04/07 14:59:34 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 1[0m
2022/04/07 14:59:34 [92mIDE <-- LS REQU window/workDoneProgress/create 5[0m
2022/04/07 14:59:34 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:34 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
2022/04/07 14:59:34 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:34 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
2022/04/07 14:59:34 [32mIDE --> LS RESP window/workDoneProgress/create 5[0m
2022/04/07 14:59:34 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:34 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:34 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (25 diagnostics):[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (22 diagnostics):[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:34 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:34 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:34 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:34 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
2022/04/07 14:59:34 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:34 [91m                            $/progress: backgroundIndexProgress END [0m
2022/04/07 14:59:34 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:35 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@36)[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange:   > 8:0-8:0 (len=0) -> "%"[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>

%

BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:35 Ino Range: 8:0-8:0 -> Cpp Range:10:0-10:0
2022/04/07 14:59:35   > Current sketchmapper content:
2022/04/07 14:59:35   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:35   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:35   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:35   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:35   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:35   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:35   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:35   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:35   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:35   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:35  10: %                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:35  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:35  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:35  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:35  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:35  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:35  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:35  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:35  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:35  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:35  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:35  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:35  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:35  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:35  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:35  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:35  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:35  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:35  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:35  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:35  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:35  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:35  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:35  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:35  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:35  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:35  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:35  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:35  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:35  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:35  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:35  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:35  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:35  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:35  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:35  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:35  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:35  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:35  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:35  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:35  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:35  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:35  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:35  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:35  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:35  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:35  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:35  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:35  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:35  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:35  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:35  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:35  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:35  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:35  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:35  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:35  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:35  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:35  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:35  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:35  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:35  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:35  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:35  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:35  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:35  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:35  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:35  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:35  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:35  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:35  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:35  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:35  82: #line 81 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:35  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:35  84: #line 123 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:35  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:35  86: #line 81 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:35  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:35  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:35  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:35  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:35  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:35  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:35  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:35  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:35  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:35  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:35  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:35  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:35  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:35 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:35 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:35 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:35 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:35 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:35 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:35 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:35 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:35 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:35 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:35 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:35 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:35 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:35 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:35 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:35 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:35 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:35 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:35 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:35 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:35 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:35 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:35 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:35 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:35 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:35 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:35 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:35 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:35 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:35 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:35 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:35 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:35 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:35 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:35 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:35 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:35 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:35 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:35 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:35 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:35 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:35 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:35 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:35 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:35 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:35 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:35 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:35 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:35 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:35 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:35 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:35 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:35 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:35 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:35 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:35 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:35 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:35 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:35 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:35 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:35 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:35 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:35 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:35 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:35 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:35 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:35 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:35 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:35 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@37)[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange:             > 10:0-10:0 -> "%"[0m
2022/04/07 14:59:35 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:35 [92mIDE --> LS REQU textDocument/documentSymbol 53[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: [93mread-locked[0m[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:35 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 54[0m
2022/04/07 14:59:35 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 54[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (10 document symbols)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 53: [93mread-unlocked[0m[0m
2022/04/07 14:59:35 [32mIDE <-- LS RESP textDocument/documentSymbol 53[0m
2022/04/07 14:59:35 [92mIDE --> LS REQU textDocument/codeAction 54[0m
2022/04/07 14:59:35 [92m                textDocument/codeAction 54: [93mread-locked[0m[0m
2022/04/07 14:59:35 [92m                textDocument/codeAction 54: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:1)[0m
2022/04/07 14:59:35 [92m                textDocument/codeAction 54: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:35 [92m                textDocument/codeAction 54:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:8:1)[0m
2022/04/07 14:59:35 [91mIDE     LS --> Clangd REQU textDocument/codeAction 55[0m
2022/04/07 14:59:35 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 55[0m
2022/04/07 14:59:35 [92m                textDocument/codeAction 54: [93mread-unlocked[0m[0m
2022/04/07 14:59:35 [32mIDE <-- LS RESP textDocument/codeAction 54[0m
2022/04/07 14:59:35 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@37)[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange:   > 8:0-8:1 (len=1) -> ""[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX90614

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>



BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:35 Ino Range: 8:0-8:1 -> Cpp Range:10:0-10:1
2022/04/07 14:59:35   > Current sketchmapper content:
2022/04/07 14:59:35   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:35   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:35   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:35   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:35   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:35   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:35   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:35   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:35   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:35   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:35  10:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:35  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:35  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:35  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:35  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:35  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:35  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:35  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:35  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:35  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:35  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:35  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:35  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:35  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:35  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:35  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:35  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:35  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:35  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:35  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:35  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:35  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:35  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:35  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:35  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:35  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:35  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:35  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:35  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:35  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:35  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:35  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:35  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:35  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:35  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:35  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:35  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:35  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:35  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:35  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:35  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:35  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:35  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:35  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:35  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:35  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:35  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:35  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:35  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:35  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:35  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:35  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:35  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:35  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:35  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:35  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:35  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:35  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:35  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:35  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:35  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:35  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:35  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:35  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:35  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:35  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:35  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:35  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:35  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:35  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:35  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:35  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:35  82: #line 81 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:35  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:35  84: #line 123 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:35  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:35  86: #line 81 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:35  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:35  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:35  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:35  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:35  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:35  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:35  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:35  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:35  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:35  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:35  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:35  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:35  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:35 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:35 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:35 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:35 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:35 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:35 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:35 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:35 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:35 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:35 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:35 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:35 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:35 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:35 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:35 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:35 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:35 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:35 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:35 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:35 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:35 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:35 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:35 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:35 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:35 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:35 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:35 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:35 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:35 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:35 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:35 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:35 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:35 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:35 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:35 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:35 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:35 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:35 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:35 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:35 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:35 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:35 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:35 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:35 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:35 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:35 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:35 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:35 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:35 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:35 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:35 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:35 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:35 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:35 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:35 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:35 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:35 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:35 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:35 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:35 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:35 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:35 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:35 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:35 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:35 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:35 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:35 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:35 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:35 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp@38)[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange:             > 10:0-10:1 -> ""[0m
2022/04/07 14:59:35 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:35 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:35 [92mIDE --> LS REQU textDocument/documentSymbol 55[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 55: [93mread-locked[0m[0m
2022/04/07 14:59:35 [92m                textDocument/documentSymbol 55: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/07 14:59:35 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 56[0m
2022/04/07 14:59:36 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 56[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range is in PREPROCESSED section of the sketch[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/07 14:59:36 [92m                textDocument/documentSymbol 55: [93mread-unlocked[0m[0m
2022/04/07 14:59:36 [32mIDE <-- LS RESP textDocument/documentSymbol 55[0m
2022/04/07 14:59:36 [92mIDE --> LS NOTIF textDocument/didSave[0m
2022/04/07 14:59:36 [92m                 textDocument/didSave: [93mwrite-locked[0m[0m
2022/04/07 14:59:36 [92m                 textDocument/didSave: notification is not forwarded to clang[0m
2022/04/07 14:59:36 [92m                 textDocument/didSave: [93mwrite-unlocked[0m[0m
2022/04/07 14:59:36 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (29 diagnostics):[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 10:0 - Error: "expected_unqualified_id"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 101:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 106:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 145:10 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   > 146:10 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:10:0-10:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:0-8:1 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:101:2-101:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:94:2-94:18 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:2-106:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:2-99:18 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:145:10-145:26 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:138:10-138:26 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:146:10-146:26 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:139:10-139:26 (.ino)[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:36 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (26 diagnostics):[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 8:0 - Error: "expected_unqualified_id"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 99:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 138:10 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics:     > 139:10 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:36 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:36 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:37 [95mSKETCH REBUILD: : Sketch rebuild started[0m
2022/04/07 14:59:37 [92mIDE <-- LS REQU window/workDoneProgress/create 6[0m
2022/04/07 14:59:37 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
2022/04/07 14:59:37 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
2022/04/07 14:59:37 [32mIDE --> LS RESP window/workDoneProgress/create 6[0m
2022/04/07 14:59:37 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:37 [95mSKETCH REBUILD: : Running build with: {
  "instance": {
    "id": 1
  },
  "fqbn": "esp32:esp32:esp32",
  "sketch_path": "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE",
  "build_path": "C:\\Users\\Usuario\\AppData\\Local\\Temp\\arduino-language-server918641866",
  "verbose": true,
  "create_compilation_database_only": true,
  "source_override": {
    "ESP32codeBLE.ino": "#include \u003cWire.h\u003e                //Biblioteca para I2C\n#include \u003cSparkFunMLX90614.h\u003e    //Biblioteca SparkFunMLX90614\n\n#include \u003cBLEDevice.h\u003e\n#include \u003cBLEServer.h\u003e\n#include \u003cBLEUtils.h\u003e\n#include \u003cBLE2902.h\u003e\n\n\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic-\u003egetValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() \u003e 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i \u003c rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server-\u003esetCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server-\u003ecreateService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service-\u003ecreateCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX-\u003eaddDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service-\u003ecreateCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic-\u003esetCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service-\u003estart();\n  // Start advertising (descoberta do ESP32)\n  server-\u003egetAdvertising()-\u003estart();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX-\u003esetValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX-\u003enotify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2-\u003esetValue(\"Hello!\"); // Sending a test message\n    characteristicTX2-\u003enotify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"
  }
}[0m
2022/04/07 14:59:37 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp (25 diagnostics):[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server918641866/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (22 diagnostics):[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/07 14:59:37 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/07 14:59:37 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/07 14:59:37 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/07 14:59:40 [95mSKETCH REBUILD: : Compile successful![0m
2022/04/07 14:59:40 [95mSKETCH REBUILD: : [93mwrite-locked[0m[0m
2022/04/07 14:59:40   > Current sketchmapper content:
2022/04/07 14:59:40   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/07 14:59:40   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/07 14:59:40   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/07 14:59:40   3: #include <SparkFunMLX90614.h>    //Biblioteca SparkFunMLX906 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/07 14:59:40   4:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/07 14:59:40   5: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/07 14:59:40   6: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/07 14:59:40   7: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/07 14:59:40   8: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/07 14:59:40   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/07 14:59:40  10:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/07 14:59:40  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/07 14:59:40  12: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/07 14:59:40  13:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/07 14:59:40  14: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/07 14:59:40  15: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/07 14:59:40  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/07 14:59:40  17: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/07 14:59:40  18:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/07 14:59:40  19: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/07 14:59:40  20: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/07 14:59:40  21:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/07 14:59:40  22: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/07 14:59:40  23: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/07 14:59:40  24:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/07 14:59:40  25: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/07 14:59:40  26: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/07 14:59:40  27: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/07 14:59:40  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/07 14:59:40  29:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/07 14:59:40  30: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/07 14:59:40  31: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/07 14:59:40  32:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/07 14:59:40  33:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/07 14:59:40  34:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/07 14:59:40  35:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/07 14:59:40  36:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/07 14:59:40  37:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/07 14:59:40  38:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/07 14:59:40  39: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/07 14:59:40  40:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/07 14:59:40  41: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/07 14:59:40  42: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/07 14:59:40  43:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/07 14:59:40  44:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/07 14:59:40  45:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/07 14:59:40  46:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/07 14:59:40  47:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/07 14:59:40  48:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/07 14:59:40  49:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/07 14:59:40  50:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/07 14:59:40  51:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/07 14:59:40  52:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/07 14:59:40  53:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/07 14:59:40  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/07 14:59:40  55:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/07 14:59:40  56:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/07 14:59:40  57:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/07 14:59:40  58:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/07 14:59:40  59:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/07 14:59:40  60:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/07 14:59:40  61:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/07 14:59:40  62:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/07 14:59:40  63:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/07 14:59:40  64:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/07 14:59:40  65:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/07 14:59:40  66:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/07 14:59:40  67:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/07 14:59:40  68:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/07 14:59:40  69:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/07 14:59:40  70:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/07 14:59:40  71:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/07 14:59:40  72:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/07 14:59:40  73:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/07 14:59:40  74:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/07 14:59:40  75:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/07 14:59:40  76:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/07 14:59:40  77:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/07 14:59:40  78:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/07 14:59:40  79:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/07 14:59:40  80: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/07 14:59:40  81:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/07 14:59:40  82: #line 81 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:40  83: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80
2022/04/07 14:59:40  84: #line 123 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/07 14:59:40  85: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122
2022/04/07 14:59:40  86: #line 81 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/07 14:59:40  87: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/07 14:59:40  88:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/07 14:59:40  89:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/07 14:59:40  90:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/07 14:59:40  91:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/07 14:59:40  92:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/07 14:59:40  93:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/07 14:59:40  94:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/07 14:59:40  95:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/07 14:59:40  96:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/07 14:59:40  97:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/07 14:59:40  98:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/07 14:59:40  99:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/07 14:59:40 100:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/07 14:59:40 101:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/07 14:59:40 102:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/07 14:59:40 103:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/07 14:59:40 104:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/07 14:59:40 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/07 14:59:40 106:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/07 14:59:40 107:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/07 14:59:40 108:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/07 14:59:40 109:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/07 14:59:40 110:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/07 14:59:40 111:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/07 14:59:40 112:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/07 14:59:40 113:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/07 14:59:40 114:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/07 14:59:40 115:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/07 14:59:40 116:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/07 14:59:40 117:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/07 14:59:40 118:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/07 14:59:40 119:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/07 14:59:40 120:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/07 14:59:40 121:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/07 14:59:40 122:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/07 14:59:40 123:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/07 14:59:40 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/07 14:59:40 125:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/07 14:59:40 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/07 14:59:40 127: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/07 14:59:40 128:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/07 14:59:40 129: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/07 14:59:40 130:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/07 14:59:40 131:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/07 14:59:40 132:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/07 14:59:40 133:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/07 14:59:40 134:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/07 14:59:40 135:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/07 14:59:40 136:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/07 14:59:40 137:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/07 14:59:40 138:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/07 14:59:40 139:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/07 14:59:40 140:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/07 14:59:40 141:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/07 14:59:40 142:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/07 14:59:40 143:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/07 14:59:40 144:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/07 14:59:40 145:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/07 14:59:40 146:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/07 14:59:40 147:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/07 14:59:40 148:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/07 14:59:40 149:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/07 14:59:40 150:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/07 14:59:40 151:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/07 14:59:40 152:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/07 14:59:40 153: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/07 14:59:40 154:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/07 14:59:40 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/07 14:59:40 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/07 14:59:40 157:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/07 14:59:40 158:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/07 14:59:40 159:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/07 14:59:40 160:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/07 14:59:40 161:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/07 14:59:40 162:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/07 14:59:40 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/07 14:59:40 164: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/07 14:59:40 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/07 14:59:40 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/07 14:59:40 167:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:160                          
2022/04/07 14:59:40 [95mSKETCH REBUILD: : Sending 'didSave' notification to Clangd[0m
2022/04/07 14:59:40 [91mIDE     LS --> Clangd NOTIF textDocument/didSave[0m
2022/04/07 14:59:40 [95mSKETCH REBUILD: : Sending full-text 'didChange' notification to Clangd[0m
2022/04/07 14:59:40 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/07 14:59:40 [95mSKETCH REBUILD: : [93mwrite-unlocked[0m[0m
2022/04/07 14:59:40 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:40 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 2[0m
2022/04/07 14:59:40 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 2[0m
2022/04/07 14:59:40 [92mIDE <-- LS REQU window/workDoneProgress/create 7[0m
2022/04/07 14:59:40 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:40 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
2022/04/07 14:59:40 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:40 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
2022/04/07 14:59:40 [32mIDE --> LS RESP window/workDoneProgress/create 7[0m
2022/04/07 14:59:40 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:40 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:41 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:41 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
2022/04/07 14:59:41 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/07 14:59:41 [91m                            $/progress: backgroundIndexProgress END [0m
2022/04/07 14:59:41 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/07 14:59:41 [92mIDE <-- LS NOTIF $/progress[0m







Started logging.
2022/04/09 21:12:17 Language server launched with arguments:
2022/04/09 21:12:17   arg[0] = c:\Users\Usuario\AppData\Local\Programs\Arduino IDE\resources\app\node_modules\arduino-ide-extension\build\arduino-language-server.exe
2022/04/09 21:12:17   arg[1] = -clangd
2022/04/09 21:12:17   arg[2] = c:\Users\Usuario\AppData\Local\Programs\Arduino IDE\resources\app\node_modules\arduino-ide-extension\build\clangd.exe
2022/04/09 21:12:17   arg[3] = -cli-daemon-addr
2022/04/09 21:12:17   arg[4] = localhost:56161
2022/04/09 21:12:17   arg[5] = -cli-daemon-instance
2022/04/09 21:12:17   arg[6] = 1
2022/04/09 21:12:17   arg[7] = -fqbn
2022/04/09 21:12:17   arg[8] = esp32:esp32:esp32
2022/04/09 21:12:17   arg[9] = -board-name
2022/04/09 21:12:17   arg[10] = "ESP32 Dev Module"
2022/04/09 21:12:17   arg[11] = -log
2022/04/09 21:12:17   arg[12] = -logpath
2022/04/09 21:12:17   arg[13] = c:\git\MyPrograms\ioT\ESP32codeBLE
2022/04/09 21:12:17 logging to c:\git\MyPrograms\ioT\ESP32codeBLE\inols.log
2022/04/09 21:12:17 [97mLS: : Initial board configuration: esp32:esp32:esp32[0m
2022/04/09 21:12:17 [97mLS: : Language server build path: C:\Users\Usuario\AppData\Local\Temp\arduino-language-server098174558[0m
2022/04/09 21:12:17 [97mLS: : Language server build sketch root: C:\Users\Usuario\AppData\Local\Temp\arduino-language-server098174558\sketch[0m
2022/04/09 21:12:17 [97mLS: : Language server compile-commands: C:\Users\Usuario\AppData\Local\Temp\arduino-language-server920993339\compile_commands.json[0m
2022/04/09 21:12:17 [92mIDE --> LS REQU initialize 0[0m
2022/04/09 21:12:17 [96mINIT --- : initializing workbench: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE[0m
2022/04/09 21:12:17 [92m                initialize 0: initialization parameters: {"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.6.0"}}[0m
2022/04/09 21:12:17 [32mIDE <-- LS RESP initialize 0[0m
2022/04/09 21:12:17 [96mINIT --- : [93mread-locked[0m[0m
2022/04/09 21:12:17 [96mINIT --- : [93mread-unlocked[0m[0m
2022/04/09 21:12:17 [92mIDE --> LS NOTIF initialized[0m
2022/04/09 21:12:17 [92m                 initialized: Notification is not propagated to clangd[0m
2022/04/09 21:12:17 [92mIDE --> LS NOTIF textDocument/didOpen[0m
2022/04/09 21:12:17 [92m                 textDocument/didOpen: [93mwrite-locked[0m[0m
2022/04/09 21:12:17 [92m                 textDocument/didOpen: (throttled: waiting for clangd)[0m
2022/04/09 21:12:17 [92m                 textDocument/didOpen: [93munlocked (waiting clangd)[0m[0m
2022/04/09 21:12:18 [96mINIT --- : Running build with: {
  "instance": {
    "id": 1
  },
  "fqbn": "esp32:esp32:esp32",
  "sketch_path": "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE",
  "build_path": "C:\\Users\\Usuario\\AppData\\Local\\Temp\\arduino-language-server098174558",
  "verbose": true,
  "create_compilation_database_only": true
}[0m
2022/04/09 21:12:24 [96mINIT --- : Compile successful![0m
2022/04/09 21:12:25 [96mINIT --- : Arduino Data Dir -> c:\Users\Usuario\AppData\Local\Arduino15[0m
2022/04/09 21:12:25 [96mINIT --- :     Starting clangd: c:\Users\Usuario\AppData\Local\Programs\Arduino IDE\resources\app\node_modules\arduino-ide-extension\build\clangd.exe -log=verbose --compile-commands-dir=C:\Users\Usuario\AppData\Local\Temp\arduino-language-server098174558 -query-driver=C:\Users\Usuario\AppData\Local\Arduino15\packages\**[0m
2022/04/09 21:12:25 logging to c:\git\MyPrograms\ioT\ESP32codeBLE\inols-clangd.log
2022/04/09 21:12:25 logging to c:\git\MyPrograms\ioT\ESP32codeBLE\inols-clangd-err.log
2022/04/09 21:12:25 [91mIDE     LS --> Clangd REQU initialize 1[0m
2022/04/09 21:12:25 [31mIDE     LS <-- Clangd RESP initialize 1[0m
2022/04/09 21:12:25 [96mINIT --- : clangd successfully started: {"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"]},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"declarationProvider":{},"definitionProvider":{},"implementationProvider":{},"referencesProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentLinkProvider":{},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{"prepareProvider":true},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"selectionRangeProvider":{},"callHierarchyProvider":{},"semanticTokensProvider":{"legend":{"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"],"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","dependentName","defaultLibrary","functionScope","classScope","fileScope","globalScope"]},"range":false,"full":{"delta":true}},"workspaceSymbolProvider":{}},"serverInfo":{"name":"clangd","version":"clangd version 13.0.0 windows x86_64-pc-windows-msvc"}}[0m
2022/04/09 21:12:25 [91mIDE     LS --> Clangd NOTIF initialized[0m
2022/04/09 21:12:25 [96mINIT --- : Done initializing workbench[0m
2022/04/09 21:12:25 [92m                 textDocument/didOpen: [93mlocked (waiting clangd)[0m[0m
2022/04/09 21:12:25 [92m                 textDocument/didOpen: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:12:25 [92m                 textDocument/didOpen: Increasing .ino tracked files count to 1[0m
2022/04/09 21:12:25 [91mIDE     LS --> Clangd NOTIF textDocument/didOpen[0m
2022/04/09 21:12:25 [92m                 textDocument/didOpen: [93mwrite-unlocked[0m[0m
2022/04/09 21:12:25 [92mIDE --> LS REQU textDocument/codeAction 1[0m
2022/04/09 21:12:25 [92m                textDocument/codeAction 1: [93mread-locked[0m[0m
2022/04/09 21:12:25 [92m                textDocument/codeAction 1: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:69:20)[0m
2022/04/09 21:12:25 [92m                textDocument/codeAction 1: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:12:25 [92m                textDocument/codeAction 1:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:69:20)[0m
2022/04/09 21:12:25 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:12:25 [91mIDE     LS --> Clangd REQU textDocument/codeAction 2[0m
2022/04/09 21:12:25 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/09 21:12:25 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/.clangd (0 diagnostics):[0m
2022/04/09 21:12:25 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/.clangd -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/.clangd[0m
2022/04/09 21:12:25 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/09 21:12:25 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/.clangd (0 diagnostics):[0m
2022/04/09 21:12:25 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:12:25 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/09 21:12:25 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 0[0m
2022/04/09 21:12:25 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 0[0m
2022/04/09 21:12:25 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:25 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
2022/04/09 21:12:25 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:25 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
2022/04/09 21:12:25 [92mIDE <-- LS REQU window/workDoneProgress/create 1[0m
2022/04/09 21:12:25 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:25 [91m                            $/progress: backgroundIndexProgress REPORT, 0/40, 0.0%[0m
2022/04/09 21:12:25 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:25 [91m                            $/progress: backgroundIndexProgress REPORT, 0/40, 0.0%[0m
2022/04/09 21:12:25 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:25 [91m                            $/progress: backgroundIndexProgress REPORT, 0/40, 0.0%[0m
2022/04/09 21:12:25 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:25 [91m                            $/progress: backgroundIndexProgress REPORT, 0/40, 0.0%[0m
2022/04/09 21:12:25 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:25 [91m                            $/progress: backgroundIndexProgress REPORT, 1/40, 2.0%[0m
2022/04/09 21:12:25 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:25 [91m                            $/progress: backgroundIndexProgress REPORT, 1/40, 2.0%[0m
2022/04/09 21:12:27 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (25 diagnostics):[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/09 21:12:27 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 2[0m
2022/04/09 21:12:27 [92m                textDocument/codeAction 1: [93mread-unlocked[0m[0m
2022/04/09 21:12:27 [32mIDE <-- LS RESP textDocument/codeAction 1[0m
2022/04/09 21:12:27 [92mIDE --> LS REQU textDocument/documentSymbol 2[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: [93mread-locked[0m[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:12:27 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 3[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/09 21:12:27 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 3[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range is in PREPROCESSED section of the sketch[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range is in PREPROCESSED section of the sketch[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:12:27 [92m                textDocument/documentSymbol 2: [93mread-unlocked[0m[0m
2022/04/09 21:12:27 [32mIDE <-- LS RESP textDocument/documentSymbol 2[0m
2022/04/09 21:12:27 [32mIDE --> LS RESP window/workDoneProgress/create 1[0m
2022/04/09 21:12:27 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:27 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (22 diagnostics):[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/09 21:12:27 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:12:27 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/09 21:12:27 [92mIDE --> LS REQU textDocument/codeAction 3[0m
2022/04/09 21:12:27 [92m                textDocument/codeAction 3: [93mread-locked[0m[0m
2022/04/09 21:12:27 [92m                textDocument/codeAction 3: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:69:20)[0m
2022/04/09 21:12:27 [92m                textDocument/codeAction 3: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:12:27 [92m                textDocument/codeAction 3:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:69:20)[0m
2022/04/09 21:12:27 [91mIDE     LS --> Clangd REQU textDocument/codeAction 4[0m
2022/04/09 21:12:27 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 4[0m
2022/04/09 21:12:27 [92m                textDocument/codeAction 3: [93mread-unlocked[0m[0m
2022/04/09 21:12:27 [32mIDE <-- LS RESP textDocument/codeAction 3[0m
2022/04/09 21:12:29 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:29 [91m                            $/progress: backgroundIndexProgress REPORT, 2/40, 5.0%[0m
2022/04/09 21:12:29 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:29 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:29 [91m                            $/progress: backgroundIndexProgress REPORT, 2/40, 5.0%[0m
2022/04/09 21:12:29 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:29 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:29 [91m                            $/progress: backgroundIndexProgress REPORT, 3/40, 7.0%[0m
2022/04/09 21:12:29 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:29 [91m                            $/progress: backgroundIndexProgress REPORT, 3/40, 7.0%[0m
2022/04/09 21:12:29 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:29 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:29 [91m                            $/progress: backgroundIndexProgress REPORT, 4/40, 10.0%[0m
2022/04/09 21:12:29 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:29 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:29 [91m                            $/progress: backgroundIndexProgress REPORT, 4/40, 10.0%[0m
2022/04/09 21:12:29 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:29 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:29 [91m                            $/progress: backgroundIndexProgress REPORT, 5/40, 12.0%[0m
2022/04/09 21:12:29 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:29 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:29 [91m                            $/progress: backgroundIndexProgress REPORT, 5/40, 12.0%[0m
2022/04/09 21:12:29 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:30 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:30 [91m                            $/progress: backgroundIndexProgress REPORT, 6/40, 15.0%[0m
2022/04/09 21:12:30 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:30 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:30 [91m                            $/progress: backgroundIndexProgress REPORT, 6/40, 15.0%[0m
2022/04/09 21:12:30 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:30 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:30 [91m                            $/progress: backgroundIndexProgress REPORT, 7/40, 17.0%[0m
2022/04/09 21:12:30 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:30 [91m                            $/progress: backgroundIndexProgress REPORT, 7/40, 17.0%[0m
2022/04/09 21:12:30 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:30 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:30 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:30 [91m                            $/progress: backgroundIndexProgress REPORT, 8/40, 20.0%[0m
2022/04/09 21:12:30 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:30 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:30 [91m                            $/progress: backgroundIndexProgress REPORT, 8/40, 20.0%[0m
2022/04/09 21:12:30 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:30 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:30 [91m                            $/progress: backgroundIndexProgress REPORT, 9/40, 22.0%[0m
2022/04/09 21:12:30 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:30 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:30 [91m                            $/progress: backgroundIndexProgress REPORT, 9/40, 22.0%[0m
2022/04/09 21:12:30 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:31 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:31 [91m                            $/progress: backgroundIndexProgress REPORT, 10/40, 25.0%[0m
2022/04/09 21:12:31 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:31 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:31 [91m                            $/progress: backgroundIndexProgress REPORT, 10/40, 25.0%[0m
2022/04/09 21:12:31 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:31 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:31 [91m                            $/progress: backgroundIndexProgress REPORT, 11/40, 27.0%[0m
2022/04/09 21:12:31 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:31 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:31 [91m                            $/progress: backgroundIndexProgress REPORT, 11/40, 27.0%[0m
2022/04/09 21:12:31 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:31 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:31 [91m                            $/progress: backgroundIndexProgress REPORT, 12/40, 30.0%[0m
2022/04/09 21:12:31 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:31 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:31 [91m                            $/progress: backgroundIndexProgress REPORT, 12/40, 30.0%[0m
2022/04/09 21:12:31 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:31 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:31 [91m                            $/progress: backgroundIndexProgress REPORT, 13/40, 32.0%[0m
2022/04/09 21:12:31 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:31 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:31 [91m                            $/progress: backgroundIndexProgress REPORT, 13/40, 32.0%[0m
2022/04/09 21:12:31 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:31 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:31 [91m                            $/progress: backgroundIndexProgress REPORT, 14/40, 35.0%[0m
2022/04/09 21:12:31 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:31 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:31 [91m                            $/progress: backgroundIndexProgress REPORT, 14/40, 35.0%[0m
2022/04/09 21:12:31 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:32 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:32 [91m                            $/progress: backgroundIndexProgress REPORT, 15/40, 37.0%[0m
2022/04/09 21:12:32 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:32 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:32 [91m                            $/progress: backgroundIndexProgress REPORT, 15/40, 37.0%[0m
2022/04/09 21:12:32 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:32 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:32 [91m                            $/progress: backgroundIndexProgress REPORT, 16/40, 40.0%[0m
2022/04/09 21:12:32 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:32 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:32 [91m                            $/progress: backgroundIndexProgress REPORT, 16/40, 40.0%[0m
2022/04/09 21:12:32 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:33 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:33 [91m                            $/progress: backgroundIndexProgress REPORT, 17/40, 42.0%[0m
2022/04/09 21:12:33 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:33 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:33 [91m                            $/progress: backgroundIndexProgress REPORT, 17/40, 42.0%[0m
2022/04/09 21:12:33 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:33 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:33 [91m                            $/progress: backgroundIndexProgress REPORT, 18/40, 45.0%[0m
2022/04/09 21:12:33 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:33 [91m                            $/progress: backgroundIndexProgress REPORT, 18/40, 45.0%[0m
2022/04/09 21:12:33 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:33 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:33 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:33 [91m                            $/progress: backgroundIndexProgress REPORT, 19/40, 47.0%[0m
2022/04/09 21:12:33 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:33 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:33 [91m                            $/progress: backgroundIndexProgress REPORT, 19/40, 47.0%[0m
2022/04/09 21:12:33 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:33 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:33 [91m                            $/progress: backgroundIndexProgress REPORT, 20/40, 50.0%[0m
2022/04/09 21:12:33 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:33 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:33 [91m                            $/progress: backgroundIndexProgress REPORT, 20/40, 50.0%[0m
2022/04/09 21:12:33 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:33 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:33 [91m                            $/progress: backgroundIndexProgress REPORT, 21/40, 52.0%[0m
2022/04/09 21:12:33 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:33 [91m                            $/progress: backgroundIndexProgress REPORT, 21/40, 52.0%[0m
2022/04/09 21:12:33 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:33 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:33 [91m                            $/progress: backgroundIndexProgress REPORT, 22/40, 55.0%[0m
2022/04/09 21:12:33 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:33 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:33 [91m                            $/progress: backgroundIndexProgress REPORT, 22/40, 55.0%[0m
2022/04/09 21:12:33 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:34 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:34 [91m                            $/progress: backgroundIndexProgress REPORT, 23/40, 57.0%[0m
2022/04/09 21:12:34 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:34 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:34 [91m                            $/progress: backgroundIndexProgress REPORT, 23/40, 57.0%[0m
2022/04/09 21:12:34 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:34 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:34 [91m                            $/progress: backgroundIndexProgress REPORT, 24/40, 60.0%[0m
2022/04/09 21:12:34 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:34 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:34 [91m                            $/progress: backgroundIndexProgress REPORT, 24/40, 60.0%[0m
2022/04/09 21:12:34 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:34 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:34 [91m                            $/progress: backgroundIndexProgress REPORT, 25/40, 62.0%[0m
2022/04/09 21:12:34 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:34 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:34 [91m                            $/progress: backgroundIndexProgress REPORT, 25/40, 62.0%[0m
2022/04/09 21:12:34 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:34 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:34 [91m                            $/progress: backgroundIndexProgress REPORT, 26/40, 65.0%[0m
2022/04/09 21:12:34 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:34 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:34 [91m                            $/progress: backgroundIndexProgress REPORT, 26/40, 65.0%[0m
2022/04/09 21:12:34 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:35 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:35 [91m                            $/progress: backgroundIndexProgress REPORT, 27/40, 67.0%[0m
2022/04/09 21:12:35 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:35 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:35 [91m                            $/progress: backgroundIndexProgress REPORT, 27/40, 67.0%[0m
2022/04/09 21:12:35 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:36 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:36 [91m                            $/progress: backgroundIndexProgress REPORT, 28/40, 70.0%[0m
2022/04/09 21:12:36 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:36 [91m                            $/progress: backgroundIndexProgress REPORT, 28/40, 70.0%[0m
2022/04/09 21:12:36 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:36 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:36 [91m                            $/progress: backgroundIndexProgress REPORT, 29/40, 72.0%[0m
2022/04/09 21:12:36 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:36 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:36 [91m                            $/progress: backgroundIndexProgress REPORT, 29/40, 72.0%[0m
2022/04/09 21:12:36 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:36 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:36 [91m                            $/progress: backgroundIndexProgress REPORT, 30/40, 75.0%[0m
2022/04/09 21:12:36 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:36 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:36 [91m                            $/progress: backgroundIndexProgress REPORT, 30/40, 75.0%[0m
2022/04/09 21:12:36 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:36 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:36 [91m                            $/progress: backgroundIndexProgress REPORT, 31/40, 77.0%[0m
2022/04/09 21:12:36 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:36 [91m                            $/progress: backgroundIndexProgress REPORT, 31/40, 77.0%[0m
2022/04/09 21:12:36 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:36 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:36 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:36 [91m                            $/progress: backgroundIndexProgress REPORT, 32/40, 80.0%[0m
2022/04/09 21:12:36 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:36 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:36 [91m                            $/progress: backgroundIndexProgress REPORT, 32/40, 80.0%[0m
2022/04/09 21:12:36 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:36 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:36 [91m                            $/progress: backgroundIndexProgress REPORT, 33/40, 82.0%[0m
2022/04/09 21:12:36 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:36 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:36 [91m                            $/progress: backgroundIndexProgress REPORT, 33/40, 82.0%[0m
2022/04/09 21:12:36 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:37 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:37 [91m                            $/progress: backgroundIndexProgress REPORT, 34/40, 85.0%[0m
2022/04/09 21:12:37 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:37 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:37 [91m                            $/progress: backgroundIndexProgress REPORT, 34/40, 85.0%[0m
2022/04/09 21:12:37 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:37 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:37 [91m                            $/progress: backgroundIndexProgress REPORT, 35/40, 87.0%[0m
2022/04/09 21:12:37 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:37 [91m                            $/progress: backgroundIndexProgress REPORT, 35/40, 87.0%[0m
2022/04/09 21:12:37 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:37 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:37 [91m                            $/progress: backgroundIndexProgress REPORT, 36/40, 90.0%[0m
2022/04/09 21:12:37 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:37 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:37 [91m                            $/progress: backgroundIndexProgress REPORT, 36/40, 90.0%[0m
2022/04/09 21:12:37 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:37 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:37 [91m                            $/progress: backgroundIndexProgress REPORT, 37/40, 92.0%[0m
2022/04/09 21:12:37 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:38 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:38 [91m                            $/progress: backgroundIndexProgress REPORT, 38/40, 95.0%[0m
2022/04/09 21:12:38 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:38 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:38 [91m                            $/progress: backgroundIndexProgress REPORT, 39/40, 97.0%[0m
2022/04/09 21:12:38 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:38 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:12:38 [91m                            $/progress: backgroundIndexProgress END [0m
2022/04/09 21:12:38 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:12:57 [92mIDE --> LS REQU textDocument/hover 4[0m
2022/04/09 21:12:57 [92m                textDocument/hover 4: [93mread-locked[0m[0m
2022/04/09 21:12:57 [92m                textDocument/hover 4: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:12:57 [92m                textDocument/hover 4: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:15 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:15[0m
2022/04/09 21:12:57 [91mIDE     LS --> Clangd REQU textDocument/hover 5[0m
2022/04/09 21:12:57 [31mIDE     LS <-- Clangd RESP textDocument/hover 5[0m
2022/04/09 21:12:57 [92m                textDocument/hover 4: null response[0m
2022/04/09 21:12:57 [92m                textDocument/hover 4: [93mread-unlocked[0m[0m
2022/04/09 21:12:57 [32mIDE <-- LS RESP textDocument/hover 4[0m
2022/04/09 21:12:58 [92mIDE --> LS REQU textDocument/documentHighlight 5[0m
2022/04/09 21:12:58 [92m                textDocument/documentHighlight 5: [93mread-locked[0m[0m
2022/04/09 21:12:58 [92m                textDocument/documentHighlight 5: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:12:58 [92m                textDocument/documentHighlight 5: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:15 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:15[0m
2022/04/09 21:12:58 [91mIDE     LS --> Clangd REQU textDocument/documentHighlight 6[0m
2022/04/09 21:12:58 [31mIDE     LS <-- Clangd RESP textDocument/documentHighlight 6[0m
2022/04/09 21:12:58 [92m                textDocument/documentHighlight 5: [93mread-unlocked[0m[0m
2022/04/09 21:12:58 [32mIDE <-- LS RESP textDocument/documentHighlight 5[0m
2022/04/09 21:12:58 [92mIDE --> LS REQU textDocument/codeAction 6[0m
2022/04/09 21:12:58 [92m                textDocument/codeAction 6: [93mread-locked[0m[0m
2022/04/09 21:12:58 [92m                textDocument/codeAction 6: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:10)[0m
2022/04/09 21:12:58 [92m                textDocument/codeAction 6: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:12:58 [92m                textDocument/codeAction 6: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:12:58 [92m                textDocument/codeAction 6:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:1:10)[0m
2022/04/09 21:12:58 [91mIDE     LS --> Clangd REQU textDocument/codeAction 7[0m
2022/04/09 21:12:58 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 7[0m
2022/04/09 21:12:58 [92m                textDocument/codeAction 6: [93mread-unlocked[0m[0m
2022/04/09 21:12:58 [32mIDE <-- LS RESP textDocument/codeAction 6[0m
2022/04/09 21:12:59 [92mIDE --> LS REQU textDocument/hover 7[0m
2022/04/09 21:12:59 [92m                textDocument/hover 7: [93mread-locked[0m[0m
2022/04/09 21:12:59 [92m                textDocument/hover 7: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:12:59 [92m                textDocument/hover 7: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:12:19 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:14:19[0m
2022/04/09 21:12:59 [91mIDE     LS --> Clangd REQU textDocument/hover 8[0m
2022/04/09 21:12:59 [31mIDE     LS <-- Clangd RESP textDocument/hover 8[0m
2022/04/09 21:12:59 [92m                textDocument/hover 7: null response[0m
2022/04/09 21:12:59 [92m                textDocument/hover 7: [93mread-unlocked[0m[0m
2022/04/09 21:12:59 [32mIDE <-- LS RESP textDocument/hover 7[0m
2022/04/09 21:12:59 [92mIDE --> LS REQU textDocument/definition 8[0m
2022/04/09 21:12:59 [92m                textDocument/definition 8: [93mread-locked[0m[0m
2022/04/09 21:12:59 [92m                textDocument/definition 8: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:12:59 [92m                textDocument/definition 8: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:12:19 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:14:19[0m
2022/04/09 21:12:59 [91mIDE     LS --> Clangd REQU textDocument/definition 9[0m
2022/04/09 21:12:59 [31mIDE     LS <-- Clangd RESP textDocument/definition 9[0m
2022/04/09 21:12:59 [92m                textDocument/definition 8: [93mread-unlocked[0m[0m
2022/04/09 21:12:59 [32mIDE <-- LS RESP textDocument/definition 8[0m
2022/04/09 21:12:59 [92mIDE --> LS REQU textDocument/hover 9[0m
2022/04/09 21:12:59 [92m                textDocument/hover 9: [93mread-locked[0m[0m
2022/04/09 21:12:59 [92m                textDocument/hover 9: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:12:59 [92m                textDocument/hover 9: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:12:19 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:14:19[0m
2022/04/09 21:12:59 [91mIDE     LS --> Clangd REQU textDocument/hover 10[0m
2022/04/09 21:12:59 [31mIDE     LS <-- Clangd RESP textDocument/hover 10[0m
2022/04/09 21:12:59 [92m                textDocument/hover 9: null response[0m
2022/04/09 21:12:59 [92m                textDocument/hover 9: [93mread-unlocked[0m[0m
2022/04/09 21:12:59 [32mIDE <-- LS RESP textDocument/hover 9[0m
2022/04/09 21:13:39 [92mIDE --> LS REQU textDocument/hover 10[0m
2022/04/09 21:13:39 [92m                textDocument/hover 10: [93mread-locked[0m[0m
2022/04/09 21:13:39 [92m                textDocument/hover 10: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:13:39 [92m                textDocument/hover 10: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:51 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:51[0m
2022/04/09 21:13:39 [91mIDE     LS --> Clangd REQU textDocument/hover 11[0m
2022/04/09 21:13:39 [31mIDE     LS <-- Clangd RESP textDocument/hover 11[0m
2022/04/09 21:13:39 [92m                textDocument/hover 10: null response[0m
2022/04/09 21:13:39 [92m                textDocument/hover 10: [93mread-unlocked[0m[0m
2022/04/09 21:13:39 [32mIDE <-- LS RESP textDocument/hover 10[0m
2022/04/09 21:13:39 [92mIDE --> LS REQU textDocument/hover 11[0m
2022/04/09 21:13:39 [92m                textDocument/hover 11: [93mread-locked[0m[0m
2022/04/09 21:13:39 [92m                textDocument/hover 11: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:13:39 [92m                textDocument/hover 11: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:53 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:53[0m
2022/04/09 21:13:39 [91mIDE     LS --> Clangd REQU textDocument/hover 12[0m
2022/04/09 21:13:39 [31mIDE     LS <-- Clangd RESP textDocument/hover 12[0m
2022/04/09 21:13:39 [92m                textDocument/hover 11: null response[0m
2022/04/09 21:13:39 [92m                textDocument/hover 11: [93mread-unlocked[0m[0m
2022/04/09 21:13:39 [32mIDE <-- LS RESP textDocument/hover 11[0m
2022/04/09 21:13:55 [92mIDE --> LS REQU textDocument/hover 12[0m
2022/04/09 21:13:55 [92m                textDocument/hover 12: [93mread-locked[0m[0m
2022/04/09 21:13:55 [92m                textDocument/hover 12: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:13:55 [92m                textDocument/hover 12: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:42 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:17:42[0m
2022/04/09 21:13:55 [91mIDE     LS --> Clangd REQU textDocument/hover 13[0m
2022/04/09 21:13:55 [31mIDE     LS <-- Clangd RESP textDocument/hover 13[0m
2022/04/09 21:13:55 [92m                textDocument/hover 12: null response[0m
2022/04/09 21:13:55 [92m                textDocument/hover 12: [93mread-unlocked[0m[0m
2022/04/09 21:13:55 [32mIDE <-- LS RESP textDocument/hover 12[0m
2022/04/09 21:13:55 [92mIDE --> LS REQU textDocument/hover 13[0m
2022/04/09 21:13:55 [92m                textDocument/hover 13: [93mread-locked[0m[0m
2022/04/09 21:13:55 [92m                textDocument/hover 13: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:13:55 [92m                textDocument/hover 13: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:49 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:17:49[0m
2022/04/09 21:13:55 [91mIDE     LS --> Clangd REQU textDocument/hover 14[0m
2022/04/09 21:13:55 [31mIDE     LS <-- Clangd RESP textDocument/hover 14[0m
2022/04/09 21:13:55 [92m                textDocument/hover 13: null response[0m
2022/04/09 21:13:55 [92m                textDocument/hover 13: [93mread-unlocked[0m[0m
2022/04/09 21:13:55 [32mIDE <-- LS RESP textDocument/hover 13[0m
2022/04/09 21:14:00 [92mIDE --> LS REQU textDocument/hover 14[0m
2022/04/09 21:14:00 [92m                textDocument/hover 14: [93mread-locked[0m[0m
2022/04/09 21:14:00 [92m                textDocument/hover 14: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:00 [92m                textDocument/hover 14: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:42:79 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:44:79[0m
2022/04/09 21:14:00 [91mIDE     LS --> Clangd REQU textDocument/hover 15[0m
2022/04/09 21:14:00 [31mIDE     LS <-- Clangd RESP textDocument/hover 15[0m
2022/04/09 21:14:00 [92m                textDocument/hover 14: null response[0m
2022/04/09 21:14:00 [92m                textDocument/hover 14: [93mread-unlocked[0m[0m
2022/04/09 21:14:00 [32mIDE <-- LS RESP textDocument/hover 14[0m
2022/04/09 21:14:05 [92mIDE --> LS REQU textDocument/hover 15[0m
2022/04/09 21:14:05 [92m                textDocument/hover 15: [93mread-locked[0m[0m
2022/04/09 21:14:05 [92m                textDocument/hover 15: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:05 [92m                textDocument/hover 15: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:42:49 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:44:49[0m
2022/04/09 21:14:05 [91mIDE     LS --> Clangd REQU textDocument/hover 16[0m
2022/04/09 21:14:05 [31mIDE     LS <-- Clangd RESP textDocument/hover 16[0m
2022/04/09 21:14:05 [92m                textDocument/hover 15: null response[0m
2022/04/09 21:14:05 [92m                textDocument/hover 15: [93mread-unlocked[0m[0m
2022/04/09 21:14:05 [32mIDE <-- LS RESP textDocument/hover 15[0m
2022/04/09 21:14:20 [92mIDE --> LS REQU textDocument/hover 16[0m
2022/04/09 21:14:20 [92m                textDocument/hover 16: [93mread-locked[0m[0m
2022/04/09 21:14:20 [92m                textDocument/hover 16: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:20 [92m                textDocument/hover 16: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:96:22[0m
2022/04/09 21:14:20 [91mIDE     LS --> Clangd REQU textDocument/hover 17[0m
2022/04/09 21:14:20 [31mIDE     LS <-- Clangd RESP textDocument/hover 17[0m
2022/04/09 21:14:20 [92m                textDocument/hover 16: null response[0m
2022/04/09 21:14:20 [92m                textDocument/hover 16: [93mread-unlocked[0m[0m
2022/04/09 21:14:20 [32mIDE <-- LS RESP textDocument/hover 16[0m
2022/04/09 21:14:20 [92mIDE --> LS REQU textDocument/codeAction 17[0m
2022/04/09 21:14:20 [92m                textDocument/codeAction 17: [93mread-locked[0m[0m
2022/04/09 21:14:20 [92m                textDocument/codeAction 17: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22)[0m
2022/04/09 21:14:20 [92m                textDocument/codeAction 17: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:20 [92m                textDocument/codeAction 17: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:20 [92m                textDocument/codeAction 17:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:89:22)[0m
2022/04/09 21:14:20 [91mIDE     LS --> Clangd REQU textDocument/codeAction 18[0m
2022/04/09 21:14:20 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 18[0m
2022/04/09 21:14:20 [92m                textDocument/codeAction 17: [93mread-unlocked[0m[0m
2022/04/09 21:14:20 [32mIDE <-- LS RESP textDocument/codeAction 17[0m
2022/04/09 21:14:36 [92mIDE --> LS REQU textDocument/hover 18[0m
2022/04/09 21:14:36 [92m                textDocument/hover 18: [93mread-locked[0m[0m
2022/04/09 21:14:36 [92m                textDocument/hover 18: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:36 [92m                textDocument/hover 18: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:66:37 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:68:37[0m
2022/04/09 21:14:36 [91mIDE     LS --> Clangd REQU textDocument/hover 19[0m
2022/04/09 21:14:36 [31mIDE     LS <-- Clangd RESP textDocument/hover 19[0m
2022/04/09 21:14:36 [92m                textDocument/hover 18: null response[0m
2022/04/09 21:14:36 [92m                textDocument/hover 18: [93mread-unlocked[0m[0m
2022/04/09 21:14:36 [32mIDE <-- LS RESP textDocument/hover 18[0m
2022/04/09 21:14:48 [92mIDE --> LS REQU textDocument/codeAction 19[0m
2022/04/09 21:14:48 [92m                textDocument/codeAction 19: [93mread-locked[0m[0m
2022/04/09 21:14:48 [92m                textDocument/codeAction 19: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:3:22)[0m
2022/04/09 21:14:48 [92m                textDocument/codeAction 19: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:48 [92m                textDocument/codeAction 19:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:22)[0m
2022/04/09 21:14:48 [91mIDE     LS --> Clangd REQU textDocument/codeAction 20[0m
2022/04/09 21:14:48 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 20[0m
2022/04/09 21:14:48 [92m                textDocument/codeAction 19: [93mread-unlocked[0m[0m
2022/04/09 21:14:48 [32mIDE <-- LS RESP textDocument/codeAction 19[0m
2022/04/09 21:14:48 [92mIDE --> LS REQU textDocument/hover 20[0m
2022/04/09 21:14:48 [92m                textDocument/hover 20: [93mread-locked[0m[0m
2022/04/09 21:14:48 [92m                textDocument/hover 20: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:48 [92m                textDocument/hover 20: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:26 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:26[0m
2022/04/09 21:14:48 [91mIDE     LS --> Clangd REQU textDocument/hover 21[0m
2022/04/09 21:14:48 [31mIDE     LS <-- Clangd RESP textDocument/hover 21[0m
2022/04/09 21:14:48 [92m                textDocument/hover 20: null response[0m
2022/04/09 21:14:48 [92m                textDocument/hover 20: [93mread-unlocked[0m[0m
2022/04/09 21:14:48 [32mIDE <-- LS RESP textDocument/hover 20[0m
2022/04/09 21:14:49 [92mIDE --> LS REQU textDocument/hover 21[0m
2022/04/09 21:14:49 [92m                textDocument/hover 21: [93mread-locked[0m[0m
2022/04/09 21:14:49 [92m                textDocument/hover 21: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:49 [92m                textDocument/hover 21: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:0:21 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:2:21[0m
2022/04/09 21:14:49 [91mIDE     LS --> Clangd REQU textDocument/hover 22[0m
2022/04/09 21:14:49 [31mIDE     LS <-- Clangd RESP textDocument/hover 22[0m
2022/04/09 21:14:49 [92m                textDocument/hover 21: null response[0m
2022/04/09 21:14:49 [92m                textDocument/hover 21: [93mread-unlocked[0m[0m
2022/04/09 21:14:49 [32mIDE <-- LS RESP textDocument/hover 21[0m
2022/04/09 21:14:49 [92mIDE --> LS REQU textDocument/hover 22[0m
2022/04/09 21:14:49 [92m                textDocument/hover 22: [93mread-locked[0m[0m
2022/04/09 21:14:49 [92m                textDocument/hover 22: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:49 [92m                textDocument/hover 22: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:0:21 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:2:21[0m
2022/04/09 21:14:49 [91mIDE     LS --> Clangd REQU textDocument/hover 23[0m
2022/04/09 21:14:49 [31mIDE     LS <-- Clangd RESP textDocument/hover 23[0m
2022/04/09 21:14:49 [92m                textDocument/hover 22: null response[0m
2022/04/09 21:14:49 [92m                textDocument/hover 22: [93mread-unlocked[0m[0m
2022/04/09 21:14:49 [32mIDE <-- LS RESP textDocument/hover 22[0m
2022/04/09 21:14:52 [92mIDE --> LS REQU textDocument/hover 23[0m
2022/04/09 21:14:52 [92m                textDocument/hover 23: [93mread-locked[0m[0m
2022/04/09 21:14:52 [92m                textDocument/hover 23: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:52 [92m                textDocument/hover 23: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:27 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:27[0m
2022/04/09 21:14:52 [91mIDE     LS --> Clangd REQU textDocument/hover 24[0m
2022/04/09 21:14:52 [31mIDE     LS <-- Clangd RESP textDocument/hover 24[0m
2022/04/09 21:14:52 [92m                textDocument/hover 23: null response[0m
2022/04/09 21:14:52 [92m                textDocument/hover 23: [93mread-unlocked[0m[0m
2022/04/09 21:14:52 [32mIDE <-- LS RESP textDocument/hover 23[0m
2022/04/09 21:14:53 [92mIDE --> LS REQU textDocument/codeAction 24[0m
2022/04/09 21:14:53 [92m                textDocument/codeAction 24: [93mread-locked[0m[0m
2022/04/09 21:14:53 [92m                textDocument/codeAction 24: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:10)[0m
2022/04/09 21:14:53 [92m                textDocument/codeAction 24: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:53 [92m                textDocument/codeAction 24: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:53 [92m                textDocument/codeAction 24:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:1:10)[0m
2022/04/09 21:14:53 [91mIDE     LS --> Clangd REQU textDocument/codeAction 25[0m
2022/04/09 21:14:53 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 25[0m
2022/04/09 21:14:53 [92m                textDocument/codeAction 24: [93mread-unlocked[0m[0m
2022/04/09 21:14:53 [32mIDE <-- LS RESP textDocument/codeAction 24[0m
2022/04/09 21:14:53 [92mIDE --> LS REQU textDocument/codeAction 25[0m
2022/04/09 21:14:53 [92m                textDocument/codeAction 25: [93mread-locked[0m[0m
2022/04/09 21:14:53 [92m                textDocument/codeAction 25: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9)[0m
2022/04/09 21:14:53 [92m                textDocument/codeAction 25: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:53 [92m                textDocument/codeAction 25: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:53 [92m                textDocument/codeAction 25:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:1:9)[0m
2022/04/09 21:14:53 [91mIDE     LS --> Clangd REQU textDocument/codeAction 26[0m
2022/04/09 21:14:53 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 26[0m
2022/04/09 21:14:53 [92m                textDocument/codeAction 25: [93mread-unlocked[0m[0m
2022/04/09 21:14:53 [32mIDE <-- LS RESP textDocument/codeAction 25[0m
2022/04/09 21:14:54 [92mIDE --> LS REQU textDocument/definition 26[0m
2022/04/09 21:14:54 [92m                textDocument/definition 26: [93mread-locked[0m[0m
2022/04/09 21:14:54 [92m                textDocument/definition 26: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:14:54 [92m                textDocument/definition 26: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:10 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:10[0m
2022/04/09 21:14:54 [91mIDE     LS --> Clangd REQU textDocument/definition 27[0m
2022/04/09 21:14:54 [31mIDE     LS <-- Clangd RESP textDocument/definition 27[0m
2022/04/09 21:14:54 [92m                textDocument/definition 26: [93mread-unlocked[0m[0m
2022/04/09 21:14:54 [32mIDE <-- LS RESP textDocument/definition 26[0m
2022/04/09 21:15:02 [92mIDE --> LS REQU textDocument/hover 27[0m
2022/04/09 21:15:02 [92m                textDocument/hover 27: [93mread-locked[0m[0m
2022/04/09 21:15:02 [92m                textDocument/hover 27: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:15:02 [92m                textDocument/hover 27: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:24:65 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:26:65[0m
2022/04/09 21:15:02 [91mIDE     LS --> Clangd REQU textDocument/hover 28[0m
2022/04/09 21:15:02 [31mIDE     LS <-- Clangd RESP textDocument/hover 28[0m
2022/04/09 21:15:02 [92m                textDocument/hover 27: null response[0m
2022/04/09 21:15:02 [92m                textDocument/hover 27: [93mread-unlocked[0m[0m
2022/04/09 21:15:02 [32mIDE <-- LS RESP textDocument/hover 27[0m
2022/04/09 21:15:03 [92mIDE --> LS REQU textDocument/hover 28[0m
2022/04/09 21:15:03 [92m                textDocument/hover 28: [93mread-locked[0m[0m
2022/04/09 21:15:03 [92m                textDocument/hover 28: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:15:03 [92m                textDocument/hover 28: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:24:65 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:26:65[0m
2022/04/09 21:15:03 [91mIDE     LS --> Clangd REQU textDocument/hover 29[0m
2022/04/09 21:15:03 [31mIDE     LS <-- Clangd RESP textDocument/hover 29[0m
2022/04/09 21:15:03 [92m                textDocument/hover 28: null response[0m
2022/04/09 21:15:03 [92m                textDocument/hover 28: [93mread-unlocked[0m[0m
2022/04/09 21:15:03 [32mIDE <-- LS RESP textDocument/hover 28[0m







Started logging.
2022/04/09 21:20:41 Language server launched with arguments:
2022/04/09 21:20:41   arg[0] = c:\Users\Usuario\AppData\Local\Programs\Arduino IDE\resources\app\node_modules\arduino-ide-extension\build\arduino-language-server.exe
2022/04/09 21:20:41   arg[1] = -clangd
2022/04/09 21:20:41   arg[2] = c:\Users\Usuario\AppData\Local\Programs\Arduino IDE\resources\app\node_modules\arduino-ide-extension\build\clangd.exe
2022/04/09 21:20:41   arg[3] = -cli-daemon-addr
2022/04/09 21:20:41   arg[4] = localhost:56161
2022/04/09 21:20:41   arg[5] = -cli-daemon-instance
2022/04/09 21:20:41   arg[6] = 1
2022/04/09 21:20:41   arg[7] = -fqbn
2022/04/09 21:20:41   arg[8] = esp32:esp32:esp32
2022/04/09 21:20:41   arg[9] = -board-name
2022/04/09 21:20:41   arg[10] = "ESP32 Dev Module"
2022/04/09 21:20:41   arg[11] = -log
2022/04/09 21:20:41   arg[12] = -logpath
2022/04/09 21:20:41   arg[13] = c:\git\MyPrograms\ioT\ESP32codeBLE
2022/04/09 21:20:41 logging to c:\git\MyPrograms\ioT\ESP32codeBLE\inols.log
2022/04/09 21:20:41 [97mLS: : Initial board configuration: esp32:esp32:esp32[0m
2022/04/09 21:20:41 [97mLS: : Language server build path: C:\Users\Usuario\AppData\Local\Temp\arduino-language-server971939718[0m
2022/04/09 21:20:41 [97mLS: : Language server build sketch root: C:\Users\Usuario\AppData\Local\Temp\arduino-language-server971939718\sketch[0m
2022/04/09 21:20:41 [97mLS: : Language server compile-commands: C:\Users\Usuario\AppData\Local\Temp\arduino-language-server505041923\compile_commands.json[0m
2022/04/09 21:20:41 [92mIDE --> LS REQU initialize 0[0m
2022/04/09 21:20:41 [96mINIT --- : initializing workbench: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE[0m
2022/04/09 21:20:41 [92m                initialize 0: initialization parameters: {"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.6.0"}}[0m
2022/04/09 21:20:41 [96mINIT --- : [93mread-locked[0m[0m
2022/04/09 21:20:41 [32mIDE <-- LS RESP initialize 0[0m
2022/04/09 21:20:41 [96mINIT --- : [93mread-unlocked[0m[0m
2022/04/09 21:20:41 listen tcp 127.0.0.1:6060: bind: Normalmente é permitida apenas uma utilização de cada endereço de soquete (protocolo/endereço de rede/porta).
2022/04/09 21:20:41 [92mIDE --> LS NOTIF initialized[0m
2022/04/09 21:20:41 [92m                 initialized: Notification is not propagated to clangd[0m
2022/04/09 21:20:41 [92mIDE --> LS NOTIF textDocument/didOpen[0m
2022/04/09 21:20:41 [92m                 textDocument/didOpen: [93mwrite-locked[0m[0m
2022/04/09 21:20:41 [92m                 textDocument/didOpen: (throttled: waiting for clangd)[0m
2022/04/09 21:20:41 [92m                 textDocument/didOpen: [93munlocked (waiting clangd)[0m[0m
2022/04/09 21:20:41 [96mINIT --- : Running build with: {
  "instance": {
    "id": 1
  },
  "fqbn": "esp32:esp32:esp32",
  "sketch_path": "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE",
  "build_path": "C:\\Users\\Usuario\\AppData\\Local\\Temp\\arduino-language-server971939718",
  "verbose": true,
  "create_compilation_database_only": true
}[0m
2022/04/09 21:20:44 [96mINIT --- : Compile successful![0m
2022/04/09 21:20:44 [96mINIT --- : Arduino Data Dir -> c:\Users\Usuario\AppData\Local\Arduino15[0m
2022/04/09 21:20:44 [96mINIT --- :     Starting clangd: c:\Users\Usuario\AppData\Local\Programs\Arduino IDE\resources\app\node_modules\arduino-ide-extension\build\clangd.exe -log=verbose --compile-commands-dir=C:\Users\Usuario\AppData\Local\Temp\arduino-language-server971939718 -query-driver=C:\Users\Usuario\AppData\Local\Arduino15\packages\**[0m
2022/04/09 21:20:44 logging to c:\git\MyPrograms\ioT\ESP32codeBLE\inols-clangd.log
2022/04/09 21:20:44 logging to c:\git\MyPrograms\ioT\ESP32codeBLE\inols-clangd-err.log
2022/04/09 21:20:44 [91mIDE     LS --> Clangd REQU initialize 1[0m
2022/04/09 21:20:44 [31mIDE     LS <-- Clangd RESP initialize 1[0m
2022/04/09 21:20:44 [96mINIT --- : clangd successfully started: {"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"]},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"declarationProvider":{},"definitionProvider":{},"implementationProvider":{},"referencesProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentLinkProvider":{},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{"prepareProvider":true},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"selectionRangeProvider":{},"callHierarchyProvider":{},"semanticTokensProvider":{"legend":{"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"],"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","dependentName","defaultLibrary","functionScope","classScope","fileScope","globalScope"]},"range":false,"full":{"delta":true}},"workspaceSymbolProvider":{}},"serverInfo":{"name":"clangd","version":"clangd version 13.0.0 windows x86_64-pc-windows-msvc"}}[0m
2022/04/09 21:20:44 [91mIDE     LS --> Clangd NOTIF initialized[0m
2022/04/09 21:20:44 [96mINIT --- : Done initializing workbench[0m
2022/04/09 21:20:44 [92m                 textDocument/didOpen: [93mlocked (waiting clangd)[0m[0m
2022/04/09 21:20:44 [92m                 textDocument/didOpen: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:20:44 [92m                 textDocument/didOpen: Increasing .ino tracked files count to 1[0m
2022/04/09 21:20:44 [91mIDE     LS --> Clangd NOTIF textDocument/didOpen[0m
2022/04/09 21:20:44 [92m                 textDocument/didOpen: [93mwrite-unlocked[0m[0m
2022/04/09 21:20:44 [92mIDE --> LS REQU textDocument/codeAction 1[0m
2022/04/09 21:20:44 [92m                textDocument/codeAction 1: [93mread-locked[0m[0m
2022/04/09 21:20:44 [92m                textDocument/codeAction 1: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:69:20)[0m
2022/04/09 21:20:44 [92m                textDocument/codeAction 1: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:20:44 [92m                textDocument/codeAction 1:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:69:20)[0m
2022/04/09 21:20:44 [91mIDE     LS --> Clangd REQU textDocument/codeAction 2[0m
2022/04/09 21:20:44 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:20:44 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/09 21:20:44 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/.clangd (0 diagnostics):[0m
2022/04/09 21:20:44 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/.clangd -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/.clangd[0m
2022/04/09 21:20:44 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/09 21:20:44 [91m                            textDocument/publishDiagnostics:   - file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/.clangd (0 diagnostics):[0m
2022/04/09 21:20:44 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:20:44 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/09 21:20:44 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 0[0m
2022/04/09 21:20:44 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 0[0m
2022/04/09 21:20:44 [92mIDE <-- LS REQU window/workDoneProgress/create 1[0m
2022/04/09 21:20:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:44 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
2022/04/09 21:20:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:44 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
2022/04/09 21:20:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:44 [91m                            $/progress: backgroundIndexProgress REPORT, 0/40, 0.0%[0m
2022/04/09 21:20:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:44 [91m                            $/progress: backgroundIndexProgress REPORT, 0/40, 0.0%[0m
2022/04/09 21:20:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:44 [91m                            $/progress: backgroundIndexProgress REPORT, 0/40, 0.0%[0m
2022/04/09 21:20:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:44 [91m                            $/progress: backgroundIndexProgress REPORT, 1/40, 2.0%[0m
2022/04/09 21:20:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:44 [91m                            $/progress: backgroundIndexProgress REPORT, 1/40, 2.0%[0m
2022/04/09 21:20:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:44 [91m                            $/progress: backgroundIndexProgress REPORT, 1/40, 2.0%[0m
2022/04/09 21:20:45 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:45 [91m                            $/progress: backgroundIndexProgress REPORT, 2/40, 5.0%[0m
2022/04/09 21:20:45 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:45 [91m                            $/progress: backgroundIndexProgress REPORT, 2/40, 5.0%[0m
2022/04/09 21:20:45 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:45 [91m                            $/progress: backgroundIndexProgress REPORT, 3/40, 7.0%[0m
2022/04/09 21:20:45 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:45 [91m                            $/progress: backgroundIndexProgress REPORT, 3/40, 7.0%[0m
2022/04/09 21:20:45 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:45 [91m                            $/progress: backgroundIndexProgress REPORT, 4/40, 10.0%[0m
2022/04/09 21:20:45 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:45 [91m                            $/progress: backgroundIndexProgress REPORT, 4/40, 10.0%[0m
2022/04/09 21:20:46 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:46 [91m                            $/progress: backgroundIndexProgress REPORT, 5/40, 12.0%[0m
2022/04/09 21:20:46 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:46 [91m                            $/progress: backgroundIndexProgress REPORT, 5/40, 12.0%[0m
2022/04/09 21:20:46 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:46 [91m                            $/progress: backgroundIndexProgress REPORT, 6/40, 15.0%[0m
2022/04/09 21:20:46 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:46 [91m                            $/progress: backgroundIndexProgress REPORT, 6/40, 15.0%[0m
2022/04/09 21:20:46 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (25 diagnostics):[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 12:0 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 15:0 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 31:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 31:23 - Error: "incomplete_base_class"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 32:19 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 36:22 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 42:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 42:31 - Error: "incomplete_base_class"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 43:17 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "undeclared_var_use"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 96:2 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 96:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 97:10 - Error: "no_member"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 99:2 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 99:32 - Error: "no_member"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 103:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 106:38 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 109:2 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 111:41 - Error: "undeclared_var_use"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 118:10 - Error: "no_member"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   > 123:17 - Error: "undeclared_var_use"[0m
2022/04/09 21:20:46 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 2[0m
2022/04/09 21:20:46 [92m                textDocument/codeAction 1: [93mread-unlocked[0m[0m
2022/04/09 21:20:46 [32mIDE <-- LS RESP textDocument/codeAction 1[0m
2022/04/09 21:20:46 [92mIDE --> LS REQU textDocument/documentSymbol 2[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: [93mread-locked[0m[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:20:46 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 3[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/09 21:20:46 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 3[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:3:9-3:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:29 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:12:0-12:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:17 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:15:0-15:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:7 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:31:30-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:30-29:48 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:31:23-31:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:23-29:48 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:32:19-32:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:19-30:28 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:36:22-36:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:22-34:31 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range is in PREPROCESSED section of the sketch[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range is in PREPROCESSED section of the sketch[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:42:38-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:38-40:64 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:42:31-42:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:31-40:64 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 2: [93mread-unlocked[0m[0m
2022/04/09 21:20:46 [32mIDE <-- LS RESP textDocument/documentSymbol 2[0m
2022/04/09 21:20:46 [92mIDE --> LS REQU textDocument/documentSymbol 3[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: [93mread-locked[0m[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:20:46 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 4[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:43:17-43:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:17-41:34 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/09 21:20:46 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 4[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Variable 12:0-12:35[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:96:2-96:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:2-89:11 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:12:0-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0-10:35 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:12:19-12:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:19-10:35 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Variable 15:0-15:14[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:15:0-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:14 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:15:8-15:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:8-13:14 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Variable 17:0-17:28[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:96:22-96:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:22-89:31 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:17:0-17:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:28 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:17:5-17:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:5-15:20 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Variable 19:0-19:17[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:97:10-97:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:10-90:22 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:19:0-19:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:17 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:99:2-99:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:2-92:12 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:19:10-19:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:13 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Variable 20:0-20:21[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:99:32-99:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:92:32-92:45 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:20:0-20:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:0-18:21 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:103:22-103:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:96:22-96:39 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:20:10-20:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:18:10-18:16 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Class 31:0-39:1[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:106:38-106:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:99:38-99:45 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:31:0-39:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:0-37:1 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:109:2-109:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:2-102:19 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:31:6-31:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:6-29:21 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Method 32:4-34:5[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:111:41-111:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:104:41-104:58 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:32:4-34:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:4-32:5 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:118:10-118:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:111:10-111:24 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:32:9-32:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:30:9-30:18 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Method 36:4-38:5[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:123:17-123:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:116:17-116:23 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:36:4-38:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:4-36:5 (.ino)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:36:9-36:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:34:9-34:21 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (22 diagnostics):[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Class 42:0-80:1[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 10:0 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 13:0 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 29:23 - Error: "incomplete_base_class"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 40:31 - Error: "incomplete_base_class"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 41:17 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "undeclared_var_use"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 89:2 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 89:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 90:10 - Error: "no_member"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 92:2 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 92:32 - Error: "no_member"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 96:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 99:38 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 102:2 - Error: "unknown_typename"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 104:41 - Error: "undeclared_var_use"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 111:10 - Error: "no_member"[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics:     > 116:17 - Error: "undeclared_var_use"[0m
2022/04/09 21:20:46 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:20:46 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:42:0-80:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:0-78:1 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:42:6-42:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:6-40:29 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Method 43:4-79:5[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:43:4-79:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:4-77:5 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:43:9-43:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:41:9-41:16 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Function 83:0-83:12[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range is in PREPROCESSED section of the sketch[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:83:0-83:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Function 85:0-85:11[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range is in PREPROCESSED section of the sketch[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:85:0-85:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Function 87:0-127:1[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:87:0-127:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-120:1 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:87:5-87:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3:   > convert SymbolKind:Function 129:0-164:1[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:129:0-164:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-157:1 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:129:5-129:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:20:46 [92m                textDocument/documentSymbol 3: [93mread-unlocked[0m[0m
2022/04/09 21:20:46 [32mIDE <-- LS RESP textDocument/documentSymbol 3[0m
2022/04/09 21:20:46 [32mIDE --> LS RESP window/workDoneProgress/create 1[0m
2022/04/09 21:20:46 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:46 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:47 [92mIDE --> LS REQU textDocument/codeAction 4[0m
2022/04/09 21:20:47 [92m                textDocument/codeAction 4: [93mread-locked[0m[0m
2022/04/09 21:20:47 [92m                textDocument/codeAction 4: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:69:20)[0m
2022/04/09 21:20:47 [92m                textDocument/codeAction 4: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:20:47 [92m                textDocument/codeAction 4:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:69:20)[0m
2022/04/09 21:20:47 [91mIDE     LS --> Clangd REQU textDocument/codeAction 5[0m
2022/04/09 21:20:47 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 5[0m
2022/04/09 21:20:47 [92m                textDocument/codeAction 4: [93mread-unlocked[0m[0m
2022/04/09 21:20:47 [32mIDE <-- LS RESP textDocument/codeAction 4[0m
2022/04/09 21:20:47 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:47 [91m                            $/progress: backgroundIndexProgress REPORT, 7/40, 17.0%[0m
2022/04/09 21:20:47 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:47 [91m                            $/progress: backgroundIndexProgress REPORT, 7/40, 17.0%[0m
2022/04/09 21:20:47 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:47 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:47 [91m                            $/progress: backgroundIndexProgress REPORT, 8/40, 20.0%[0m
2022/04/09 21:20:47 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:47 [91m                            $/progress: backgroundIndexProgress REPORT, 8/40, 20.0%[0m
2022/04/09 21:20:47 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:47 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:47 [91m                            $/progress: backgroundIndexProgress REPORT, 9/40, 22.0%[0m
2022/04/09 21:20:47 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:47 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:47 [91m                            $/progress: backgroundIndexProgress REPORT, 9/40, 22.0%[0m
2022/04/09 21:20:47 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:48 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:48 [91m                            $/progress: backgroundIndexProgress REPORT, 10/40, 25.0%[0m
2022/04/09 21:20:48 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:48 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:48 [91m                            $/progress: backgroundIndexProgress REPORT, 10/40, 25.0%[0m
2022/04/09 21:20:48 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:48 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:48 [91m                            $/progress: backgroundIndexProgress REPORT, 11/40, 27.0%[0m
2022/04/09 21:20:48 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:48 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:48 [91m                            $/progress: backgroundIndexProgress REPORT, 11/40, 27.0%[0m
2022/04/09 21:20:48 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:48 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:48 [91m                            $/progress: backgroundIndexProgress REPORT, 12/40, 30.0%[0m
2022/04/09 21:20:48 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:48 [91m                            $/progress: backgroundIndexProgress REPORT, 12/40, 30.0%[0m
2022/04/09 21:20:48 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:48 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:48 [91m                            $/progress: backgroundIndexProgress REPORT, 13/40, 32.0%[0m
2022/04/09 21:20:48 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:48 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:48 [91m                            $/progress: backgroundIndexProgress REPORT, 13/40, 32.0%[0m
2022/04/09 21:20:48 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:48 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:48 [91m                            $/progress: backgroundIndexProgress REPORT, 14/40, 35.0%[0m
2022/04/09 21:20:48 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:48 [91m                            $/progress: backgroundIndexProgress REPORT, 14/40, 35.0%[0m
2022/04/09 21:20:48 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:48 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:49 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:49 [91m                            $/progress: backgroundIndexProgress REPORT, 15/40, 37.0%[0m
2022/04/09 21:20:49 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:49 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:49 [91m                            $/progress: backgroundIndexProgress REPORT, 15/40, 37.0%[0m
2022/04/09 21:20:49 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:49 [92mIDE --> LS REQU textDocument/hover 5[0m
2022/04/09 21:20:49 [92m                textDocument/hover 5: [93mread-locked[0m[0m
2022/04/09 21:20:49 [92m                textDocument/hover 5: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:20:49 [92m                textDocument/hover 5: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:53 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:3:53[0m
2022/04/09 21:20:49 [91mIDE     LS --> Clangd REQU textDocument/hover 6[0m
2022/04/09 21:20:49 [31mIDE     LS <-- Clangd RESP textDocument/hover 6[0m
2022/04/09 21:20:49 [92m                textDocument/hover 5: null response[0m
2022/04/09 21:20:49 [92m                textDocument/hover 5: [93mread-unlocked[0m[0m
2022/04/09 21:20:49 [32mIDE <-- LS RESP textDocument/hover 5[0m
2022/04/09 21:20:49 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:49 [91m                            $/progress: backgroundIndexProgress REPORT, 16/40, 40.0%[0m
2022/04/09 21:20:49 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:49 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:49 [91m                            $/progress: backgroundIndexProgress REPORT, 16/40, 40.0%[0m
2022/04/09 21:20:49 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:49 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:49 [91m                            $/progress: backgroundIndexProgress REPORT, 17/40, 42.0%[0m
2022/04/09 21:20:49 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:49 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:49 [91m                            $/progress: backgroundIndexProgress REPORT, 17/40, 42.0%[0m
2022/04/09 21:20:49 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:49 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:49 [91m                            $/progress: backgroundIndexProgress REPORT, 18/40, 45.0%[0m
2022/04/09 21:20:49 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:49 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:49 [91m                            $/progress: backgroundIndexProgress REPORT, 18/40, 45.0%[0m
2022/04/09 21:20:49 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 19/40, 47.0%[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 19/40, 47.0%[0m
2022/04/09 21:20:50 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:50 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:50 [92mIDE --> LS REQU textDocument/hover 6[0m
2022/04/09 21:20:50 [92m                textDocument/hover 6: [93mread-locked[0m[0m
2022/04/09 21:20:50 [92m                textDocument/hover 6: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:20:50 [92m                textDocument/hover 6: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:53 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server971939718/sketch/ESP32codeBLE.ino.cpp:3:53[0m
2022/04/09 21:20:50 [91mIDE     LS --> Clangd REQU textDocument/hover 7[0m
2022/04/09 21:20:50 [31mIDE     LS <-- Clangd RESP textDocument/hover 7[0m
2022/04/09 21:20:50 [92m                textDocument/hover 6: null response[0m
2022/04/09 21:20:50 [92m                textDocument/hover 6: [93mread-unlocked[0m[0m
2022/04/09 21:20:50 [32mIDE <-- LS RESP textDocument/hover 6[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 20/40, 50.0%[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 20/40, 50.0%[0m
2022/04/09 21:20:50 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 21/40, 52.0%[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 21/40, 52.0%[0m
2022/04/09 21:20:50 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:50 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 22/40, 55.0%[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 22/40, 55.0%[0m
2022/04/09 21:20:50 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 23/40, 57.0%[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 23/40, 57.0%[0m
2022/04/09 21:20:50 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 24/40, 60.0%[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 24/40, 60.0%[0m
2022/04/09 21:20:50 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:50 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 25/40, 62.0%[0m
2022/04/09 21:20:50 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:20:50 [91m                            $/progress: backgroundIndexProgress REPORT, 25/40, 62.0%[0m
2022/04/09 21:20:50 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:51 [92mIDE --> LS REQU shutdown 7[0m
2022/04/09 21:20:51 [91mIDE     LS --> Clangd REQU shutdown 8[0m
2022/04/09 21:20:51 [31mIDE     LS <-- Clangd RESP shutdown 8[0m
2022/04/09 21:20:51 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:20:51 [32mIDE <-- LS RESP shutdown 7[0m
2022/04/09 21:20:51 [92mIDE --> LS NOTIF exit[0m
2022/04/09 21:20:51 [91mIDE     LS --> Clangd NOTIF exit[0m
2022/04/09 21:20:51 [92m                 exit: Arduino Language Server is shutting down.[0m
2022/04/09 21:21:15 [92mIDE --> LS REQU textDocument/hover 29[0m
2022/04/09 21:21:15 [92m                textDocument/hover 29: [93mread-locked[0m[0m
2022/04/09 21:21:15 [92m                textDocument/hover 29: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:21:15 [92m                textDocument/hover 29: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:0:11 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:2:11[0m
2022/04/09 21:21:15 [91mIDE     LS --> Clangd REQU textDocument/hover 30[0m
2022/04/09 21:21:15 [31mIDE     LS <-- Clangd RESP textDocument/hover 30[0m
2022/04/09 21:21:15 [92m                textDocument/hover 29: null response[0m
2022/04/09 21:21:15 [92m                textDocument/hover 29: [93mread-unlocked[0m[0m
2022/04/09 21:21:15 [32mIDE <-- LS RESP textDocument/hover 29[0m
2022/04/09 21:21:15 [92mIDE --> LS REQU textDocument/hover 30[0m
2022/04/09 21:21:15 [92m                textDocument/hover 30: [93mread-locked[0m[0m
2022/04/09 21:21:15 [92m                textDocument/hover 30: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:21:15 [92m                textDocument/hover 30: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:16 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:16[0m
2022/04/09 21:21:15 [91mIDE     LS --> Clangd REQU textDocument/hover 31[0m
2022/04/09 21:21:15 [31mIDE     LS <-- Clangd RESP textDocument/hover 31[0m
2022/04/09 21:21:15 [92m                textDocument/hover 30: null response[0m
2022/04/09 21:21:15 [92m                textDocument/hover 30: [93mread-unlocked[0m[0m
2022/04/09 21:21:15 [32mIDE <-- LS RESP textDocument/hover 30[0m
2022/04/09 21:21:15 [92mIDE --> LS REQU textDocument/documentHighlight 31[0m
2022/04/09 21:21:15 [92m                textDocument/documentHighlight 31: [93mread-locked[0m[0m
2022/04/09 21:21:15 [92m                textDocument/documentHighlight 31: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:21:16 [92m                textDocument/documentHighlight 31: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:26 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:26[0m
2022/04/09 21:21:16 [91mIDE     LS --> Clangd REQU textDocument/documentHighlight 32[0m
2022/04/09 21:21:16 [31mIDE     LS <-- Clangd RESP textDocument/documentHighlight 32[0m
2022/04/09 21:21:16 [92m                textDocument/documentHighlight 31: [93mread-unlocked[0m[0m
2022/04/09 21:21:16 [32mIDE <-- LS RESP textDocument/documentHighlight 31[0m
2022/04/09 21:21:16 [92mIDE --> LS REQU textDocument/codeAction 32[0m
2022/04/09 21:21:16 [92m                textDocument/codeAction 32: [93mread-locked[0m[0m
2022/04/09 21:21:16 [92m                textDocument/codeAction 32: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:10)[0m
2022/04/09 21:21:16 [92m                textDocument/codeAction 32: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:21:16 [92m                textDocument/codeAction 32: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:21:16 [92m                textDocument/codeAction 32:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:1:10)[0m
2022/04/09 21:21:16 [91mIDE     LS --> Clangd REQU textDocument/codeAction 33[0m
2022/04/09 21:21:16 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 33[0m
2022/04/09 21:21:16 [92m                textDocument/codeAction 32: [93mread-unlocked[0m[0m
2022/04/09 21:21:16 [32mIDE <-- LS RESP textDocument/codeAction 32[0m
2022/04/09 21:21:16 [92mIDE --> LS REQU textDocument/definition 33[0m
2022/04/09 21:21:16 [92m                textDocument/definition 33: [93mread-locked[0m[0m
2022/04/09 21:21:16 [92m                textDocument/definition 33: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:21:16 [92m                textDocument/definition 33: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:17 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:17[0m
2022/04/09 21:21:16 [91mIDE     LS --> Clangd REQU textDocument/definition 34[0m
2022/04/09 21:21:16 [31mIDE     LS <-- Clangd RESP textDocument/definition 34[0m
2022/04/09 21:21:16 [92m                textDocument/definition 33: [93mread-unlocked[0m[0m
2022/04/09 21:21:16 [32mIDE <-- LS RESP textDocument/definition 33[0m
2022/04/09 21:21:17 [92mIDE --> LS REQU textDocument/definition 34[0m
2022/04/09 21:21:17 [92m                textDocument/definition 34: [93mread-locked[0m[0m
2022/04/09 21:21:17 [92m                textDocument/definition 34: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:21:17 [92m                textDocument/definition 34: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:44 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:12:44[0m
2022/04/09 21:21:17 [91mIDE     LS --> Clangd REQU textDocument/definition 35[0m
2022/04/09 21:21:17 [31mIDE     LS <-- Clangd RESP textDocument/definition 35[0m
2022/04/09 21:21:17 [92m                textDocument/definition 34: [93mread-unlocked[0m[0m
2022/04/09 21:21:17 [32mIDE <-- LS RESP textDocument/definition 34[0m
2022/04/09 21:21:37 [92mIDE --> LS REQU textDocument/definition 35[0m
2022/04/09 21:21:37 [92m                textDocument/definition 35: [93mread-locked[0m[0m
2022/04/09 21:21:37 [92m                textDocument/definition 35: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:21:37 [92m                textDocument/definition 35: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:23:74 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:25:74[0m
2022/04/09 21:21:37 [91mIDE     LS --> Clangd REQU textDocument/definition 36[0m
2022/04/09 21:21:37 [31mIDE     LS <-- Clangd RESP textDocument/definition 36[0m
2022/04/09 21:21:37 [92m                textDocument/definition 35: [93mread-unlocked[0m[0m
2022/04/09 21:21:37 [32mIDE <-- LS RESP textDocument/definition 35[0m
2022/04/09 21:21:42 [92mIDE --> LS REQU textDocument/hover 36[0m
2022/04/09 21:21:42 [92m                textDocument/hover 36: [93mread-locked[0m[0m
2022/04/09 21:21:42 [92m                textDocument/hover 36: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:21:42 [92m                textDocument/hover 36: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:12:44 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:14:44[0m
2022/04/09 21:21:42 [91mIDE     LS --> Clangd REQU textDocument/hover 37[0m
2022/04/09 21:21:42 [31mIDE     LS <-- Clangd RESP textDocument/hover 37[0m
2022/04/09 21:21:42 [92m                textDocument/hover 36: null response[0m
2022/04/09 21:21:42 [92m                textDocument/hover 36: [93mread-unlocked[0m[0m
2022/04/09 21:21:42 [32mIDE <-- LS RESP textDocument/hover 36[0m
2022/04/09 21:21:43 [92mIDE --> LS REQU textDocument/hover 37[0m
2022/04/09 21:21:43 [92m                textDocument/hover 37: [93mread-locked[0m[0m
2022/04/09 21:21:43 [92m                textDocument/hover 37: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:21:43 [92m                textDocument/hover 37: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:12:43 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:14:43[0m
2022/04/09 21:21:43 [91mIDE     LS --> Clangd REQU textDocument/hover 38[0m
2022/04/09 21:21:43 [31mIDE     LS <-- Clangd RESP textDocument/hover 38[0m
2022/04/09 21:21:43 [92m                textDocument/hover 37: null response[0m
2022/04/09 21:21:43 [92m                textDocument/hover 37: [93mread-unlocked[0m[0m
2022/04/09 21:21:43 [32mIDE <-- LS RESP textDocument/hover 37[0m
2022/04/09 21:21:49 [92mIDE --> LS REQU textDocument/hover 38[0m
2022/04/09 21:21:49 [92m                textDocument/hover 38: [93mread-locked[0m[0m
2022/04/09 21:21:49 [92m                textDocument/hover 38: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:21:49 [92m                textDocument/hover 38: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:3:6 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:5:6[0m
2022/04/09 21:21:49 [91mIDE     LS --> Clangd REQU textDocument/hover 39[0m
2022/04/09 21:21:49 [31mIDE     LS <-- Clangd RESP textDocument/hover 39[0m
2022/04/09 21:21:49 [92m                textDocument/hover 38: null response[0m
2022/04/09 21:21:49 [92m                textDocument/hover 38: [93mread-unlocked[0m[0m
2022/04/09 21:21:49 [32mIDE <-- LS RESP textDocument/hover 38[0m
2022/04/09 21:22:02 [92mIDE --> LS REQU textDocument/codeAction 39[0m
2022/04/09 21:22:02 [92m                textDocument/codeAction 39: [93mread-locked[0m[0m
2022/04/09 21:22:02 [92m                textDocument/codeAction 39: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:0)[0m
2022/04/09 21:22:02 [92m                textDocument/codeAction 39: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:22:02 [92m                textDocument/codeAction 39: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:22:02 [92m                textDocument/codeAction 39:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:1:0)[0m
2022/04/09 21:22:02 [91mIDE     LS --> Clangd REQU textDocument/codeAction 40[0m
2022/04/09 21:22:02 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 40[0m
2022/04/09 21:22:02 [92m                textDocument/codeAction 39: [93mread-unlocked[0m[0m
2022/04/09 21:22:02 [32mIDE <-- LS RESP textDocument/codeAction 39[0m
2022/04/09 21:22:03 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/09 21:22:03 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/09 21:22:03 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@2)[0m
2022/04/09 21:22:03 [92m                 textDocument/didChange:   > 1:0-2:0 (len=63) -> ""[0m
2022/04/09 21:22:03 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C

#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>



BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/09 21:22:03 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:22:03 Ino Range: 1:0-2:0 -> Cpp Range:3:0-4:0
2022/04/09 21:22:03   > Current sketchmapper content:
2022/04/09 21:22:03   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/09 21:22:03   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/09 21:22:03   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/09 21:22:03   3:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/09 21:22:03   4: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/09 21:22:03   5: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/09 21:22:03   6: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/09 21:22:03   7: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/09 21:22:03   8:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/09 21:22:03   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/09 21:22:03  10:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/09 21:22:03  11: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/09 21:22:03  12:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/09 21:22:03  13: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/09 21:22:03  14: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/09 21:22:03  15:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/09 21:22:03  16: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/09 21:22:03  17:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/09 21:22:03  18: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/09 21:22:03  19: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/09 21:22:03  20:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/09 21:22:03  21: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/09 21:22:03  22: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/09 21:22:03  23:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/09 21:22:03  24: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/09 21:22:03  25: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/09 21:22:03  26: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/09 21:22:03  27:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/09 21:22:03  28:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/09 21:22:03  29: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/09 21:22:03  30: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/09 21:22:03  31:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/09 21:22:03  32:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/09 21:22:03  33:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/09 21:22:03  34:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/09 21:22:03  35:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/09 21:22:03  36:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/09 21:22:03  37:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/09 21:22:03  38: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/09 21:22:03  39:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/09 21:22:03  40: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/09 21:22:03  41: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/09 21:22:03  42:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/09 21:22:03  43:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/09 21:22:03  44:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/09 21:22:03  45:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/09 21:22:03  46:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/09 21:22:03  47:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/09 21:22:03  48:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/09 21:22:03  49:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/09 21:22:03  50:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/09 21:22:03  51:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/09 21:22:03  52:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/09 21:22:03  53:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/09 21:22:03  54:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/09 21:22:03  55:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/09 21:22:03  56:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/09 21:22:03  57:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/09 21:22:03  58:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/09 21:22:03  59:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/09 21:22:03  60:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/09 21:22:03  61:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/09 21:22:03  62:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/09 21:22:03  63:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/09 21:22:03  64:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/09 21:22:03  65:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/09 21:22:03  66:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/09 21:22:03  67:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/09 21:22:03  68:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/09 21:22:03  69:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/09 21:22:03  70:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/09 21:22:03  71:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/09 21:22:03  72:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/09 21:22:03  73:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/09 21:22:03  74:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/09 21:22:03  75:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/09 21:22:03  76:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/09 21:22:03  77:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/09 21:22:03  78:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/09 21:22:03  79: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/09 21:22:03  80:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/09 21:22:03  81: #line 81 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/09 21:22:03  82: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/09 21:22:03  83: #line 123 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79
2022/04/09 21:22:03  84: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/09 21:22:03  85: #line 81 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121
2022/04/09 21:22:03  86: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/09 21:22:03  87:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/09 21:22:03  88:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/09 21:22:03  89:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/09 21:22:03  90:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/09 21:22:03  91:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/09 21:22:03  92:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/09 21:22:03  93:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/09 21:22:03  94:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/09 21:22:03  95:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/09 21:22:03  96:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/09 21:22:03  97:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/09 21:22:03  98:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/09 21:22:03  99:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/09 21:22:03 100:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/09 21:22:03 101:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/09 21:22:03 102:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/09 21:22:03 103:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/09 21:22:03 104:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/09 21:22:03 105:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/09 21:22:03 106:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/09 21:22:03 107:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/09 21:22:03 108:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/09 21:22:03 109:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/09 21:22:03 110:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/09 21:22:03 111:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/09 21:22:03 112:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/09 21:22:03 113:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/09 21:22:03 114:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/09 21:22:03 115:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/09 21:22:03 116:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/09 21:22:03 117:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/09 21:22:03 118:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/09 21:22:03 119:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/09 21:22:03 120:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/09 21:22:03 121:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/09 21:22:03 122:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/09 21:22:03 123:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/09 21:22:03 124:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/09 21:22:03 125:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/09 21:22:03 126: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/09 21:22:03 127:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/09 21:22:03 128: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/09 21:22:03 129:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/09 21:22:03 130:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/09 21:22:03 131:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/09 21:22:03 132:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/09 21:22:03 133:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/09 21:22:03 134:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/09 21:22:03 135:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/09 21:22:03 136:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/09 21:22:03 137:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/09 21:22:03 138:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/09 21:22:03 139:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/09 21:22:03 140:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/09 21:22:03 141:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/09 21:22:03 142:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/09 21:22:03 143:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/09 21:22:03 144:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/09 21:22:03 145:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/09 21:22:03 146:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/09 21:22:03 147:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/09 21:22:03 148:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/09 21:22:03 149:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/09 21:22:03 150:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/09 21:22:03 151:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/09 21:22:03 152: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/09 21:22:03 153:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/09 21:22:03 154:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/09 21:22:03 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/09 21:22:03 156:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/09 21:22:03 157:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/09 21:22:03 158:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/09 21:22:03 159:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/09 21:22:03 160:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/09 21:22:03 161:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/09 21:22:03 162:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/09 21:22:03 163: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/09 21:22:03 164:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/09 21:22:03 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/09 21:22:03 166:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:159                          
2022/04/09 21:22:03 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp@2)[0m
2022/04/09 21:22:03 [92m                 textDocument/didChange:             > 3:0-4:0 -> ""[0m
2022/04/09 21:22:03 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/09 21:22:03 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/09 21:22:03 [92mIDE --> LS REQU textDocument/documentSymbol 40[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: [93mread-locked[0m[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:22:03 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 41[0m
2022/04/09 21:22:03 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 41[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Variable 11:0-11:35[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:11:0-11:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:9:0-9:35 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:11:19-11:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:9:19-9:35 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Variable 14:0-14:14[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:14:0-14:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:12:0-12:14 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:14:8-14:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:12:8-12:14 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Variable 16:0-16:28[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:16:0-16:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:14:0-14:28 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:16:5-16:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:14:5-14:20 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Variable 18:0-18:17[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:18:0-18:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:16:0-16:17 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:18:10-18:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:16:10-16:13 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Variable 19:0-19:21[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:19:0-19:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:0-17:21 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:19:10-19:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:17:10-17:16 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Class 30:0-38:1[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:30:0-38:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:0-36:1 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:30:6-30:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:6-28:21 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Method 31:4-33:5[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:31:4-33:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:4-31:5 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:31:9-31:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:9-29:18 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Method 35:4-37:5[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:35:4-37:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:33:4-35:5 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:35:9-35:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:33:9-33:21 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Class 41:0-79:1[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:41:0-79:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:0-77:1 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:41:6-41:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:6-39:29 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Method 42:4-78:5[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:42:4-78:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:4-76:5 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:42:9-42:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:9-40:16 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Function 82:0-82:12[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:82:0-82:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:82:5-82:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Function 84:0-84:11[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:84:0-84:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:0-122:11 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:84:5-84:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:122:5-122:9 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Function 86:0-126:1[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:86:0-126:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:79:0-119:1 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:86:5-86:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:79:5-79:10 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40:   > convert SymbolKind:Function 128:0-163:1[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:128:0-163:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:121:0-156:1 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:128:5-128:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:121:5-121:9 (.ino)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:03 [92m                textDocument/documentSymbol 40: [93mread-unlocked[0m[0m
2022/04/09 21:22:03 [32mIDE <-- LS RESP textDocument/documentSymbol 40[0m
2022/04/09 21:22:03 [92mIDE --> LS NOTIF textDocument/didSave[0m
2022/04/09 21:22:03 [92m                 textDocument/didSave: [93mwrite-locked[0m[0m
2022/04/09 21:22:03 [92m                 textDocument/didSave: notification is not forwarded to clang[0m
2022/04/09 21:22:03 [92m                 textDocument/didSave: [93mwrite-unlocked[0m[0m
2022/04/09 21:22:04 [92mIDE --> LS NOTIF textDocument/didChange[0m
2022/04/09 21:22:04 [92m                 textDocument/didChange: [93mwrite-locked[0m[0m
2022/04/09 21:22:04 [92m                 textDocument/didChange: didChange(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino@3)[0m
2022/04/09 21:22:04 [92m                 textDocument/didChange:   > 1:0-2:0 (len=1) -> ""[0m
2022/04/09 21:22:04 [92m                 textDocument/didChange: -----Tracked SKETCH file-----
#include <Wire.h>                //Biblioteca para I2C
#include <BLEDevice.h>
#include <BLEServer.h>
#include <BLEUtils.h>
#include <BLE2902.h>



BLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client

//objeto responsável pela comunicação com o sensor de temperatura infravermelho
IRTherm sensor;

bool deviceConnected = false; //controle de dispositivo conectado

const int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.
const int BUZZER = 23; //pino d BUZZER

// See the following for generating UUIDs:
// https://www.uuidgenerator.net/

#define SERVICE_UUID           "ab0828b1-198e-4351-b779-901fa0e0371e" // UART service UUID
#define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b31405049c"
#define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F33D4DA91"


//callback para receber os eventos de conexão de dispositivos
class ServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
      deviceConnected = true;
    };

    void onDisconnect(BLEServer* pServer) {
      deviceConnected = false;
    }
};

//callback  para envendos das características
class CharacteristicCallbacks: public BLECharacteristicCallbacks {
    void onWrite(BLECharacteristic *characteristic) {
      //retorna ponteiro para o registrador contendo o valor atual da caracteristica
      std::string rxValue = characteristic->getValue(); 
      //verifica se existe dados (tamanho maior que zero)
      if (rxValue.length() > 0) {
        Serial.println("*********");
        Serial.print("Received Value: ");

        for (int i = 0; i < rxValue.length(); i++) {
          Serial.print(rxValue[i]);
        }

        Serial.println();

        // Do stuff based on the command received
        if (rxValue.find("L1") != -1) { 
          Serial.print("Turning LED ON!");
          digitalWrite(LED, HIGH);
        }
        else if (rxValue.find("L0") != -1) {
          Serial.print("Turning LED OFF!");
          digitalWrite(LED, LOW);
        }
        // Do stuff based on the command received from the app
        else if (rxValue.find("B1") != -1) { 
          Serial.print("Turning Buzzer ON!");
          digitalWrite(BUZZER, HIGH);
        }
        else if (rxValue.find("B0") != -1) {
          Serial.print("Turning Buzzer OFF!");
          digitalWrite(BUZZER, LOW);
        }

        Serial.println();
        Serial.println("*********");
      }
    }
};

void setup() {
  Serial.begin(115200);

  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);

  // Create the BLE Device
  BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluetooth
  // Create the BLE Server
  BLEServer *server = BLEDevice::createServer(); //cria um BLE server 
  server->setCallbacks(new ServerCallbacks()); //seta o callback do server
  // Create the BLE Service
  BLEService *service = server->createService(SERVICE_UUID);
  // Create a BLE Characteristic para envio de dados
  characteristicTX = service->createCharacteristic(
                      CHARACTERISTIC_UUID_TX,
                      BLECharacteristic::PROPERTY_NOTIFY
                    );
                      
  characteristicTX->addDescriptor(new BLE2902());

  // Create a BLE Characteristic para recebimento de dados
  BLECharacteristic *characteristic = service->createCharacteristic(
                                         CHARACTERISTIC_UUID_RX,
                                         BLECharacteristic::PROPERTY_WRITE
                                       );

  characteristic->setCallbacks(new CharacteristicCallbacks());
  // Start the service
  service->start();
  // Start advertising (descoberta do ESP32)
  server->getAdvertising()->start();

  //Inicializa sensor de temperatura infravermelho            
  sensor.begin();  
  //Seleciona temperatura em Celsius               
  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    
  
  Serial.println("Waiting a client connection to notify...");

}

void loop() {
     //se existe algum dispositivo conectado
    if (deviceConnected) {
      //chamamos o método "read" do sensor para realizar a leitura da temperatura
      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário 
      if (sensor.read())
      {
          //recupera a leitura da temperatura do ambiente
          float tempAmbiente = sensor.ambient();
          //recupera a leitura da temperatura do objeto apontado pelo sensor
          float tempObjeto   = sensor.object();
      
          // Let's convert the value to a char array:
          char txString[8]; // make sure this is big enuffz
          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer

          characteristicTX->setValue(txString); //seta o valor que a caracteristica notificará (enviar)       
          characteristicTX->notify(); // Envia o valor para o smartphone

          Serial.print("*** Sent Value: ");
          Serial.print(txString);
          Serial.println(" ***");
      }
  
/*
    delay(1000);



    characteristicTX2->setValue("Hello!"); // Sending a test message
    characteristicTX2->notify(); // Send the value to the app!*/

  }
  delay(1000);

}


-----------------------------[0m
2022/04/09 21:22:04 [92m                 textDocument/didChange: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:22:04 Ino Range: 1:0-2:0 -> Cpp Range:3:0-4:0
2022/04/09 21:22:04   > Current sketchmapper content:
2022/04/09 21:22:04   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/09 21:22:04   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/09 21:22:04   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/09 21:22:04   3: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/09 21:22:04   4: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/09 21:22:04   5: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/09 21:22:04   6: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/09 21:22:04   7:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/09 21:22:04   8:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/09 21:22:04   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/09 21:22:04  10: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/09 21:22:04  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/09 21:22:04  12: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/09 21:22:04  13: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/09 21:22:04  14:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/09 21:22:04  15: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/09 21:22:04  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/09 21:22:04  17: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/09 21:22:04  18: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/09 21:22:04  19:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/09 21:22:04  20: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/09 21:22:04  21: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/09 21:22:04  22:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/09 21:22:04  23: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/09 21:22:04  24: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/09 21:22:04  25: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/09 21:22:04  26:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/09 21:22:04  27:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/09 21:22:04  28: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/09 21:22:04  29: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/09 21:22:04  30:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/09 21:22:04  31:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/09 21:22:04  32:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/09 21:22:04  33:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/09 21:22:04  34:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/09 21:22:04  35:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/09 21:22:04  36:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/09 21:22:04  37: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/09 21:22:04  38:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/09 21:22:04  39: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/09 21:22:04  40: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/09 21:22:04  41:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/09 21:22:04  42:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/09 21:22:04  43:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/09 21:22:04  44:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/09 21:22:04  45:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/09 21:22:04  46:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/09 21:22:04  47:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/09 21:22:04  48:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/09 21:22:04  49:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/09 21:22:04  50:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/09 21:22:04  51:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/09 21:22:04  52:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/09 21:22:04  53:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/09 21:22:04  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/09 21:22:04  55:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/09 21:22:04  56:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/09 21:22:04  57:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/09 21:22:04  58:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/09 21:22:04  59:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/09 21:22:04  60:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/09 21:22:04  61:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/09 21:22:04  62:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/09 21:22:04  63:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/09 21:22:04  64:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/09 21:22:04  65:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/09 21:22:04  66:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/09 21:22:04  67:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/09 21:22:04  68:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/09 21:22:04  69:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/09 21:22:04  70:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/09 21:22:04  71:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/09 21:22:04  72:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/09 21:22:04  73:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/09 21:22:04  74:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/09 21:22:04  75:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/09 21:22:04  76:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/09 21:22:04  77:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/09 21:22:04  78: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/09 21:22:04  79:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/09 21:22:04  80: #line 81 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/09 21:22:04  81: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/09 21:22:04  82: #line 123 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/09 21:22:04  83: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78
2022/04/09 21:22:04  84: #line 81 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/09 21:22:04  85: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120
2022/04/09 21:22:04  86:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/09 21:22:04  87:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/09 21:22:04  88:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/09 21:22:04  89:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/09 21:22:04  90:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/09 21:22:04  91:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/09 21:22:04  92:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/09 21:22:04  93:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/09 21:22:04  94:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/09 21:22:04  95:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/09 21:22:04  96:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/09 21:22:04  97:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/09 21:22:04  98:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/09 21:22:04  99:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/09 21:22:04 100:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/09 21:22:04 101:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/09 21:22:04 102:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/09 21:22:04 103:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/09 21:22:04 104:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/09 21:22:04 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/09 21:22:04 106:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/09 21:22:04 107:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/09 21:22:04 108:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/09 21:22:04 109:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/09 21:22:04 110:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/09 21:22:04 111:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/09 21:22:04 112:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/09 21:22:04 113:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/09 21:22:04 114:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/09 21:22:04 115:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/09 21:22:04 116:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/09 21:22:04 117:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/09 21:22:04 118:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/09 21:22:04 119:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/09 21:22:04 120:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/09 21:22:04 121:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/09 21:22:04 122:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/09 21:22:04 123:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/09 21:22:04 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/09 21:22:04 125: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/09 21:22:04 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/09 21:22:04 127: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/09 21:22:04 128:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/09 21:22:04 129:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/09 21:22:04 130:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/09 21:22:04 131:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/09 21:22:04 132:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/09 21:22:04 133:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/09 21:22:04 134:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/09 21:22:04 135:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/09 21:22:04 136:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/09 21:22:04 137:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/09 21:22:04 138:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/09 21:22:04 139:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/09 21:22:04 140:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/09 21:22:04 141:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/09 21:22:04 142:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/09 21:22:04 143:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/09 21:22:04 144:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/09 21:22:04 145:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/09 21:22:04 146:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/09 21:22:04 147:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/09 21:22:04 148:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/09 21:22:04 149:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/09 21:22:04 150:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/09 21:22:04 151: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/09 21:22:04 152:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/09 21:22:04 153:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/09 21:22:04 154:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/09 21:22:04 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/09 21:22:04 156:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/09 21:22:04 157:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/09 21:22:04 158:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/09 21:22:04 159:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/09 21:22:04 160:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/09 21:22:04 161:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/09 21:22:04 162: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/09 21:22:04 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/09 21:22:04 164:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/09 21:22:04 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/09 21:22:04 [92m                 textDocument/didChange: to Clang: didChange(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp@3)[0m
2022/04/09 21:22:04 [92m                 textDocument/didChange:             > 3:0-4:0 -> ""[0m
2022/04/09 21:22:04 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/09 21:22:04 [92m                 textDocument/didChange: [93mwrite-unlocked[0m[0m
2022/04/09 21:22:04 [92mIDE --> LS REQU textDocument/documentSymbol 41[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: [93mread-locked[0m[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:22:04 [91mIDE     LS --> Clangd REQU textDocument/documentSymbol 42[0m
2022/04/09 21:22:04 [31mIDE     LS <-- Clangd RESP textDocument/documentSymbol 42[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (11 document symbols)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Variable 10:0-10:35[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:10:0-10:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:0-8:35 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:10:19-10:35 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:19-8:35 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Variable 13:0-13:14[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:13:0-13:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:11:0-11:14 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:13:8-13:14 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:11:8-11:14 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Variable 15:0-15:28[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:15:0-15:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:0-13:28 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:15:5-15:20 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:13:5-13:20 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Variable 17:0-17:17[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:17:0-17:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:0-15:17 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:17:10-17:13 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:15:10-15:13 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Variable 18:0-18:21[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:18:0-18:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:16:0-16:21 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:18:10-18:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:16:10-16:16 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Class 29:0-37:1[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:29:0-37:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:0-35:1 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:29:6-29:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:6-27:21 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (2 document symbols)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Method 30:4-32:5[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:30:4-32:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:4-30:5 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:30:9-30:18 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:9-28:18 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Method 34:4-36:5[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:34:4-36:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:32:4-34:5 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:34:9-34:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:32:9-32:21 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Class 40:0-78:1[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:40:0-78:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:0-76:1 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:40:6-40:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:6-38:29 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (1 document symbols)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Method 41:4-77:5[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:41:4-77:5 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:4-75:5 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:41:9-41:16 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:9-39:16 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Function 81:0-81:12[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:81:0-81:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:0-80:12 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:81:5-81:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:80:5-80:10 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Function 83:0-83:11[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range is in PREPROCESSED section of the sketch[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:83:0-83:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:78:0-78:11 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Function 85:0-125:1[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range is in PREPROCESSED section of the sketch[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:85:0-125:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:120:0-118:1 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:     symbol is in the preprocessed section of the sketch.ino.cpp, skipping[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41:   > convert SymbolKind:Function 127:0-162:1[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:127:0-162:1 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:120:0-155:1 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:127:5-127:9 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:120:5-120:9 (.ino)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (0 document symbols)[0m
2022/04/09 21:22:04 [92m                textDocument/documentSymbol 41: [93mread-unlocked[0m[0m
2022/04/09 21:22:04 [32mIDE <-- LS RESP textDocument/documentSymbol 41[0m
2022/04/09 21:22:04 [92mIDE --> LS NOTIF textDocument/didSave[0m
2022/04/09 21:22:04 [92m                 textDocument/didSave: [93mwrite-locked[0m[0m
2022/04/09 21:22:04 [92m                 textDocument/didSave: notification is not forwarded to clang[0m
2022/04/09 21:22:04 [92m                 textDocument/didSave: [93mwrite-unlocked[0m[0m
2022/04/09 21:22:05 [92mIDE --> LS REQU textDocument/hover 42[0m
2022/04/09 21:22:05 [92m                textDocument/hover 42: [93mread-locked[0m[0m
2022/04/09 21:22:05 [92m                textDocument/hover 42: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:22:05 [92m                textDocument/hover 42: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:11 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:10:11[0m
2022/04/09 21:22:05 [91mIDE     LS --> Clangd REQU textDocument/hover 43[0m
2022/04/09 21:22:05 [31mIDE     LS <-- Clangd RESP textDocument/hover 43[0m
2022/04/09 21:22:05 [92m                textDocument/hover 42: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:10:0-10:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:0-8:17 (.ino)[0m
2022/04/09 21:22:05 [92m                textDocument/hover 42: Hover content: "### variable `characteristicTX`  \n\n---\nType: `int *`  \natravés desse objeto iremos enviar dados para o client  \n\n---\n```cpp\npublic: int *characteristicTX\n```"[0m
2022/04/09 21:22:05 [92m                textDocument/hover 42: [93mread-unlocked[0m[0m
2022/04/09 21:22:05 [32mIDE <-- LS RESP textDocument/hover 42[0m
2022/04/09 21:22:05 [92mIDE --> LS REQU textDocument/codeAction 43[0m
2022/04/09 21:22:05 [92m                textDocument/codeAction 43: [93mread-locked[0m[0m
2022/04/09 21:22:05 [92m                textDocument/codeAction 43: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:10:0)[0m
2022/04/09 21:22:05 [92m                textDocument/codeAction 43: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:22:05 [92m                textDocument/codeAction 43: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:22:05 [92m                textDocument/codeAction 43:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:10:0)[0m
2022/04/09 21:22:05 [91mIDE     LS --> Clangd REQU textDocument/codeAction 44[0m
2022/04/09 21:22:05 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (25 diagnostics):[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 4:9 - Error: "pp_file_not_found"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 11:0 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 14:0 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 30:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 30:23 - Error: "incomplete_base_class"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 31:19 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 35:22 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 41:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 41:31 - Error: "incomplete_base_class"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 42:17 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 93:2 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 95:2 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 95:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 96:10 - Error: "no_member"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 98:2 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 98:32 - Error: "no_member"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 102:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 105:38 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 108:2 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 110:41 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 117:10 - Error: "no_member"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   > 122:17 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:4:9-4:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:2:9-2:22 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:11:0-11:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:9:0-9:17 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:14:0-14:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:12:0-12:7 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:30:30-30:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:30-28:48 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:30:6-30:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:6-28:21 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:30:23-30:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:23-28:48 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:30:6-30:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:6-28:21 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:31:19-31:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:29:19-29:28 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:35:22-35:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:33:22-33:31 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:41:38-41:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:38-39:64 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:41:6-41:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:6-39:29 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:41:31-41:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:31-39:64 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:41:6-41:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:6-39:29 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:42:17-42:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:40:17-40:34 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:93:2-93:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:86:2-86:11 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:95:2-95:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:88:2-88:11 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:95:22-95:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:88:22-88:31 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:96:10-96:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:89:10-89:22 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:98:2-98:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:91:2-91:12 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:98:32-98:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:91:32-91:45 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:102:22-102:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:95:22-95:39 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:105:38-105:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:98:38-98:45 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:108:2-108:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:101:2-101:19 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:110:41-110:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:103:41-103:58 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:117:10-117:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:110:10-110:24 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:122:17-122:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:115:17-115:23 (.ino)[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (22 diagnostics):[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 2:9 - Error: "pp_file_not_found"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 9:0 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 12:0 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 28:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 28:23 - Error: "incomplete_base_class"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 29:19 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 33:22 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 39:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 39:31 - Error: "incomplete_base_class"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 40:17 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 86:2 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 88:2 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 88:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 89:10 - Error: "no_member"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 91:2 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 91:32 - Error: "no_member"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 95:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 98:38 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 101:2 - Error: "unknown_typename"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 103:41 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 110:10 - Error: "no_member"[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics:     > 115:17 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:05 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:22:05 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/09 21:22:05 [95mSKETCH REBUILD: : Sketch rebuild started[0m
2022/04/09 21:22:05 [95mSKETCH REBUILD: : [93mread-locked[0m[0m
2022/04/09 21:22:05 [95mSKETCH REBUILD: : [93mread-unlocked[0m[0m
2022/04/09 21:22:05 [92mIDE <-- LS REQU window/workDoneProgress/create 2[0m
2022/04/09 21:22:05 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 44[0m
2022/04/09 21:22:05 [92m                textDocument/codeAction 43: [93mread-unlocked[0m[0m
2022/04/09 21:22:05 [32mIDE <-- LS RESP textDocument/codeAction 43[0m
2022/04/09 21:22:05 [32mIDE --> LS RESP window/workDoneProgress/create 2[0m
2022/04/09 21:22:05 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:05 [92mIDE --> LS REQU textDocument/hover 44[0m
2022/04/09 21:22:05 [92m                textDocument/hover 44: [93mread-locked[0m[0m
2022/04/09 21:22:05 [92m                textDocument/hover 44: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:22:05 [92m                textDocument/hover 44: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:11 -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:10:11[0m
2022/04/09 21:22:05 [91mIDE     LS --> Clangd REQU textDocument/hover 45[0m
2022/04/09 21:22:05 [31mIDE     LS <-- Clangd RESP textDocument/hover 45[0m
2022/04/09 21:22:05 [92m                textDocument/hover 44: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:10:0-10:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:0-8:17 (.ino)[0m
2022/04/09 21:22:05 [92m                textDocument/hover 44: Hover content: "### variable `characteristicTX`  \n\n---\nType: `int *`  \natravés desse objeto iremos enviar dados para o client  \n\n---\n```cpp\npublic: int *characteristicTX\n```"[0m
2022/04/09 21:22:05 [92m                textDocument/hover 44: [93mread-unlocked[0m[0m
2022/04/09 21:22:05 [32mIDE <-- LS RESP textDocument/hover 44[0m
2022/04/09 21:22:05 [95mSKETCH REBUILD: : Running build with: {
  "instance": {
    "id": 1
  },
  "fqbn": "esp32:esp32:esp32",
  "sketch_path": "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE",
  "build_path": "C:\\Users\\Usuario\\AppData\\Local\\Temp\\arduino-language-server098174558",
  "verbose": true,
  "create_compilation_database_only": true,
  "source_override": {
    "ESP32codeBLE.ino": "#include \u003cWire.h\u003e                //Biblioteca para I2C\n#include \u003cBLEDevice.h\u003e\n#include \u003cBLEServer.h\u003e\n#include \u003cBLEUtils.h\u003e\n#include \u003cBLE2902.h\u003e\n\n\n\nBLECharacteristic *characteristicTX; //através desse objeto iremos enviar dados para o client\n\n//objeto responsável pela comunicação com o sensor de temperatura infravermelho\nIRTherm sensor;\n\nbool deviceConnected = false; //controle de dispositivo conectado\n\nconst int LED = 2; //LED interno do ESP32 (esse pino pode variar de placa para placa) // Could be different depending on the dev board. I used the DOIT ESP32 dev board.\nconst int BUZZER = 23; //pino d BUZZER\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID           \"ab0828b1-198e-4351-b779-901fa0e0371e\" // UART service UUID\n#define CHARACTERISTIC_UUID_RX \"4ac8a682-9736-4e5d-932b-e9b31405049c\"\n#define CHARACTERISTIC_UUID_TX \"0972EF8C-7613-4075-AD52-756F33D4DA91\"\n\n\n//callback para receber os eventos de conexão de dispositivos\nclass ServerCallbacks: public BLEServerCallbacks {\n    void onConnect(BLEServer* pServer) {\n      deviceConnected = true;\n    };\n\n    void onDisconnect(BLEServer* pServer) {\n      deviceConnected = false;\n    }\n};\n\n//callback  para envendos das características\nclass CharacteristicCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *characteristic) {\n      //retorna ponteiro para o registrador contendo o valor atual da caracteristica\n      std::string rxValue = characteristic-\u003egetValue(); \n      //verifica se existe dados (tamanho maior que zero)\n      if (rxValue.length() \u003e 0) {\n        Serial.println(\"*********\");\n        Serial.print(\"Received Value: \");\n\n        for (int i = 0; i \u003c rxValue.length(); i++) {\n          Serial.print(rxValue[i]);\n        }\n\n        Serial.println();\n\n        // Do stuff based on the command received\n        if (rxValue.find(\"L1\") != -1) { \n          Serial.print(\"Turning LED ON!\");\n          digitalWrite(LED, HIGH);\n        }\n        else if (rxValue.find(\"L0\") != -1) {\n          Serial.print(\"Turning LED OFF!\");\n          digitalWrite(LED, LOW);\n        }\n        // Do stuff based on the command received from the app\n        else if (rxValue.find(\"B1\") != -1) { \n          Serial.print(\"Turning Buzzer ON!\");\n          digitalWrite(BUZZER, HIGH);\n        }\n        else if (rxValue.find(\"B0\") != -1) {\n          Serial.print(\"Turning Buzzer OFF!\");\n          digitalWrite(BUZZER, LOW);\n        }\n\n        Serial.println();\n        Serial.println(\"*********\");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  pinMode(LED, OUTPUT);\n  pinMode(BUZZER, OUTPUT);\n\n  // Create the BLE Device\n  BLEDevice::init(\"ESP32-BLE\"); // nome do dispositivo bluetooth\n  // Create the BLE Server\n  BLEServer *server = BLEDevice::createServer(); //cria um BLE server \n  server-\u003esetCallbacks(new ServerCallbacks()); //seta o callback do server\n  // Create the BLE Service\n  BLEService *service = server-\u003ecreateService(SERVICE_UUID);\n  // Create a BLE Characteristic para envio de dados\n  characteristicTX = service-\u003ecreateCharacteristic(\n                      CHARACTERISTIC_UUID_TX,\n                      BLECharacteristic::PROPERTY_NOTIFY\n                    );\n                      \n  characteristicTX-\u003eaddDescriptor(new BLE2902());\n\n  // Create a BLE Characteristic para recebimento de dados\n  BLECharacteristic *characteristic = service-\u003ecreateCharacteristic(\n                                         CHARACTERISTIC_UUID_RX,\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  characteristic-\u003esetCallbacks(new CharacteristicCallbacks());\n  // Start the service\n  service-\u003estart();\n  // Start advertising (descoberta do ESP32)\n  server-\u003egetAdvertising()-\u003estart();\n\n  //Inicializa sensor de temperatura infravermelho            \n  sensor.begin();  \n  //Seleciona temperatura em Celsius               \n  sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F para Fahrenheit ou TEMP_K para Kelvin    \n  \n  Serial.println(\"Waiting a client connection to notify...\");\n\n}\n\nvoid loop() {\n     //se existe algum dispositivo conectado\n    if (deviceConnected) {\n      //chamamos o método \"read\" do sensor para realizar a leitura da temperatura\n      //read retornará 1 caso consiga realizar a leitura, ou 0 caso contrário \n      if (sensor.read())\n      {\n          //recupera a leitura da temperatura do ambiente\n          float tempAmbiente = sensor.ambient();\n          //recupera a leitura da temperatura do objeto apontado pelo sensor\n          float tempObjeto   = sensor.object();\n      \n          // Let's convert the value to a char array:\n          char txString[8]; // make sure this is big enuffz\n          dtostrf(tempAmbiente, 1, 2, txString); // float_val, min_width, digits_after_decimal, char_buffer\n\n          characteristicTX-\u003esetValue(txString); //seta o valor que a caracteristica notificará (enviar)       \n          characteristicTX-\u003enotify(); // Envia o valor para o smartphone\n\n          Serial.print(\"*** Sent Value: \");\n          Serial.print(txString);\n          Serial.println(\" ***\");\n      }\n  \n/*\n    delay(1000);\n\n\n\n    characteristicTX2-\u003esetValue(\"Hello!\"); // Sending a test message\n    characteristicTX2-\u003enotify(); // Send the value to the app!*/\n\n  }\n  delay(1000);\n\n}\n\n"
  }
}[0m
2022/04/09 21:22:05 [92mIDE --> LS REQU textDocument/codeAction 45[0m
2022/04/09 21:22:05 [92m                textDocument/codeAction 45: [93mread-locked[0m[0m
2022/04/09 21:22:05 [92m                textDocument/codeAction 45: --> codeAction(file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:0)[0m
2022/04/09 21:22:05 [92m                textDocument/codeAction 45: URI: file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino -> file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp[0m
2022/04/09 21:22:05 [92m                textDocument/codeAction 45:     --> codeAction(file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:1:0)[0m
2022/04/09 21:22:05 [91mIDE     LS --> Clangd REQU textDocument/codeAction 46[0m
2022/04/09 21:22:05 [31mIDE     LS <-- Clangd RESP textDocument/codeAction 46[0m
2022/04/09 21:22:05 [92m                textDocument/codeAction 45: [93mread-unlocked[0m[0m
2022/04/09 21:22:05 [32mIDE <-- LS RESP textDocument/codeAction 45[0m
2022/04/09 21:22:07 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (25 diagnostics):[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "pp_file_not_found"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 10:0 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 13:0 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 29:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 29:23 - Error: "incomplete_base_class"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 30:19 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 34:22 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 40:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 40:31 - Error: "incomplete_base_class"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 41:17 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 92:2 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 94:2 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 94:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 95:10 - Error: "no_member"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 97:2 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 97:32 - Error: "no_member"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 101:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 104:38 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 107:2 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 109:41 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 116:10 - Error: "no_member"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   > 121:17 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:9-3:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:22 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:10:0-10:17 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:8:0-8:17 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:13:0-13:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:11:0-11:7 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:29:30-29:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:30-27:48 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:29:6-29:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:6-27:21 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:29:23-29:48 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:23-27:48 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:29:6-29:21 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:27:6-27:21 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:30:19-30:28 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:28:19-28:28 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:34:22-34:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:32:22-32:31 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:40:38-40:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:38-38:64 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:40:6-40:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:6-38:29 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:40:31-40:64 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:31-38:64 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:40:6-40:29 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:38:6-38:29 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:41:17-41:34 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:39:17-39:34 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:92:2-92:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:85:2-85:11 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:94:2-94:11 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:2-87:11 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/cores/esp32/Server.h:24:6-24:12 (ext file)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:94:22-94:31 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:87:22-87:31 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:95:10-95:22 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:88:10-88:22 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:97:2-97:12 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:2-90:12 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:97:32-97:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:90:32-90:45 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:101:22-101:39 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:94:22-94:39 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:104:38-104:45 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:97:38-97:45 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:107:2-107:19 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:100:2-100:19 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:109:41-109:58 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:102:41-102:58 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:116:10-116:24 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:109:10-109:24 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:121:17-121:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:114:17-114:23 (.ino)[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (22 diagnostics):[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "pp_file_not_found"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 8:0 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 11:0 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 27:30 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 27:23 - Error: "incomplete_base_class"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 28:19 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 32:22 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 38:38 - Error: "unknown_type_or_class_name_suggest"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 38:31 - Error: "incomplete_base_class"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 39:17 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 85:2 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 87:2 - Error: "unknown_typename_suggest"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 87:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 88:10 - Error: "no_member"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 90:2 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 90:32 - Error: "no_member"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 94:22 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 97:38 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 100:2 - Error: "unknown_typename"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 102:41 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 109:10 - Error: "no_member"[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics:     > 114:17 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:07 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:22:07 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/09 21:22:42 [95mSKETCH REBUILD: : Compile successful![0m
2022/04/09 21:22:43 [95mSKETCH REBUILD: : [93mwrite-locked[0m[0m
2022/04/09 21:22:43   > Current sketchmapper content:
2022/04/09 21:22:43   0: #include <Arduino.h>                                         | /not-ino:0                                         
2022/04/09 21:22:43   1: #line 1 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeBL | /not-ino:0                                         
2022/04/09 21:22:43   2: #include <Wire.h>                //Biblioteca para I2C       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:0                          
2022/04/09 21:22:43   3: #include <BLEDevice.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:1                          
2022/04/09 21:22:43   4: #include <BLEServer.h>                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:2                          
2022/04/09 21:22:43   5: #include <BLEUtils.h>                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:3                          
2022/04/09 21:22:43   6: #include <BLE2902.h>                                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:4                          
2022/04/09 21:22:43   7:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:5                          
2022/04/09 21:22:43   8:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:6                          
2022/04/09 21:22:43   9:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:7                          
2022/04/09 21:22:43  10: BLECharacteristic *characteristicTX; //através desse objeto  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:8                          
2022/04/09 21:22:43  11:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:9                          
2022/04/09 21:22:43  12: //objeto responsável pela comunicação com o sensor de tem    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:10                          
2022/04/09 21:22:43  13: IRTherm sensor;                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:11                          
2022/04/09 21:22:43  14:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:12                          
2022/04/09 21:22:43  15: bool deviceConnected = false; //controle de dispositivo cone | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:13                          
2022/04/09 21:22:43  16:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:14                          
2022/04/09 21:22:43  17: const int LED = 2; //LED interno do ESP32 (esse pino pode va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:15                          
2022/04/09 21:22:43  18: const int BUZZER = 23; //pino d BUZZER                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:16                          
2022/04/09 21:22:43  19:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:17                          
2022/04/09 21:22:43  20: // See the following for generating UUIDs:                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:18                          
2022/04/09 21:22:43  21: // https://www.uuidgenerator.net/                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:19                          
2022/04/09 21:22:43  22:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:20                          
2022/04/09 21:22:43  23: #define SERVICE_UUID           "ab0828b1-198e-4351-b779-901f | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:21                          
2022/04/09 21:22:43  24: #define CHARACTERISTIC_UUID_RX "4ac8a682-9736-4e5d-932b-e9b3 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:22                          
2022/04/09 21:22:43  25: #define CHARACTERISTIC_UUID_TX "0972EF8C-7613-4075-AD52-756F | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:23                          
2022/04/09 21:22:43  26:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:24                          
2022/04/09 21:22:43  27:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:25                          
2022/04/09 21:22:43  28: //callback para receber os eventos de conexão de dispositiv  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:26                          
2022/04/09 21:22:43  29: class ServerCallbacks: public BLEServerCallbacks {           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:27                          
2022/04/09 21:22:43  30:     void onConnect(BLEServer* pServer) {                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:28                          
2022/04/09 21:22:43  31:       deviceConnected = true;                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:29                          
2022/04/09 21:22:43  32:     };                                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:30                          
2022/04/09 21:22:43  33:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:31                          
2022/04/09 21:22:43  34:     void onDisconnect(BLEServer* pServer) {                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:32                          
2022/04/09 21:22:43  35:       deviceConnected = false;                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:33                          
2022/04/09 21:22:43  36:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:34                          
2022/04/09 21:22:43  37: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:35                          
2022/04/09 21:22:43  38:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:36                          
2022/04/09 21:22:43  39: //callback  para envendos das características                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:37                          
2022/04/09 21:22:43  40: class CharacteristicCallbacks: public BLECharacteristicCallb | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:38                          
2022/04/09 21:22:43  41:     void onWrite(BLECharacteristic *characteristic) {        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:39                          
2022/04/09 21:22:43  42:       //retorna ponteiro para o registrador contendo o valor | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:40                          
2022/04/09 21:22:43  43:       std::string rxValue = characteristic->getValue();      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:41                          
2022/04/09 21:22:43  44:       //verifica se existe dados (tamanho maior que zero)    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:42                          
2022/04/09 21:22:43  45:       if (rxValue.length() > 0) {                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:43                          
2022/04/09 21:22:43  46:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:44                          
2022/04/09 21:22:43  47:         Serial.print("Received Value: ");                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:45                          
2022/04/09 21:22:43  48:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:46                          
2022/04/09 21:22:43  49:         for (int i = 0; i < rxValue.length(); i++) {         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:47                          
2022/04/09 21:22:43  50:           Serial.print(rxValue[i]);                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:48                          
2022/04/09 21:22:43  51:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:49                          
2022/04/09 21:22:43  52:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:50                          
2022/04/09 21:22:43  53:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:51                          
2022/04/09 21:22:43  54:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:52                          
2022/04/09 21:22:43  55:         // Do stuff based on the command received            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:53                          
2022/04/09 21:22:43  56:         if (rxValue.find("L1") != -1) {                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:54                          
2022/04/09 21:22:43  57:           Serial.print("Turning LED ON!");                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:55                          
2022/04/09 21:22:43  58:           digitalWrite(LED, HIGH);                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:56                          
2022/04/09 21:22:43  59:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:57                          
2022/04/09 21:22:43  60:         else if (rxValue.find("L0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:58                          
2022/04/09 21:22:43  61:           Serial.print("Turning LED OFF!");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:59                          
2022/04/09 21:22:43  62:           digitalWrite(LED, LOW);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:60                          
2022/04/09 21:22:43  63:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:61                          
2022/04/09 21:22:43  64:         // Do stuff based on the command received from the a | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:62                          
2022/04/09 21:22:43  65:         else if (rxValue.find("B1") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:63                          
2022/04/09 21:22:43  66:           Serial.print("Turning Buzzer ON!");                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:64                          
2022/04/09 21:22:43  67:           digitalWrite(BUZZER, HIGH);                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:65                          
2022/04/09 21:22:43  68:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:66                          
2022/04/09 21:22:43  69:         else if (rxValue.find("B0") != -1) {                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:67                          
2022/04/09 21:22:43  70:           Serial.print("Turning Buzzer OFF!");               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:68                          
2022/04/09 21:22:43  71:           digitalWrite(BUZZER, LOW);                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:69                          
2022/04/09 21:22:43  72:         }                                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:70                          
2022/04/09 21:22:43  73:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:71                          
2022/04/09 21:22:43  74:         Serial.println();                                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:72                          
2022/04/09 21:22:43  75:         Serial.println("*********");                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:73                          
2022/04/09 21:22:43  76:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:74                          
2022/04/09 21:22:43  77:     }                                                        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:75                          
2022/04/09 21:22:43  78: };                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:76                          
2022/04/09 21:22:43  79:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:77                          
2022/04/09 21:22:43  80: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/09 21:22:43  81: void setup();                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78
2022/04/09 21:22:43  82: #line 121 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32code | /not-ino:0                                         
2022/04/09 21:22:43  83: void loop();                                                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120 C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120
2022/04/09 21:22:43  84: #line 79 "C:\\git\\MyPrograms\\ioT\\ESP32codeBLE\\ESP32codeB | /not-ino:0                                         
2022/04/09 21:22:43  85: void setup() {                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:78                          
2022/04/09 21:22:43  86:   Serial.begin(115200);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:79                          
2022/04/09 21:22:43  87:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:80                          
2022/04/09 21:22:43  88:   pinMode(LED, OUTPUT);                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:81                          
2022/04/09 21:22:43  89:   pinMode(BUZZER, OUTPUT);                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:82                          
2022/04/09 21:22:43  90:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:83                          
2022/04/09 21:22:43  91:   // Create the BLE Device                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:84                          
2022/04/09 21:22:43  92:   BLEDevice::init("ESP32-BLE"); // nome do dispositivo bluet | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:85                          
2022/04/09 21:22:43  93:   // Create the BLE Server                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:86                          
2022/04/09 21:22:43  94:   BLEServer *server = BLEDevice::createServer(); //cria um B | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:87                          
2022/04/09 21:22:43  95:   server->setCallbacks(new ServerCallbacks()); //seta o call | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:88                          
2022/04/09 21:22:43  96:   // Create the BLE Service                                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:89                          
2022/04/09 21:22:43  97:   BLEService *service = server->createService(SERVICE_UUID); | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:90                          
2022/04/09 21:22:43  98:   // Create a BLE Characteristic para envio de dados         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:91                          
2022/04/09 21:22:43  99:   characteristicTX = service->createCharacteristic(          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:92                          
2022/04/09 21:22:43 100:                       CHARACTERISTIC_UUID_TX,                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:93                          
2022/04/09 21:22:43 101:                       BLECharacteristic::PROPERTY_NOTIFY     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:94                          
2022/04/09 21:22:43 102:                     );                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:95                          
2022/04/09 21:22:43 103:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:96                          
2022/04/09 21:22:43 104:   characteristicTX->addDescriptor(new BLE2902());            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:97                          
2022/04/09 21:22:43 105:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:98                          
2022/04/09 21:22:43 106:   // Create a BLE Characteristic para recebimento de dados   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:99                          
2022/04/09 21:22:43 107:   BLECharacteristic *characteristic = service->createCharact | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:100                          
2022/04/09 21:22:43 108:                                          CHARACTERISTIC_UUID | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:101                          
2022/04/09 21:22:43 109:                                          BLECharacteristic:: | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:102                          
2022/04/09 21:22:43 110:                                        );                    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:103                          
2022/04/09 21:22:43 111:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:104                          
2022/04/09 21:22:43 112:   characteristic->setCallbacks(new CharacteristicCallbacks() | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:105                          
2022/04/09 21:22:43 113:   // Start the service                                       | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:106                          
2022/04/09 21:22:43 114:   service->start();                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:107                          
2022/04/09 21:22:43 115:   // Start advertising (descoberta do ESP32)                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:108                          
2022/04/09 21:22:43 116:   server->getAdvertising()->start();                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:109                          
2022/04/09 21:22:43 117:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:110                          
2022/04/09 21:22:43 118:   //Inicializa sensor de temperatura infravermelho           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:111                          
2022/04/09 21:22:43 119:   sensor.begin();                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:112                          
2022/04/09 21:22:43 120:   //Seleciona temperatura em Celsius                         | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:113                          
2022/04/09 21:22:43 121:   sensor.setUnit(TEMP_C);//podemos ainda utilizar TEMP_F par | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:114                          
2022/04/09 21:22:43 122:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:115                          
2022/04/09 21:22:43 123:   Serial.println("Waiting a client connection to notify...") | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:116                          
2022/04/09 21:22:43 124:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:117                          
2022/04/09 21:22:43 125: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:118                          
2022/04/09 21:22:43 126:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:119                          
2022/04/09 21:22:43 127: void loop() {                                                | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:120                          
2022/04/09 21:22:43 128:      //se existe algum dispositivo conectado                 | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:121                          
2022/04/09 21:22:43 129:     if (deviceConnected) {                                   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:122                          
2022/04/09 21:22:43 130:       //chamamos o método "read" do sensor para realizar a   | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:123                          
2022/04/09 21:22:43 131:       //read retornará 1 caso consiga realizar a leitura, o  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:124                          
2022/04/09 21:22:43 132:       if (sensor.read())                                     | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:125                          
2022/04/09 21:22:43 133:       {                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:126                          
2022/04/09 21:22:43 134:           //recupera a leitura da temperatura do ambiente    | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:127                          
2022/04/09 21:22:43 135:           float tempAmbiente = sensor.ambient();             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:128                          
2022/04/09 21:22:43 136:           //recupera a leitura da temperatura do objeto apon | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:129                          
2022/04/09 21:22:43 137:           float tempObjeto   = sensor.object();              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:130                          
2022/04/09 21:22:43 138:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:131                          
2022/04/09 21:22:43 139:           // Let's convert the value to a char array:        | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:132                          
2022/04/09 21:22:43 140:           char txString[8]; // make sure this is big enuffz  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:133                          
2022/04/09 21:22:43 141:           dtostrf(tempAmbiente, 1, 2, txString); // float_va | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:134                          
2022/04/09 21:22:43 142:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:135                          
2022/04/09 21:22:43 143:           characteristicTX->setValue(txString); //seta o val | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:136                          
2022/04/09 21:22:43 144:           characteristicTX->notify(); // Envia o valor para  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:137                          
2022/04/09 21:22:43 145:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:138                          
2022/04/09 21:22:43 146:           Serial.print("*** Sent Value: ");                  | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:139                          
2022/04/09 21:22:43 147:           Serial.print(txString);                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:140                          
2022/04/09 21:22:43 148:           Serial.println(" ***");                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:141                          
2022/04/09 21:22:43 149:       }                                                      | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:142                          
2022/04/09 21:22:43 150:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:143                          
2022/04/09 21:22:43 151: /*                                                           | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:144                          
2022/04/09 21:22:43 152:     delay(1000);                                             | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:145                          
2022/04/09 21:22:43 153:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:146                          
2022/04/09 21:22:43 154:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:147                          
2022/04/09 21:22:43 155:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:148                          
2022/04/09 21:22:43 156:     characteristicTX2->setValue("Hello!"); // Sending a test | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:149                          
2022/04/09 21:22:43 157:     characteristicTX2->notify(); // Send the value to the ap | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:150                          
2022/04/09 21:22:43 158:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:151                          
2022/04/09 21:22:43 159:   }                                                          | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:152                          
2022/04/09 21:22:43 160:   delay(1000);                                               | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:153                          
2022/04/09 21:22:43 161:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:154                          
2022/04/09 21:22:43 162: }                                                            | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:155                          
2022/04/09 21:22:43 163:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:156                          
2022/04/09 21:22:43 164:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:157                          
2022/04/09 21:22:43 165:                                                              | C:\git\MyPrograms\ioT\ESP32codeBLE\ESP32codeBLE.ino:158                          
2022/04/09 21:22:43 [95mSKETCH REBUILD: : Sending 'didSave' notification to Clangd[0m
2022/04/09 21:22:43 [91mIDE     LS --> Clangd NOTIF textDocument/didSave[0m
2022/04/09 21:22:43 [95mSKETCH REBUILD: : Sending full-text 'didChange' notification to Clangd[0m
2022/04/09 21:22:43 [91mIDE     LS --> Clangd NOTIF textDocument/didChange[0m
2022/04/09 21:22:43 [95mSKETCH REBUILD: : [93mwrite-unlocked[0m[0m
2022/04/09 21:22:43 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:43 [91mIDE     LS <-- Clangd REQU window/workDoneProgress/create 1[0m
2022/04/09 21:22:43 [31mIDE     LS --> Clangd RESP window/workDoneProgress/create 1[0m
2022/04/09 21:22:43 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:43 [91m                            $/progress: backgroundIndexProgress BEGIN indexing, 0.0%[0m
2022/04/09 21:22:43 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:43 [91m                            $/progress: backgroundIndexProgress REPORT, 0/1, 0.0%[0m
2022/04/09 21:22:43 [92mIDE <-- LS REQU window/workDoneProgress/create 3[0m
2022/04/09 21:22:43 [32mIDE --> LS RESP window/workDoneProgress/create 3[0m
2022/04/09 21:22:43 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:43 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:44 [91m                            $/progress: backgroundIndexProgress REPORT, 0/30, 0.0%[0m
2022/04/09 21:22:44 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:44 [91m                            $/progress: backgroundIndexProgress REPORT, 0/30, 0.0%[0m
2022/04/09 21:22:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:44 [91m                            $/progress: backgroundIndexProgress REPORT, 0/30, 0.0%[0m
2022/04/09 21:22:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:44 [91m                            $/progress: backgroundIndexProgress REPORT, 0/30, 0.0%[0m
2022/04/09 21:22:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:44 [91m                            $/progress: backgroundIndexProgress REPORT, 1/30, 3.0%[0m
2022/04/09 21:22:44 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:44 [91m                            $/progress: backgroundIndexProgress REPORT, 1/30, 3.0%[0m
2022/04/09 21:22:44 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:46 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:46 [91m                            $/progress: backgroundIndexProgress REPORT, 2/30, 6.0%[0m
2022/04/09 21:22:46 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:46 [91m                            $/progress: backgroundIndexProgress REPORT, 2/30, 6.0%[0m
2022/04/09 21:22:46 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:47 [91mIDE     LS <-- Clangd NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: [93mread-locked[0m[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp (7 diagnostics):[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument"[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:   > 0:0 - Error: "drv_unknown_argument_with_suggestion"[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:   > 0:9 - Error: "unknown_typename"[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:   > 3:9 - Error: "unknown_typename"[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:   > 13:0 - Error: "unknown_typename"[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:   > 104:34 - Error: "init_conversion_failed"[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:   > 121:17 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:0:0-0:0 -> file:///not-ino:0:0-0:0 (.ino)[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:0:9-0:10 -> file:///not-ino:0:9-0:10 (.ino)[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/tools/sdk/include/newlib/sys/reent.h:194:35-194:40 (ext file)[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:3:9-3:10 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:1:9-1:10 (.ino)[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/libraries/BLE/src/FreeRTOS.h:47:2-47:17 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/libraries/BLE/src/FreeRTOS.h:47:2-47:17 (ext file)[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:13:0-13:7 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:11:0-11:7 (.ino)[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:104:34-104:47 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:97:34-97:47 (.ino)[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/libraries/BLE/src/BLECharacteristic.h:58:45-58:56 -> file:///C:/Users/Usuario/AppData/Local/Arduino15/packages/esp32/hardware/esp32/1.0.6/libraries/BLE/src/BLECharacteristic.h:58:45-58:56 (ext file)[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: Range: file:///C:/Users/Usuario/AppData/Local/Temp/arduino-language-server098174558/sketch/ESP32codeBLE.ino.cpp:121:17-121:23 -> file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino:114:17-114:23 (.ino)[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument"[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: filtered out diagnostic with error-code: "drv_unknown_argument_with_suggestion"[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: diagnostics to IDE:[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:   - file:///not-ino (1 diagnostics):[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:     > 0:9 - Error: "unknown_typename"[0m
2022/04/09 21:22:47 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:   - file:///c%3A/git/MyPrograms/ioT/ESP32codeBLE/ESP32codeBLE.ino (4 diagnostics):[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:     > 1:9 - Error: "unknown_typename"[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:     > 11:0 - Error: "unknown_typename"[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:     > 97:34 - Error: "init_conversion_failed"[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics:     > 114:17 - Error: "undeclared_var_use"[0m
2022/04/09 21:22:47 [92mIDE <-- LS NOTIF textDocument/publishDiagnostics[0m
2022/04/09 21:22:47 [91m                            textDocument/publishDiagnostics: [93mread-unlocked[0m[0m
2022/04/09 21:22:51 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:51 [91m                            $/progress: backgroundIndexProgress REPORT, 3/30, 10.0%[0m
2022/04/09 21:22:51 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:51 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:51 [91m                            $/progress: backgroundIndexProgress REPORT, 3/30, 10.0%[0m
2022/04/09 21:22:51 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:51 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:51 [91m                            $/progress: backgroundIndexProgress REPORT, 4/30, 13.0%[0m
2022/04/09 21:22:51 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:51 [91m                            $/progress: backgroundIndexProgress REPORT, 4/30, 13.0%[0m
2022/04/09 21:22:51 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:51 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:51 [91m                            $/progress: backgroundIndexProgress REPORT, 5/30, 16.0%[0m
2022/04/09 21:22:51 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:51 [91m                            $/progress: backgroundIndexProgress REPORT, 5/30, 16.0%[0m
2022/04/09 21:22:51 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:51 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:52 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:52 [91m                            $/progress: backgroundIndexProgress REPORT, 6/30, 20.0%[0m
2022/04/09 21:22:52 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:52 [91m                            $/progress: backgroundIndexProgress REPORT, 6/30, 20.0%[0m
2022/04/09 21:22:52 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:54 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:54 [91m                            $/progress: backgroundIndexProgress REPORT, 7/30, 23.0%[0m
2022/04/09 21:22:54 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:54 [91m                            $/progress: backgroundIndexProgress REPORT, 7/30, 23.0%[0m
2022/04/09 21:22:54 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:55 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:55 [91m                            $/progress: backgroundIndexProgress REPORT, 8/30, 26.0%[0m
2022/04/09 21:22:55 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:55 [91m                            $/progress: backgroundIndexProgress REPORT, 8/30, 26.0%[0m
2022/04/09 21:22:55 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:55 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:56 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:56 [91m                            $/progress: backgroundIndexProgress REPORT, 9/30, 30.0%[0m
2022/04/09 21:22:56 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:56 [91m                            $/progress: backgroundIndexProgress REPORT, 9/30, 30.0%[0m
2022/04/09 21:22:56 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:57 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:57 [91m                            $/progress: backgroundIndexProgress REPORT, 10/30, 33.0%[0m
2022/04/09 21:22:57 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:57 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:57 [91m                            $/progress: backgroundIndexProgress REPORT, 10/30, 33.0%[0m
2022/04/09 21:22:57 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:58 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:58 [91m                            $/progress: backgroundIndexProgress REPORT, 11/30, 36.0%[0m
2022/04/09 21:22:58 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:58 [91m                            $/progress: backgroundIndexProgress REPORT, 11/30, 36.0%[0m
2022/04/09 21:22:58 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:58 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:58 [91m                            $/progress: backgroundIndexProgress REPORT, 12/30, 40.0%[0m
2022/04/09 21:22:58 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:58 [91m                            $/progress: backgroundIndexProgress REPORT, 12/30, 40.0%[0m
2022/04/09 21:22:58 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:59 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:59 [91m                            $/progress: backgroundIndexProgress REPORT, 13/30, 43.0%[0m
2022/04/09 21:22:59 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:59 [91m                            $/progress: backgroundIndexProgress REPORT, 13/30, 43.0%[0m
2022/04/09 21:22:59 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:22:59 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:59 [91m                            $/progress: backgroundIndexProgress REPORT, 14/30, 46.0%[0m
2022/04/09 21:22:59 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:22:59 [91m                            $/progress: backgroundIndexProgress REPORT, 14/30, 46.0%[0m
2022/04/09 21:22:59 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:00 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:00 [91m                            $/progress: backgroundIndexProgress REPORT, 15/30, 50.0%[0m
2022/04/09 21:23:00 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:00 [91m                            $/progress: backgroundIndexProgress REPORT, 15/30, 50.0%[0m
2022/04/09 21:23:00 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:02 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:02 [91m                            $/progress: backgroundIndexProgress REPORT, 16/30, 53.0%[0m
2022/04/09 21:23:02 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:02 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:02 [91m                            $/progress: backgroundIndexProgress REPORT, 16/30, 53.0%[0m
2022/04/09 21:23:02 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:04 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:04 [91m                            $/progress: backgroundIndexProgress REPORT, 17/30, 56.0%[0m
2022/04/09 21:23:04 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:04 [91m                            $/progress: backgroundIndexProgress REPORT, 17/30, 56.0%[0m
2022/04/09 21:23:04 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:04 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:04 [91m                            $/progress: backgroundIndexProgress REPORT, 18/30, 60.0%[0m
2022/04/09 21:23:04 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:04 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:04 [91m                            $/progress: backgroundIndexProgress REPORT, 18/30, 60.0%[0m
2022/04/09 21:23:04 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:04 [91m                            $/progress: backgroundIndexProgress REPORT, 19/30, 63.0%[0m
2022/04/09 21:23:04 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:04 [91m                            $/progress: backgroundIndexProgress REPORT, 19/30, 63.0%[0m
2022/04/09 21:23:04 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:06 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:06 [91m                            $/progress: backgroundIndexProgress REPORT, 20/30, 66.0%[0m
2022/04/09 21:23:06 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:06 [91m                            $/progress: backgroundIndexProgress REPORT, 20/30, 66.0%[0m
2022/04/09 21:23:06 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:06 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:06 [91m                            $/progress: backgroundIndexProgress REPORT, 21/30, 70.0%[0m
2022/04/09 21:23:06 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:06 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:06 [91m                            $/progress: backgroundIndexProgress REPORT, 21/30, 70.0%[0m
2022/04/09 21:23:06 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:06 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:06 [91m                            $/progress: backgroundIndexProgress REPORT, 22/30, 73.0%[0m
2022/04/09 21:23:06 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:06 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:06 [91m                            $/progress: backgroundIndexProgress REPORT, 22/30, 73.0%[0m
2022/04/09 21:23:06 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:07 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:07 [91m                            $/progress: backgroundIndexProgress REPORT, 23/30, 76.0%[0m
2022/04/09 21:23:07 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:07 [91m                            $/progress: backgroundIndexProgress REPORT, 23/30, 76.0%[0m
2022/04/09 21:23:07 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:07 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:08 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:08 [91m                            $/progress: backgroundIndexProgress REPORT, 24/30, 80.0%[0m
2022/04/09 21:23:08 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:08 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:08 [91m                            $/progress: backgroundIndexProgress REPORT, 24/30, 80.0%[0m
2022/04/09 21:23:08 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:09 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:09 [91m                            $/progress: backgroundIndexProgress REPORT, 25/30, 83.0%[0m
2022/04/09 21:23:09 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:09 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:09 [91m                            $/progress: backgroundIndexProgress REPORT, 25/30, 83.0%[0m
2022/04/09 21:23:09 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:10 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:10 [91m                            $/progress: backgroundIndexProgress REPORT, 26/30, 86.0%[0m
2022/04/09 21:23:10 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:10 [91m                            $/progress: backgroundIndexProgress REPORT, 26/30, 86.0%[0m
2022/04/09 21:23:10 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:11 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:11 [91m                            $/progress: backgroundIndexProgress REPORT, 27/30, 90.0%[0m
2022/04/09 21:23:11 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:11 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:11 [91m                            $/progress: backgroundIndexProgress REPORT, 28/30, 93.0%[0m
2022/04/09 21:23:11 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:12 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:12 [91m                            $/progress: backgroundIndexProgress REPORT, 29/30, 96.0%[0m
2022/04/09 21:23:12 [92mIDE <-- LS NOTIF $/progress[0m
2022/04/09 21:23:14 [91mIDE     LS <-- Clangd NOTIF $/progress[0m
2022/04/09 21:23:14 [91m                            $/progress: backgroundIndexProgress END [0m
2022/04/09 21:23:14 [92mIDE <-- LS NOTIF $/progress[0m
